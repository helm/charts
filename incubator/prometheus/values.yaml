alertmanager:
  ## Alertmanager service port
  ## Default: 80
  ##
  # httpPort: 80

  ## Alertmanager service port name
  ## Default: 'http'
  ##
  # httpPortName: http

  ## Alertmanager Docker image
  ##
  image: prom/alertmanager:v0.4.2

  ingress:
    ## Alertmanager Ingress annotations
    ##
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## If true, Alertmanager Ingress will be created
    ##
    enabled: false

    ## Alertmanager Ingress hostnames
    ## Must be provided if Ingress is enabled
    ##
    # hosts:
    #   - hostName: alertmanager.domain.com

    ## Alertmanager Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    # tls:
    #   - secretName: prometheus-alerts-tls
    #     hosts:
    #       - alertmanager.domain.com

  ## Alertmanager resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    requests:
      cpu: 10m
      memory: 32Mi

  ## Alertmanager data storage path
  ## Default: '/data'
  ##
  # storage_path: /data

## Configmap-reload Docker image
##
configmap_reload_image: jimmidyson/configmap-reload:v0.1

## Global imagePullPolicy
## Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
## Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
# imagePullPolicy:

server:
  ## Server Pod annotations:
  ##
  # annotations
  #   iam.amazonaws.com/role: prometheus

  ## Additional Server container arguments
  ##
  extra_args:
    - --storage.local.max-chunks-to-persist=524288
    - --storage.local.memory-chunks=1048576
    - --storage.local.retention=360h0m0s
    - --web.external-url=http://prometheus.domain.com

  ## Server service port
  ## Default: 80
  ##
  # httpPort: 80

  ## Server service port name
  ## Default: 'http'
  ##
  # httpPortName: http

  ## Server Docker image
  ##
  image: prom/prometheus:v1.2.1

  ingress:
    ## Server Ingress annotations
    ##
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## If true, Server Ingress will be created
    ##
    enabled: false

    ## Server Ingress hostnames
    ## Must be provided if Ingress is enabled
    ##
    # hosts:
    #   - hostName: prometheus.domain.com

    ## Server Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    # tls:
    #   - secretName: prometheus-server-tls
    #     hosts:
    #       - prometheus.domain.com

  persistentVolume:
    ## Server data Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    # accessModes:
    #   - ReadWriteOnce

    ## Server data Persistent Volume annotations
    ##
    # annotations:
    #   volume.beta.kubernetes.io/storage-class: standard

    ## If true, Server will create a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: false

    ## Server data Persistent Volume size
    ##
    # size: 8Gi

  ## Server resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  ## Server local data storage path
  ## Default: '/data'
  ##
  # storage_local_path: /data

  ## Server Pod termination grace period
  ## Default: 300s (5m)
  ##
  # terminationGracePeriodSeconds: 300

## Alertmanager ConfigMap entries
##
alertmanager_files:
  alertmanager.yml: |
    global:
      # slack_api_url: ''

    receivers:
      - name: default-receiver
        # slack_configs:
        #  - channel: '@you'
        #    send_resolved: true

    route:
      group_wait: 10s
      group_interval: 5m
      receiver: default-receiver
      repeat_interval: 3h

## Server ConfigMap entries
##
server_files:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s

    rule_files:
      - /etc/config/rules
      - /etc/config/alerts

    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
  alerts: ""
  rules: ""
