apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "elassandra.fullname" . }}
  labels:
    app: {{ template "elassandra.name" . }}
    chart: {{ template "elassandra.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "elassandra.fullname" . }}
  replicas: {{ .Values.config.cluster_size }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "elassandra.name" . }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
{{- if .Values.selector }}
{{ toYaml .Values.selector | indent 6 }}
{{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ default 999 .Values.securityContext.fsGroup }}
        runAsUser: {{ default 999 .Values.securityContext.runAsUser }}
      {{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
      initContainers:
      - name: increase-vm-max-map-count
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=1048575"]
        securityContext:
          privileged: true
      - name: increase-ulimit
        image: busybox
        command: [ "sh","-c","ulimit -l unlimited" ]
        securityContext:
          privileged: true
      containers:
      - name: {{ template "elassandra.fullname" . }}
        image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        terminationMessagePolicy: "FallbackToLogsOnError"
        securityContext:
          privileged: false
          # applying fix in: https://github.com/kubernetes/kubernetes/issues/3595#issuecomment-287692878 
          # https://docs.docker.com/engine/reference/run/#operator-exclusive-options
          capabilities:
            add: ["IPC_LOCK", "SYS_RESOURCE"]
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- $seed_size := default 1 .Values.config.seed_size | int -}}
        {{- $global := . }}
        - name: CASSANDRA_SEEDS
          value: "{{- range $i, $e := until $seed_size }}{{ template "elassandra.fullname" $global }}-{{ $i }}.{{ template "elassandra.fullname" $global }}.{{ $global.Release.Namespace }}.svc.cluster.local{{- if (lt ( add1 $i ) $seed_size ) }},{{- end }}{{- end }}"
        - name: MAX_HEAP_SIZE
          value: {{ default "8192M" .Values.config.max_heap_size | quote }}
        - name: HEAP_NEWSIZE
          value: {{ default "200M" .Values.config.heap_new_size | quote }}
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: {{ default "GossipingPropertyFileSnitch" .Values.config.endpoint_snitch | quote }}
        - name: CASSANDRA_CLUSTER_NAME
          value: {{ default "Elassandra" .Values.config.cluster_name | quote }}
        - name: CASSANDRA_DC
          value: {{ default "DC1" .Values.config.dc_name | quote }}
        - name: CASSANDRA_RACK
          value: {{ default "RAC1" .Values.config.rack_name | quote }}
        - name: CASSANDRA_START_RPC
          value: {{ default "false" .Values.config.start_rpc | quote }}
        - name: CASSANDRA_DAEMON
          value: {{- if .Values.elasticsearch.enabled }} "org.apache.cassandra.service.ElassandraDaemon" {{ else }} "org.apache.cassandra.service.CassandraDaemon" {{- end }}
        - name: LOGBACK_org_elassandra_discovery
          value: "DEBUG"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath:  metadata.namespace
        livenessProbe:
          tcpSocket:
            port: 7000
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          exec:
            command: [ "/bin/bash", "-c", "/ready-probe.sh" ]
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        ports:
        - name: intra
          containerPort: 7000
        - name: tls
          containerPort: 7001
        - name: jmx
          containerPort: 7199
        - name: cql
          containerPort: {{ default 9042 .Values.config.ports.cql }}
        - name: thrift
          containerPort: {{ default 9160 .Values.config.ports.thrift }}
        - name: elasticsearch
          containerPort: {{ default 9200 .Values.config.ports.elasticsearch }}
        - name: transport
          containerPort: {{ default 9300 .Values.config.ports.transport }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra
        {{- if not .Values.persistence.enabled }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "exec nodetool decommission"]
        {{ else }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "exec nodetool drain"]
        {{- end }}
      terminationGracePeriodSeconds: {{ default 30 .Values.podSettings.terminationGracePeriodSeconds }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
{{- if not .Values.persistence.enabled }}
      volumes:
      - name: data
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "elassandra.name" . }}
        chart: {{ template "elassandra.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
{{- end }}
