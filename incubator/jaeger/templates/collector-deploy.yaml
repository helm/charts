{{- if .Values.collector.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "jaeger.collector.name" . }}
  labels:
    app: {{ template "jaeger.name" . }}
    jaeger-infra: collector-deployment
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: collector
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
{{- if .Values.collector.annotations }}
  annotations:
{{ toYaml .Values.collector.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.collector.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "jaeger.name" . }}
        component: collector
        release: {{ .Release.Name }}
        jaeger-infra: collector-pod
{{- if .Values.collector.podLabels }}
{{ toYaml .Values.collector.podLabels | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{ toYaml .Values.collector.nodeSelector | indent 8 }}
      containers:
      - name: {{ template "jaeger.collector.name" . }}
        image: {{ .Values.collector.image }}:{{ .Values.collector.tag }}
        imagePullPolicy: {{ .Values.collector.pullPolicy }}
        env:
          - name: SPAN_STORAGE_TYPE
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: span-storage.type
          {{- if eq .Values.storage.type "cassandra" }}
          - name: CASSANDRA_SERVERS
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: cassandra.servers
          - name: CASSANDRA_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: cassandra.port
          - name: CASSANDRA_KEYSPACE
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: cassandra.keyspace
          {{- end }}
          {{- if eq .Values.storage.type "elasticsearch" }}
          - name: ES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: es.password
          - name: ES_SERVER_URLS
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: es.server-urls
          - name: ES_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: es.username
          {{- end }}
          - name: COLLECTOR_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: collector.port
          - name: COLLECTOR_HTTP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: collector.http-port
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ template "jaeger.fullname" . }}
                key: collector.zipkin.http-port
        ports:
        - containerPort: {{ .Values.collector.service.tchannelPort }}
          name: tchannel
          protocol: TCP
        - containerPort: {{ .Values.collector.service.httpPort }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.collector.service.zipkinPort }}
          name: zipkin
          protocol: TCP
        resources:
{{ toYaml .Values.collector.resources | indent 10 }}
      dnsPolicy: {{ .Values.collector.dnsPolicy }}
      restartPolicy: Always
{{- end -}}
