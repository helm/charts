{{- if .Values.agent.enabled -}}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "jaeger.agent.name" . }}
  labels:
    app: {{ template "jaeger.name" . }}
    jaeger-infra: agent-daemonset
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: agent
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
{{- if .Values.agent.annotations }}
  annotations:
{{ toYaml .Values.agent.annotations | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "jaeger.name" . }}
        component: agent
        release: {{ .Release.Name }}
        jaeger-infra: agent-instance
{{- if .Values.agent.podLabels }}
{{ toYaml .Values.agent.podLabels | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.agent.useHostNetwork }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: {{ .Values.agent.dnsPolicy }}
      nodeSelector:
{{ toYaml .Values.agent.nodeSelector | indent 8 }}
      containers:
      - name: {{ template "jaeger.agent.name" . }}
        image: {{ .Values.agent.image }}:{{ .Values.tag }}
        imagePullPolicy: {{ .Values.agent.pullPolicy }}
        env:
        - name: COLLECTOR_HOST_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ template "jaeger.fullname" . }}
              key: collector.host-port
        {{- range $key, $value := .Values.agent.cmdlineParams }}
        - name: {{ $key | replace "." "_" | replace "-" "_" | upper | quote }}
          value: {{ $value }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.agent.service.zipkinThriftPort }}
          protocol: UDP
          {{- if .Values.agent.daemonset.useHostPort }}
          hostPort: {{ .Values.agent.service.zipkinThriftPort }}
          {{- end }}
        - containerPort: {{ .Values.agent.service.compactPort }}
          protocol: UDP
          {{- if .Values.agent.daemonset.useHostPort }}
          hostPort: {{ .Values.agent.service.compactPort }}
          {{- end }}
        - containerPort: {{ .Values.agent.service.binaryPort }}
          protocol: UDP
          {{- if .Values.agent.daemonset.useHostPort }}
          hostPort: {{ .Values.agent.service.binaryPort }}
          {{- end }}
        - containerPort: {{ .Values.agent.service.samplingPort }}
          protocol: TCP
          {{- if .Values.agent.daemonset.useHostPort }}
          hostPort: {{ .Values.agent.service.samplingPort }}
          {{- end }}
        resources:
{{ toYaml .Values.agent.resources | indent 10 }}
{{- end -}}
