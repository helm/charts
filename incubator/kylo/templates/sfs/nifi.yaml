apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "kylo.fullname" . }}-nifi
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "kylo.name" . }}-nifi
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "kylo.fullname" . }}-nifi-headless
  replicas: {{ .Values.nifi.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "kylo.name" . }}-nifi
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - name: {{ template "kylo.name" . }}-nifi-server
        imagePullPolicy: {{ .Values.nifi.image.pullPolicy | quote }}
        image: "{{ .Values.nifi.image.repository }}:{{ .Values.nifi.image.tag }}"
        resources:
{{ toYaml .Values.nifi.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.nifi.properties.httpPort }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.nifi.properties.cluster.port }}
          name: cluster
          protocol: TCP
        env:
        - name: NIFI_ZOOKEEPER_CONNECT_STRING
          value: {{ template "zookeeper.url" . }}
        - name: TRUSTSTORE_PASS
          value: {{ .Values.truststorePass }}
        - name: KEYSTORE_PASS
          value: {{ .Values.keystorePass }}
        - name: OU
          value: "NiFi"
        - name: HADOOP_CONF_DIR
          value: /etc/hadoop/conf:/opt/spark/conf
        - name: HOST
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HEADLESS
          value: {{ template "kylo.fullname" . }}-nifi-headless
        volumeMounts:
          - name: "flowfile-repository"
            mountPath: /opt/nifi/flowfile_repository
          - name: "content-repository"
            mountPath: /opt/nifi/content_repository
          - name: "provenance-repository"
            mountPath: /opt/nifi/provenance_repository
          - name: "logs"
            mountPath: /opt/nifi/logs
          - name: "issue-attributes-1000-rows"
            mountPath: /opt/fake_data/Issue_Attribute_1000_rows_2018-05-04-13-52-58.csv
            subPath: "Issue_Attribute_1000_rows_2018-05-04-13-52-58.csv"
          - name: "bootstrap-conf"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/bootstrap.conf
            subPath: "bootstrap.conf"
          - name: "core-site"
            mountPath: /etc/hadoop/conf/core-site.xml
            subPath: "core-site.xml"
          - name: "hdfs-site"
            mountPath: /etc/hadoop/conf/hdfs-site.xml
            subPath: "hdfs-site.xml"
          - name: "hive-site"
            mountPath: /opt/spark/conf/hive-site.xml
            subPath: "hive-site.xml"
          - name: "spark-defaults-conf"
            mountPath: /opt/spark/conf/spark.defaults.conf
            subPath: "spark.defaults.conf"
          - name: "nifi-properties"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/nifi.temp
            subPath: "nifi.temp"
          - name: "authorizers-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/authorizers.xml
            subPath: "authorizers.xml"
          - name: "bootstrap-notification-services-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/bootstrap-notification-services.xml
            subPath: "bootstrap-notification-services.xml"
          - name: "logback-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/logback.xml
            subPath: "logback.xml"
          - name: "login-identity-providers-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/login-identity-providers.xml
            subPath: "login-identity-providers.xml"
          - name: "state-management-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/state-management.xml
            subPath: "state-management.xml"
          - name: "zookeeper-properties"
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/conf/zookeeper.properties
            subPath: "zookeeper.properties"
          - name: nifi-kylo
            mountPath: /opt/nifi/nifi-{{ .Values.nifi.image.version }}/ext-config/config.properties
            subPath: "config.properties"
      - name: nifi-app-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-app.log']
        volumeMounts:
        - name: logs
          mountPath: /var/log
      - name: nifi-bootstrap-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-bootstrap.log']
        volumeMounts:
        - name: logs
          mountPath: /var/log
      - name: nifi-user-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-user.log']
        volumeMounts:
        - name: logs
          mountPath: /var/log
      initContainers:
        - name: copy-nifi-templates
          image: busybox:1.27.1
          command: ['sh', '-c']
          args:
            - mkdir -p /opt/nifi/data/templates && cp /templates/hello-world.xml /opt/nifi/data/templates/
          volumeMounts:
            - name: "data"
              mountPath: /opt/nifi/data
            - name: "templates"
              mountPath: /templates
      volumes:
      - name: "issue-attributes-1000-rows"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "Issue_Attribute_1000_rows_2018-05-04-13-52-58.csv"
              path: "Issue_Attribute_1000_rows_2018-05-04-13-52-58.csv"
      - name: "templates"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "hello-world.xml"
              path: "hello-world.xml"
      - name: "bootstrap-conf"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "bootstrap.conf"
              path: "bootstrap.conf"
      - name: "core-site"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "core-site.xml"
              path: "core-site.xml"
      - name: "hdfs-site"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "hdfs-site.xml"
              path: "hdfs-site.xml"
      - name: "hive-site"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "hive-site.xml"
              path: "hive-site.xml"
      - name: "spark-defaults-conf"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "spark.defaults.conf"
              path: "spark.defaults.conf"
      - name: "nifi-properties"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "nifi.properties"
              path: "nifi.temp"
      - name: "authorizers-xml"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "authorizers.xml"
              path: "authorizers.xml"
      - name: "bootstrap-notification-services-xml"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "bootstrap-notification-services.xml"
              path: "bootstrap-notification-services.xml"
      - name: "logback-xml"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "logback.xml"
              path: "logback.xml"
      - name: "login-identity-providers-xml"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "login-identity-providers.xml"
              path: "login-identity-providers.xml"
      - name: "state-management-xml"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "state-management.xml"
              path: "state-management.xml"
      - name: "zookeeper-properties"
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi
          items:
            - key: "zookeeper.properties"
              path: "zookeeper.properties"
      - name: nifi-kylo
        configMap:
          name: {{ template "kylo.fullname" . }}-nifi-kylo
          items:
            - key: "config.properties"
              path: "config.properties"
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.nifi.persistence.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.nifi.persistence.dataStorage }}
    - metadata:
        name: "flowfile-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.nifi.persistence.flowfileRepoStorage }}
    - metadata:
        name: "content-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.nifi.persistence.contentRepoStorage }}
    - metadata:
        name: "provenance-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.nifi.persistence.provenanceRepoStorage }}
    - metadata:
        name: "logs"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.nifi.persistence.logStorage }}
