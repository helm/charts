{{- $image := .Values.image -}}
{{- $cluster := .Values.cluster -}}
{{- $elasticsearchName :=  include "elasticsearch.name" . -}}
{{- $elasticsearchFullName :=  include "elasticsearch.fullname" . -}}
{{- $chartName := .Chart.Name -}}
{{- $chartVersion := .Chart.Version -}}
{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- range $data := .Values.dataTypes -}}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ $elasticsearchName }}
    chart: {{ $chartName }}-{{ $chartVersion }}
    component: "{{ $data.name }}"
    heritage: {{ $releaseService }}
    release: {{ $releaseName }}
  name: {{ $elasticsearchFullName }}-{{ $data.name }}
spec:
  serviceName: {{ $elasticsearchFullName }}-{{ $data.name }}
  replicas: {{ $data.replicas }}
  template:
    metadata:
      labels:
        app: {{ $elasticsearchName }}
        component: "{{ $data.name }}"
        release: {{ $releaseName }}
        {{- if $data.podAnnotations }}
      annotations:
{{ toYaml $data.podAnnotations | indent 8 }}
        {{- end }}
    spec:
{{- if $data.priorityClassName }}
      priorityClassName: "{{ $data.priorityClassName }}"
{{- end }}
      securityContext:
        fsGroup: 1000
      {{- if eq $data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ $elasticsearchName }}"
                  release: "{{ $releaseName }}"
                  component: "{{ $data.name }}"
      {{- else if eq $data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "{{ $elasticsearchName }}"
                  release: "{{ $releaseName }}"
                  component: "{{ $data.name }}"
      {{- end }}
{{- if $data.nodeSelector }}
      nodeSelector:
{{ toYaml $data.nodeSelector | indent 8 }}
{{- end }}
{{- if $data.tolerations }}
      tolerations:
{{ toYaml $data.tolerations | indent 8 }}
{{- end }}
      initContainers:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      - name: "sysctl"
        image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
        imagePullPolicy: {{ .Values.initImage.pullPolicy | quote }}
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: "chown"
        image: "{{ $image.repository }}:{{ $image.tag }}"
        imagePullPolicy: {{ $image.pullPolicy | quote }}
        command:
        - /bin/bash
        - -c
        - chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &&
          chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/logs
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: {{ $data.persistence.name }}
      containers:
      - name: elasticsearch
        env:
        - name: DISCOVERY_SERVICE
          value: {{ $elasticsearchFullName }}-discovery
        - name: NODE_MASTER
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.data.heapSize }} -Xmx{{ .Values.data.heapSize }} {{ .Values.cluster.additionalJavaOpts }}"
        {{- range $key, $value :=  $cluster.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        image: "{{ $image.repository }}:{{ $image.tag }}"
        imagePullPolicy: {{ $image.pullPolicy | quote }}
        ports:
        - containerPort: 9300
          name: transport
{{ if $data.exposeHttp }}
        - containerPort: 9200
          name: http
{{ end }}
        resources:
{{ toYaml $data.resources | indent 12 }}
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: {{ $data.persistence.name }}
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config-{{ $data.name }}
          subPath: elasticsearch.yml
{{- if hasPrefix "2." $image.tag }}
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config-{{ $data.name }}
          subPath: logging.yml
{{- end }}
{{- if hasPrefix "5." $image.tag }}
        - mountPath: /usr/share/elasticsearch/config/log4j2.properties
          name: config-{{ $data.name }}
          subPath: log4j2.properties
{{- end }}
        - name: config-{{ $data.name }}
          mountPath: /pre-stop-hook.sh
          subPath: pre-stop-hook.sh
        - name: config-{{ $data.name }}
          mountPath: /post-start-hook.sh
          subPath: post-start-hook.sh
{{- if $cluster.keystoreSecret }}
        - name: keystore
          mountPath: "/usr/share/elasticsearch/config/elasticsearch.keystore"
          subPath: elasticsearch.keystore
          readOnly: true
{{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash","/pre-stop-hook.sh"]
          postStart:
            exec:
              command: ["/bin/bash","/post-start-hook.sh"]
      terminationGracePeriodSeconds: {{ $data.terminationGracePeriodSeconds }}
{{- if $image.pullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := $image.pullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
      volumes:
      - name: config-{{ $data.name }}
        configMap:
          name: {{ $elasticsearchFullName }}-{{ $data.name }}
{{- if $cluster.keystoreSecret }}
      - name: keystore
        secret:
          secretName: {{ $cluster.keystoreSecret }}
{{- end }}
  {{- if not $data.persistence.enabled }}
      - name: {{ $data.persistence.name }}
        emptyDir: {}
  {{- end }}
  updateStrategy:
    type: {{ $data.updateStrategy.type }}
  {{- if $data.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ $data.persistence.name }}
    spec:
      accessModes:
        - {{ $data.persistence.accessMode | quote }}
    {{- if $data.persistence.storageClass }}
    {{- if (eq "-" $data.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ $data.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: "{{ $data.persistence.size }}"
  {{- end }}
---
{{- end }}
