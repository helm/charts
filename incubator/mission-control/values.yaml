# Default values for Mission Control.
# This is a YAML-formatted file.
# Beware when changing values here. You should know what you are doing!
# Access the values with {{ .Values.key.subkey }}

# Common
initContainerImage: "alpine:3.6"
imagePullPolicy: IfNotPresent

global:
  imagePullSecrets:

# Sub charts
## Configuration values for the mongodb dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/mongodb/README.md
##
mongodb:
  enabled: true
  image:
    tag: 3.6.3
    pullPolicy: IfNotPresent
  persistence:
    size: 50Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "2Gi"
      cpu: "250m"
  ## Make sure the --wiredTigerCacheSizeGB is no more than half the memory limit!
  ## This is critical to protect against OOMKill by Kubernetes!
  mongodbExtraFlags:
  - "--wiredTigerCacheSizeGB=1"
  usePassword: false
  db:
    adminUser: admin
    adminPassword: password
    mcUser: mission_platform
    mcPassword: password
    insightUser: jfrog_insight
    insightPassword: password
    insightSchedulerDb: insight_scheduler
  livenessProbe:
    initialDelaySeconds: 40
  readinessProbe:
    initialDelaySeconds: 30

elasticsearch:
  enabled: true
  persistence:
    size: 50Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "250m"

podRestartTime:

missionControl:
  replicaCount: 1
  name: mission-control
  image: docker.bintray.io/jfrog/mission-control
  version: 3.0.0
  missionControlUrl:
  podRestartTime:
  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    mountPath: "/var/opt/jfrog/mission-control"
    accessMode: ReadWriteOnce
    size: 100Gi
    ## artifactory data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

  ## Control Java options (JAVA_OPTIONS)
  ## IMPORTANT: keep javaOpts.xmx no higher than resources.limits.memory
  javaOpts:
    other: "-server -XX:+UseG1GC -Dfile.encoding=UTF8"
    xms: "1g"
    xmx: "2g"
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "1"
  service:
    type: LoadBalancer
  internalPort: 8080
  externalPort: 8080


insightServer:
  replicaCount: 1
  name: insight-server
  image: docker.bintray.io/jfrog/insight-server
  version: 3.0.0
  service:
    name: insight-server
    type: ClusterIP
  externalHttpPort: 8082
  internalHttpPort: 8082
  externalHttpsPort: 8091
  internalHttpsPort: 8091
  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"

insightScheduler:
  replicaCount: 1
  name: insight-scheduler
  image: docker.bintray.io/jfrog/insight-scheduler
  version: 3.0.0
  service:
    type: ClusterIP
  externalPort: 8080
  internalPort: 8080
  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "1"

insightExecutor:
  replicaCount: 1
  name: insight-executor
  image: docker.bintray.io/jfrog/insight-executor
  version: 3.0.0
  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    mountPath: "/var/cloudbox"
    accessMode: ReadWriteOnce
    size: 100Gi
    ## artifactory data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

  service:
    type: ClusterIP
  externalPort: 8080
  internalPort: 8080

  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "1"
