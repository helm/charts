{{- if .Values.ingress.enabled }}
* Get the application URL by running these commands:
{{- range .Values.ingress.hosts }}
  http://{{ . }}
{{- end }}

{{- else if not .Values.ingress.enabled }}
* Test on localhost with the following commands:
export POD_NAME=`kubectl get pod -l "app=goldfish" \
-o jsonpath="{.items[0].metadata.name}"`

export POD_PORT =`kubectl get pod -l "app=goldfish" \
-o jsonpath="{.items[0].spec.containers[0].ports[0].containerPort}"`

kubectl port-forward $POD_NAME $POD_NAME

Then go to your browser and access http://localhost:$POD_NAME


{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "goldfish.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT

{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "goldfish.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "goldfish.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.externalPort }}

{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "goldfish.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:{{ .Values.service.externalPort }}
{{- end }}
