1. After the petset is created completely, one can check which instance is primary by running:
	$ for i in `seq 0 2`; do kubectl exec  {{ printf "%s-%s" .Release.Name .Values.Name | trunc 24 }}-$i -- sh -c '/usr/bin/mongo --eval="printjson(rs.isMaster())"'; done.
	This assumes 3 replicas, 0 through 2. It should be modified to reflect the actual number of replicas specified.

2. One can insert a key into the primary instance of the mongodb replica set by running the following:
	$ kubectl exec MASTER_POD_NAME -- /usr/bin/mongo --eval="printjson(db.test.insert({key1: 'value1'}))"
	MASTER_POD_NAME must be replaced with the name of the master found from the previous step.

3. One can fetch the keys stored in the primary or any of the slave nodes in the following manner.
	$ kubectl exec POD_NAME -- /usr/bin/mongo --eval="rs.slaveOk(); db.test.find().forEach(printjson)"
	POD_NAME must be replaced by the name of the pod being queried.
