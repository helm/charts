apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-server
  labels:
    app: {{ template "fullname" . }}-server
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-server
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
      - name: {{ template "fullname" . }}-server
        image: {{ .Values.image }}
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
          {{ if .Values.ssl.enabled }}
          - name: DRONE_SERVER_ADDR
            value: ":443"
          - name: DRONE_SERVER_CERT
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.ssl.cert
          - name: DRONE_SERVER_KEY
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.ssl.key
          {{ else }}
          - name: DRONE_SERVER_ADDR
            value: ":80"
          {{ end }}
          - name: DRONE_DEBUG
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.debug.is.enabled
          - name: DRONE_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: server.secret
          - name: DRONE_DATABASE_DRIVER
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.database.driver
          - name: DRONE_DATABASE_DATASOURCE
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.database.config
          - name: DRONE_OPEN
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.is.open
          - name: DRONE_ORGS
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.orgs.list
          - name: DRONE_ADMIN
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.admin.list
          - name: DRONE_ADMIN_ALL
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: server.admin.everyone.is.admin
{{ if .Values.remote.github.enabled }}
          - name: DRONE_GITHUB
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.is.enabled
          - name: DRONE_GITHUB_URL
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.url
          - name: DRONE_GITHUB_CLIENT
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.client.id
          - name: DRONE_GITHUB_SECRET
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.client.secret
          - name: DRONE_GITHUB_SCOPE
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.scope
          - name: DRONE_GITHUB_PRIVATE_MODE
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.private_mode
          - name: DRONE_GITHUB_MERGE_REF
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.merge_ref
          - name: DRONE_GITHUB_CONTEXT
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.context
          - name: DRONE_GITHUB_SKIP_VERIFY
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.skip_verify
  {{ if .Values.remote.github.git_username }}
          - name: DRONE_GITHUB_GIT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.git_username
          - name: DRONE_GITHUB_GIT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.github.git_password
  {{ end }}
{{ else if .Values.remote.gogs.enabled }}
          - name: DRONE_GOGS
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.is.enabled
          - name: DRONE_GOGS_URL
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.url
          - name: DRONE_GOGS_PRIVATE_MODE
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.private_mode
          - name: DRONE_GOGS_SKIP_VERIFY
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.skip_verify
  {{ if .Values.remote.gogs.git_username }}
          - name: DRONE_GOGS_GIT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.git_username
          - name: DRONE_GOGS_GIT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gogs.git_password
  {{ end }}
{{ else if .Values.remote.gitlab.enabled }}
          - name: DRONE_GITLAB
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.is.enabled
          - name: DRONE_GITLAB_URL
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.url
          - name: DRONE_GITLAB_CLIENT
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.client.id
          - name: DRONE_GITLAB_SECRET
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.client.secret
          - name: DRONE_GITLAB_PRIVATE_MODE
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.private_mode
          - name: DRONE_GITLAB_SKIP_VERIFY
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.skip_verify
  {{ if .Values.remote.gitlab.git_username }}
          - name: DRONE_GITLAB_GIT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.git_username
          - name: DRONE_GITLAB_GIT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.gitlab.git_password
  {{ end }}
  remote.gitlab.is.enabled: "true"
  remote.gitlab.url: {{ .Values.remote.gitlab.url }}
  remote.gitlab.client.id: {{ .Values.remote.gitlab.client_id }}
  remote.gitlab.client.secret: {{ .Values.remote.gitlab.client_secret }}
  remote.github.private_mode: {{ .Values.remote.gitlab.private_mode }}
  remote.github.skip_verify: {{ .Values.remote.gitlab.skip_verify }}
  {{ if .Values.remote.gitlab.git_username }}
  remote.github.git.username: {{ .Values.remote.gitlab.git_username }}
  remote.github.git.password: {{ .Values.remote.gitlab.git_password }}
  {{ end }}
{{ else if .Values.remote.bitbucket.enabled }}
          - name: DRONE_BITBUCKET
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.bitbucket.is.enabled
          - name: DRONE_BITBUCKET_CLIENT
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.bitbucket.client.id
          - name: DRONE_BITBUCKET_SECRET
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.bitbucket.client.secret
{{ else if .Values.remote.stash.enabled }}
          - name: DRONE_STASH
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.is.enabled
          - name: DRONE_GITHUB_URL
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.url
          - name: DRONE_STASH_CONSUMER_KEY
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.consumer.key
          - name: DRONE_STASH_CONSUMER_RSA
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.consumer.rsa
  {{ if .Values.remote.stash.git_username }}
          - name: DRONE_STASH_GIT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.git_username
          - name: DRONE_STASH_GIT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ template "fullname" . }}
                key: remote.stash.git_password
  {{ end }}
{{ end }}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /
            port: http
          # This pod takes a very long time to start up. Be cautious when
          # lowering this value to avoid Pod death during startup.
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - mountPath: /var/lib/drone
          name: data
        {{- if .Values.ssl.enabled }}
        - mountPath: /ssl
          name: ssl
        {{- end }}
        resources:
{{ toYaml .Values.server.resources | indent 10 }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- if .Values.ssl.enabled }}
      - name: ssl
        secret:
          secretName: {{ template "fullname" . }}-default-cert
      {{- end }}
