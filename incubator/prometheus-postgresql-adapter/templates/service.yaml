apiVersion: v1
kind: Service
metadata:
{{- if .Values.service.annotations }}
  annotations:
{{ toYaml .Values.service.annotations | indent 4 }}
{{- end }}
  name: {{ include "prometheus-postgresql-adapter.fullname" . }}
  labels:
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/name: "{{ include "prometheus-postgresql-adapter.name" . }}"
    helm.sh/chart: "{{ include "prometheus-postgresql-adapter.chart" . }}"
spec:
  type: "{{ .Values.service.type }}"
  clusterIP: "{{ .Values.service.clusterIP }}"
{{- if .Values.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.service.externalIPs | indent 4 }}
{{- end }}
{{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: "{{ .Values.service.loadBalancerIP }}"
{{- end }}
{{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.service.loadBalancerSourceRanges | indent 4 }}
{{- end }}
{{- if (or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort")) }}
  externalTrafficPolicy: "{{ .Values.service.externalTrafficPolicy }}"
{{- end }}
  ports:
    - name: http
{{- if and (eq "NodePort" .Values.service.type) (hasKey .Values.service "nodePort") }}
      nodePort: {{ .Values.service.nodePort }}
{{- end }}
      port: {{ .Values.service.port }}
      protocol: "TCP"
      targetPort: {{ .Values.webListenAddress }}
  selector:
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/name: "{{ include "prometheus-postgresql-adapter.name" . }}"
