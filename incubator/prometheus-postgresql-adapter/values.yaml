## prometheus-postgresql-adapter image version
## ref: https://hub.docker.com/r/timescale/prometheus-postgresql-adapter/tags/
##

####################
# Adapter settings #
####################

adapter:
  # Default application values
  logLevel: debug
  pgDatabase: postgres
  pgHost: localhost
  pgPort: 5432
  pgUser: postgres
  webListenAddress: 9201
  webTelemetryPath: /metrics

  # Pod affinity definitions
  affinity: {}

  # Deployment annotations
  deploymentAnnotations: {}

  # Extra key / value pairs
  extraArgs: {}

  # Extra environment variables
  extraEnv: {}

  # Docker image information
  image:
    repository: timescale/prometheus-postgresql-adapter
    tag: 0.4.1
    pullPolicy: IfNotPresent

  # Liveness probe settings
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 15
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 2

  # Node selector definitons
  nodeSelector: {}

  # Deployment annotations
  podAnnotations: {}

  # Prometheus configuration
  prometheus:
    # Enable standard Prometheus scrape annotations
    exporter:
      enabled: true
      probe: true
      scrape: true
    operator:
      enabled: false
      honorLabels: true
      interval: "20s"
      labels: {}
      # namespace: ""

  # Readiness probe settings
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2

  # Number of pods
  replicaCount: 1

  # Default resource allocations
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Service settings
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    externalTrafficPolicy: Cluster
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nodePort: ""
    type: ClusterIP

  # Node tolerations
  tolerations: []

####################
# CronJob settings #
####################

cronjob:
  # Pod affinity definitions
  affinity: {}

  # Cronjob annotations
  annotations: {}

  # Query to run for data retention
  cleanQuery: "SELECT drop_chunks(interval '24 hours');"

  # Enable / disable data retention cleanup functionality
  enabled: false

  # Extra environment variables
  extraEnv: {}

  # Limit of failed jobs to keep in history
  failedJobsHistoryLimit: 5

  # Docker image information
  image:
    pullPolicy: IfNotPresent
    repository: postgres
    tag: alpine

  # Node selector definitons
  nodeSelector: {}

  # Default resource allocations
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Cron job restart policy
  restartPolicy: OnFailure

  # Cron job schedule
  schedule: "*/5 * * * *"

  # Limit of successful jobs to keep in history
  successfulJobsHistoryLimit: 5

  # Node tolerations
  tolerations: []
