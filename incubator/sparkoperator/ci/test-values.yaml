operatorImageName: gcr.io/spark-operator/spark-operator
operatorVersion: v1beta2-1.1.0-2.4.5
imagePullPolicy: IfNotPresent
imagePullSecrets: []

rbac:
  create: true

serviceAccounts:
  spark:
    create: true
    name:
  sparkoperator:
    create: true
    name:

sparkJobNamespace: ""
installCrds: true
controllerThreads: 10
resyncInterval: 30
ingressUrlFormat: ""
logLevel: 2

securityContext: {}

enableWebhook: false
webhookPort: 8080

enableMetrics: true
metricsPort: 10254
metricsEndpoint: "/metrics"
metricsPrefix: ""

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

podAnnotations: {}

## Resources for the sparkoperator deployment
## Ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
##
resources: {}

## Whether to enable batch scheduler for pod scheduling,
## if enabled, end user can specify batch scheduler name in spark application.
enableBatchScheduler: false

## Whether to enable the ResourceQuota enforcement for SparkApplication resources.
## Requires the webhook to be enabled by setting enableWebhook to true.
## Ref: https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/user-guide.md#enabling-resource-quota-enforcement.
enableResourceQuotaEnforcement: false

## Whether to enable leader election when the operator Deployment has more than one replica.
## Only applicable when `replicas` is set to a value greater than 1.
## Ref: https://github.com/GoogleCloudPlatform/spark-on-k8s-operator/blob/master/docs/user-guide.md#enabling-leader-election-for-high-availability.
leaderElection:
  enable: false
  lockName: "spark-operator-lock"
  ## Optionally store the lock in another namespace. Defaults to operator's namespace
  # lockNamespace: ""
replicas: 1
