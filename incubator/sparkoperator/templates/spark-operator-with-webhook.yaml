{{ if eq .Values.enableWebhook true }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sparkoperator
  namespace: {{ .Values.operatorNamespace }}
  labels:
    app.kubernetes.io/name: sparkoperator
    app.kubernetes.io/version: {{ .Values.operatorVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sparkoperator
      app.kubernetes.io/version: {{ .Values.operatorVersion }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sparkoperator
        app.kubernetes.io/version: {{ .Values.operatorVersion }}
      initializers:
        pending: []
    spec:
      serviceAccountName: sparkoperator
      volumes:
        - name: webhook-certs
          secret:
            secretName: spark-webhook-certs
      containers:
      - name: sparkoperator
        image: gcr.io/spark-operator/spark-operator:{{ .Values.operatorVersion }}
        imagePullPolicy: Always
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook-certs
        command: ["/usr/bin/spark-operator"]
        args:
        - -logtostderr
        - -enable-webhook=true
---
kind: Service
apiVersion: v1
metadata:
  name: spark-webhook
  namespace: {{ .Values.operatorNamespace }}
spec:
  ports:
    - port: 443
      targetPort: 8080
      name: webhook
  selector:
    app.kubernetes.io/name: sparkoperator
    app.kubernetes.io/version: {{ .Values.operatorVersion }}
{{ end }}
