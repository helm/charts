# If using admission webhooks, then do not create the namespace
# because it is assumed that the user has manually created the namespace
# and then run hack/gencerts.sh to generate secrets in the namespace.
{{ if eq .Values.enableWebhook false }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.operatorNamespace }}
{{ end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sparkoperator
  namespace: {{ .Values.operatorNamespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: sparkoperator
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["services", "configmaps"]
  verbs: ["create", "get", "delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["sparkoperator.k8s.io"]
  resources: ["sparkapplications", "scheduledsparkapplications"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: sparkoperator
subjects:
  - kind: ServiceAccount
    name: sparkoperator
    namespace: {{ .Values.operatorNamespace }}
roleRef:
  kind: ClusterRole
  name: sparkoperator
  apiGroup: rbac.authorization.k8s.io
