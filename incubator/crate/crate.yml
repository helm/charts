apiVersion: v1
kind: Service
metadata:
  name: crate
  labels:
    app: crate
spec:
  ports:
  - port: {{ .Values.service.adminPort }}
    name: {{ .Values.service.adminName }}
  - port: {{ .Values.service.clusterPort }}
    name: {{ .Values.service.clusterName }}
  - port: {{ .Values.service.postgresPort }}
    name: {{ .Values.service.postgresName }}
  type: {{ .Values.service.type }}
  selector:
    app: crate
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: crate
spec:
  serviceName: "crate-db"
  replicas: {{ .Values.crate.replicas }}
  template:
    metadata:
      labels:
        app: crate
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        # https://crate.io/docs/crate/guide/en/latest/admin/bootstrap-checks.html
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: crate
        image: crate:latest
        command:
          - /docker-entrypoint.sh
          - -Clicense.enterprise=false
          - -Ccluster.name=${CLUSTER_NAME}
          - -Cnetwork.host=0.0.0.0
          - -Cdiscovery.zen.hosts_provider=srv
          - -Cdiscovery.zen.minimum_master_nodes=${MINIMUM_MASTER_NODES}
          - -Cdiscovery.srv.query=_cluster._tcp.crate.{{ .Release.Namespace }}.svc.cluster.local
          - -Cgateway.recover_after_nodes=${RECOVER_AFTER_NODES}
          - -Cgateway.recover_after_time=5m
          - -Cgateway.expected_nodes=${EXPECTED_NODES}
        volumeMounts:
            - mountPath: /data
              name: data
        resources:
          limits:
            memory: 2Gi
        ports:
        - containerPort: {{ .Values.service.adminPort }}
          name: {{ .Values.service.adminName }}
        - containerPort: {{ .Values.service.clusterPort }}
          name: {{ .Values.service.clusterName }}
        - containerPort: {{ .Values.service.postgresPort }}
          name: {{ .Values.service.postgresName }}
        env:
        - name: CRATE_HEAP_SIZE
          value: {{ .Values.crate.crateHeapSize }}
        - name: EXPECTED_NODES
          value: {{ .Values.crate.replicas }}
        - name: CLUSTER_NAME
          value: {{ .Values.crate.clusterName }}
        - name: RECOVER_AFTER_NODES
          value: {{ .Values.crate.recoverAfterNodes }}
        - name: MINIMUM_MASTER_NODES
          value: {{ .Values.crate.minimumMasterNodes }}
      volumes:
        - name: data
          emptyDir:
            medium: "Memory"
