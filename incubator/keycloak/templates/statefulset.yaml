apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "keycloak.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    app: {{ template "keycloak.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.keycloak.replicas }}
  serviceName: {{ template "keycloak.fullname" . }}-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "keycloak.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      serviceAccountName: {{ template "keycloak.serviceAccountName" . }}
    {{- if .Values.keycloak.persistence.deployPostgres }}
      initContainers:
        - name: wait-for-postgresql
          image: "{{ .Values.hyperkube.image.repository }}:{{ .Values.hyperkube.image.tag }}"
          imagePullPolicy: "{{ .Values.hyperkube.image.pullPolicy }}"
          command:
            - "bash"
            - "-c"
            - "/scripts/wait_for_postgresql.sh app={{ template "keycloak.postgresql.fullname" . }}"
          volumeMounts:
            - name: scripts
              mountPath: /scripts
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          command:
            - /scripts/keycloak.sh
          env:
            - name: KEYCLOAK_USER
              value: {{ .Values.keycloak.username }}
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "keycloak.fullname" . }}-http
                  key: password
          {{- if .Values.keycloak.persistence.deployPostgres }}
            - name: POSTGRES_PORT_5432_TCP_ADDR
              value: {{ template "keycloak.postgresql.fullname" . }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "keycloak.postgresql.fullname" . }}
                  key: postgres-password
            - name: POSTGRES_DATABASE
              value: {{ .Values.postgresql.postgresDatabase | quote }}
          {{- else }}
{{ include "keycloak.externalDbConfig" . | indent 12 }}
          {{- end }}
{{- if .Values.keycloak.additionalEnv }}
{{ toYaml .Values.keycloak.additionalEnv | indent 12 }}
{{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth/
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /auth/
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.keycloak.resources | indent 12 }}
    {{- if eq .Values.keycloak.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "keycloak.fullname" . }}"
                  release: "{{ .Release.Name }}"
    {{- else if eq .Values.keycloak.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: "{{ template "keycloak.fullname" . }}"
                    release: "{{ .Release.Name }}"
    {{- end }}
    {{- if .Values.keycloak.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.keycloak.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.keycloak.tolerations }}
      tolerations:
{{ toYaml .Values.keycloak.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 60
      volumes:
        - name: scripts
          configMap:
            name: {{ template "keycloak.fullname" . }}
            defaultMode: 0755
