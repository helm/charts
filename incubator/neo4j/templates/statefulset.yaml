apiVersion: v1
kind: Service
metadata:
  name: "{{ template "fullname" . }}-public"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{ template "name" . }}
spec:
  ports:
    - port: {{.Values.HttpPort}}
      targetPort: {{.Values.HttpPort}}
  selector:
    app: {{ template "name" . }}
    release: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{ template "name" . }}
spec:
  clusterIP: None
  ports:
    - port: {{.Values.HttpPort}}
      targetPort: {{.Values.HttpPort}}
  selector:
    app: {{ template "name" . }}
    release: {{ .Release.Name }}
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: "{{ template "fullname" . }}-core"
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{default 3 .Values.NumberOfCores}}
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        app: {{ template "name" . }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        env:
          - name: NEO4J_dbms_mode
            value: CORE
          - name: NUMBER_OF_CORES
            value: "{{default 3 .Values.NumberOfCores}}"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            export NEO4J_dbms_connectors_default__advertised__address=$(hostname -f)
            export NEO4J_causal__clustering_discovery__advertised__address=$(hostname -f)::5000
            export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
            export NEO4J_causal__clustering_raft__advertised__address=$(hostname -f):7000

            echo "causal_clustering.raft_messages_log_enable=true" >> conf/neo4j.conf
            echo "dbms.security.auth_enabled=false" >> conf/neo4j.conf

            STATEFULSET_NAME="{{ printf "%s-%s" .Release.Name .Values.Name | trunc 56 }}"
            MEMBERS=""
            for id in $(seq 0 $(($NUMBER_OF_CORES-1))) ; do
                  token="${STATEFULSET_NAME}-core-$id.${STATEFULSET_NAME}.default.svc.cluster.local:5000"
                  MEMBERS="${MEMBERS}${MEMBERS:+,}${token}"
            done

            export NEO4J_causal__clustering_initial__discovery__members=$MEMBERS
            exec /docker-entrypoint.sh "neo4j"
        ports:
        - containerPort: {{.Values.DiscoveryPort}}
          name: discovery
        - containerPort: {{.Values.TxPort}}
          name: tx
        - containerPort: {{.Values.RaftPort}}
          name: raft
        - containerPort: {{.Values.HttpPort}}
          name: browser
        - containerPort: {{.Values.BoltPort}}
          name: bolt
        securityContext:
          privileged: true
        volumeMounts:
        - name: datadir
          mountPath: /data
        resources:
{{ toYaml .Values.resources | indent 10 }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: "{{.Values.StorageClass}}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{.Values.Storage}}"
