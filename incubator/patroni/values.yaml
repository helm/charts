Name: patroni

Component: patroni
ImagePullPolicy: IfNotPresent

# The image to use. Spilo is the dockerized Patroni
Spilo:
  # this image was built from https://github.com/zalando/spilo/tree/master/postgres-appliance
  Image: registry.opensource.zalan.do/acid/spilo-9.6
  Version: 1.2-p17

# How many postgres containers to spawn
Replicas: 5

# Resource limits per replica
Resources:
  Cpu: 100m
  Memory: 512Mi

# Node selector for Patroni pods
# NodeSelector:
#  cloud.google.com/gke-nodepool: highmem-pool

# Credentials used by Patroni
# * more information: https://github.com/zalando/patroni/blob/master/docs/SETTINGS.rst#postgresql
Credentials:
  Superuser: tea
  Admin: cola
  Standby: pinacolada

# Define where patroni should get its secrets from.
# On default, it uses the generated secret by itself, but changing `SecretKeyRefs` allows you
# to get the data from your own secret resource.
#
# Syntax:
# ```
# SecretKeyRefs:
#   <container-env-var-name>:
#     name: <secret resource name> (optional, defaults to patroni.fullname as secret resource name)
#     key: <which secret resource entry should be used
# ```
SecretKeyRefs:
  PGPASSWORD_SUPERUSER:
    key: password-superuser
  PGPASSWORD_ADMIN:
    key: password-admin
  PGPASSWORD_STANDBY:
    key: password-standby

## Distribution Configuration stores. Please note that only one of the following stores should be selected.
Etcd:
  Enable: true
  DeployChart: true
  # if not deploying etcd chart, fill-in value for etcd host (etcd.default.svc.cluster.local)
  Host:
  # leave blank to use vendored etcd chart
  Discovery:
Zookeeper:
  Enable: false
  DeployChart: false
  # if not deploying etcd chart, fill-in list of ZooKeeper cluster members in format: 'host1:port1','host2:port2','etc...'
  Hosts:

WalE:
  Enable: false
  Schedule_Cron_Job: 00 01 * * *
  Retain_Backups: 2
  S3_Bucket:
  GCS_Bucket:
  Kubernetes_Secret:
  Backup_Threshold_Megabytes: 1024
  Backup_Threshold_Percentage: 30

persistentVolume:
  size: 1G
  storageClass: ""
  subPath: ""
  mountPath: "/home/postgres/pgdata"
  annotations: {}
  accessModes:
    - ReadWriteOnce
