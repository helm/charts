{{- if and (not .Values.postgresql.enabled) (not .Values.config.hydra.databaseURL ) }}
#########################################################################
## WARNING: You have not specified a Database to connect to.           ##
#########################################################################

This deployment will be incomplete until you provide the databaseURL to connect to, or enable the postgresql dependency
{{- end }}

To connect to Hydra, you can use:

{{- if contains "NodePort" .Values.service.type }}
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP/
{{- else if contains "LoadBalancer" .Values.service.type }}
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "hydra.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP/
NOTE: It may take a few minutes for the LoadBalancer IP to be available. Watch the status with:
  kubectl get svc -w --namespace {{ .Release.Namespace }} {{ template "hydra.fullname" . }}
{{- else if contains "ClusterIP"  .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }}" -o jsonpath="{.items[0].metadata.name}")
  echo http://127.0.0.1:8080/
  kubectl port-forward $POD_NAME 8080:80
{{- end }}

To get your Hydra root client credentials, you must view the logs of your Hydra pod. Assuming you have only one pod, you can do so with:
  kubectl logs --namespace {{ .Release.Namespace }} $(kubectl get pods -l "app={{ template "name" .}}" -o jsonpath="{.items[0].metadata.name}") -c {{ template "name" . }}

NOTE: It is imperative that you delete the root client after configuring Hydra, as it has been exposed in logs and thus is considered compromised.