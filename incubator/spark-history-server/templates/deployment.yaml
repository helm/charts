{{- if .Values.createNamespace }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-history-server
  namespace: {{ .Values.namespace }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: spark-history-server
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: spark-history-server
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: HADOOP_CONF_DIR
          value: {{ .Values.hdfs.HADOOP_CONF_DIR }}
        - name: SPARK_NO_DAEMONIZE
          value: "true"
        ports:
        - name: historyport
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        command:
        - "/bin/sh"
        - "-c"
        - >
          if [ "$enablePVC" == "true" ]; then
            export SPARK_HISTORY_OPTS="$SPARK_HISTORY_OPTS \
            -Dspark.history.fs.logDirectory=file:/mnt/$eventsDir";
          elif [ "$enableGCS" == "true" ]; then
            export SPARK_HISTORY_OPTS="$SPARK_HISTORY_OPTS \
            -Dspark.hadoop.google.cloud.auth.service.account.json.keyfile=/etc/secrets/$key \
            -Dspark.history.fs.logDirectory=$logDirectory";
          else:
            export SPARK_HISTORY_OPTS="$SPARK_HISTORY_OPTS \
            -Dspark.history.fs.logDirectory=$logDirectory";
          fi;
          /opt/spark/bin/spark-class org.apache.spark.deploy.history.HistoryServer;
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-history-server-env
        livenessProbe:
          httpGet:
            path: /
            port: historyport
        readinessProbe:
          httpGet:
            path: /
            port: historyport
        volumeMounts:
        {{- if .Values.pvc.enablePVC }}
        - name: data
          mountPath: /mnt/{{ .Values.pvc.eventsDir }}
        {{- else if .Values.gcs.enableGCS }}
        - name: secrets-volume
          mountPath: /etc/secrets
        {{- else }}
        - name: core-site
          mountPath: /etc/hadoop/core-site.xml
          subPath: core-site.xml
        - name: hdfs-site
          mountPath: /etc/hadoop/hdfs-site.xml
          subPath: hdfs-site.xml
        {{- end }}
      volumes:
      {{- if .Values.pvc.enablePVC }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.pvc.existingClaimName }}
      {{- else if .Values.gcs.enableGCS }}
      - name: secrets-volume
        secret:
          secretName: {{ .Values.gcs.secret }}
      {{- else }}
      - name: hdfs-site
        configMap:
          name: {{ .Values.hdfs.hdfsSiteConfigMap }}
      - name: core-site
        configMap:
          name: {{ .Values.hdfs.coreSiteConfigMap }}
      {{- end }}
---
# Delete the parent chart before the sub-chart
{{- if .Values.nfs.enableExampleNFS }}
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-history-server
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: spark-history-server
      restartPolicy: OnFailure
      containers:
      - name: main
        image: "lightbend/curl:latest"
        imagePullPolicy: Always
        command:
          - "/bin/sh"
          - "-c"
          - "curl -ik \
              -X DELETE \
              -H 'Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' \
              -H 'Accept: application/json' \
              -H 'Content-Type: application/json' \
            https://kubernetes.default.svc/api/v1/deployments/spark-history-server"
{{- end }}