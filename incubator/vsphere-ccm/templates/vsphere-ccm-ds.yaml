apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "ccm.name" . }}
  labels:
    app: {{ template "ccm.name" . }}
    vsphere-ccm-infra: vsphere-ccm-daemonset
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: cloud-controller
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  namespace: kube-system
{{- if .Values.ccm.annotations }}
  annotations:
{{ toYaml .Values.ccm.annotations | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "ccm.name" . }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
{{- if .Values.ccm.podAnnotations }}
      annotations:
{{ toYaml .Values.ccm.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "ccm.name" . }}
        component: cloud-controller
        release: {{ .Release.Name }}
        vsphere-ccm-infra: vsphere-ccm-daemonset
{{- if .Values.ccm.podLabels }}
{{ toYaml .Values.ccm.podLabels | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      securityContext:
        runAsUser: 0
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccountName: {{ .Values.ccm.serviceAccountName }}
      {{- if .Values.ccm.useHostNetwork }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: {{ .Values.ccm.dnsPolicy }}
      containers:
      - name: {{ template "ccm.name" . }}
        image: {{ .Values.ccm.image }}:{{ .Values.ccm.tag }}
        imagePullPolicy: {{ .Values.ccm.pullPolicy }}
        args:
          - /bin/vsphere-cloud-controller-manager
          - --cloud-provider=vsphere
          - --address=127.0.0.1
          - --v={{ .Values.ccm.cmdline.logging }}
          - --cloud-config={{ .Values.ccm.cmdline.cloudConfig.dir }}/{{ .Values.ccm.cmdline.cloudConfig.file }}
          - --kubeconfig={{ .Values.ccm.cmdline.kubeConfig.dir }}/{{ .Values.ccm.cmdline.kubeConfig.file }}
          {{- range $key, $value := .Values.ccm.cmdline.additionalParams }}
          - --{{ $key }}{{ if $value }}={{ $value }}{{ end }}
          {{- end }}
        {{- if .Values.ccm.service.enabled }}
        env:
          - name: VSPHERE_API_DISABLE
            value: "true"
          - name: VSPHERE_API_BINDING
            valueFrom:
              configMapKeyRef:
                name: {{ template "ccm.fullname" . }}
                key: api.binding
        ports:
        - containerPort: {{ .Values.ccm.service.endpointPort }}
          protocol: TCP
        {{- end }}
        volumeMounts:
          - mountPath: {{ .Values.ccm.cmdline.k8sCerts.dir }}
            name: k8s-certs
            readOnly: true
          - mountPath: {{ .Values.ccm.cmdline.caCerts.dir }}
            name: ca-certs
            readOnly: true
          - mountPath: {{ .Values.ccm.cmdline.kubeConfig.dir }}/{{ .Values.ccm.cmdline.kubeConfig.file }}
            name: kubeconfig
            readOnly: true
          - mountPath: {{ .Values.ccm.cmdline.cloudConfig.dir }}
            name: vsphere-config-volume
            readOnly: true
        resources:
{{ toYaml .Values.ccm.resources | indent 10 }}
      volumes:
        - name: k8s-certs
        {{- if .Values.ccm.cmdline.k8sCerts.configMap }}
          configMap:
            name: {{ .Values.ccm.cmdline.k8sCerts.configMap }}
        {{- else }}
          hostPath:
            path: {{ .Values.ccm.cmdline.k8sCerts.dir }}
            type: DirectoryOrCreate
        {{- end }}
        - name: ca-certs
        {{- if .Values.ccm.cmdline.caCerts.configMap }}
          configMap:
            name: {{ .Values.ccm.cmdline.caCerts.configMap }}
        {{- else }}
          hostPath:
            path: {{ .Values.ccm.cmdline.caCerts.dir }}
            type: DirectoryOrCreate
        {{- end }}
        - name: kubeconfig
        {{- if .Values.ccm.cmdline.kubeConfig.configMap }}
          configMap:
            name: {{ .Values.ccm.cmdline.kubeConfig.configMap }}
        {{- else }}
          hostPath:
            path: {{ .Values.ccm.cmdline.kubeConfig.dir }}/{{ .Values.ccm.cmdline.kubeConfig.file }}
            type: FileOrCreate
        {{- end }}
        - name: vsphere-config-volume
          configMap:
            name: cloud-config
