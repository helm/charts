## Zabbix server mysql image version
## ref: https://hub.docker.com/r/zabbix/
##
image:
  zabbix_server_mysql:
    ## Zabbix server mysql image version
    ## ref: https://hub.docker.com/r/zabbix/zabbix-server-mysql/tags
    ##
    registry: docker.io
    repository: zabbix/zabbix-server-mysql
    tag: ubuntu-4.4-latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  zabbix_web_nginx_mysql:
    ## Zabbix web nginx mysql image version
    ## ref: https://hub.docker.com/r/zabbix/zabbix-web-nginx-mysql/tags
    ##
    registry: docker.io
    repository: zabbix/zabbix-web-nginx-mysql
    tag: ubuntu-4.4-latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  zabbix_agent:
    ## Zabbix agent image version
    ## ref: https://hub.docker.com/r/zabbix/zabbix-agent/tags
    ##
    registry: docker.io
    repository: zabbix/zabbix-agent
    tag: ubuntu-4.4-latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName


## String to partially override fullname templates (will maintain the release name)
##
nameOverride: {}
#   chart:
#   zabbix_server_mysql:
#   zabbix_web_nginx_mysql:


## String to fully override fullname templates
##
fullnameOverride: {}
#   chart:
#   zabbix_server_mysql:
#   zabbix_web_nginx_mysql:


## Set up update strategy for zabbix installation. Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to makesure the pods is destroyed first.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## Example:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
updateStrategy:
  zabbix_server_mysql:
    type: Recreate
  zabbix_web_nginx_mysql:
    type: RollingUpdate

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

replicaCount:
  zabbix_web_nginx_mysql: 2

##
## MariaDB chart configuration
##
## https://github.com/helm/charts/blob/master/stable/mariadb/values.yaml
##
mariadb:
  ## Disable MariaDB replication
  replication:
    enabled: false

  ## Create a database and a database user
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  db:
    name: zabbix
    user: zabbix
    ## If the password is not specified, mariadb will generates a random password
    ##
    ## Fix password because mariadb chart under certain conditions changes it when upgrading
    password: zabbix

  ## MariaDB admin password
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # rootUser:
  #   password:

  master:
    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      enabled: true
      ## mariadb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi

    ## Database character-set-server=utf8 and collation-server=utf8_bin:
    ## ref: http://www.zabbix.com/documentation/4.4/manual/installation/containers
    ## ref: https://github.com/helm/charts/blob/master/stable/mariadb/values.yaml#L246
    ##
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_bin

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock

## Kubernetes configuration
## Use LoadBalancer or ClusterIP
##
service:
  zabbix_server_mysql:
    type: ClusterIP
    # TCP
    port: 10051
  zabbix_web_nginx_mysql:
    type: ClusterIP
    # HTTP
    port: 80

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## wordpress data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  alertscripts:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: alertscripts
  externalscripts:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: externalscripts
  enc:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: enc
  mibs:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: mibs
  modules:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: modules
  snmptraps:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: snmptraps
  ssh_keys:
    enabled: false
    accessMode: ReadWriteOnce
    size: 100Mi
    claimName: ssh-keys
  ssl:
    certs:
      enabled: false
      accessMode: ReadWriteOnce
      size: 100Mi
      claimName: ssl-certs
    keys:
      enabled: false
      accessMode: ReadWriteOnce
      size: 100Mi
      claimName: ssl-keys
    ssl_ca:
      enabled: false
      accessMode: ReadWriteOnce
      size: 100Mi
      claimName: ssl-ssl-ca
  userscripts:
    enabled: false
    accessMode: ReadWriteOnce
    size: 200Mi
    claimName: userscripts

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

zabbix_vars:
  php_tz: Europe/Riga
  zbx_server_name: zabbix
  zbx_timeout: 3
  zbx_unsafeuserparameters: "0"
  zbx_enableremotecommands: "0"
  zbx_logremotecommands: "0"

## Configure extra options for liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
zabbix_web_nginx:
  livenessProbe:
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
zabbix_server_mysql:
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

## Configure the ingress resource that allows you to access the
## WordPress installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## Set this to true in order to add the corresponding annotations for cert-manager
  certManager: false

  ## When the ingress is enabled, a host pointing to this will be created
  hostname: zabbix.local

  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx

  ## The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## hosts:
  ## - name: zabbix.local
  ##   path: /

  ## The tls configuration for the ingress
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## tls:
  ## - hosts:
  ##     - zabbix.local
  ##   secretName: zabbix.local-tls
