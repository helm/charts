apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ml-pipeline.fullname" . }}-api-server
  labels:
    app.kubernetes.io/name: {{ include "ml-pipeline.name" . }}
    helm.sh/chart: {{ include "ml-pipeline.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: api-server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ml-pipeline.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ml-pipeline.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api-server
    spec:
      serviceAccountName: {{ include "ml-pipeline.fullname" . }}-api-server
      containers:
        - name: {{ .Chart.Name }}-api-server
          image: gcr.io/ml-pipeline/api-server:{{ .Values.image.tag }}
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MYSQL_SERVICE_HOST
            value: {{ include "ml-pipeline.fullname" . }}-mysql
          - name: MYSQL_SERVICE_PORT
            value: "3306"
          - name: MINIO_SERVICE_SERVICE_HOST
            value: {{ .Release.Name }}-minio
          - name: MINIO_SERVICE_SERVICE_PORT
            value: "9000"
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: accesskey
                name: {{ .Release.Name }}-minio
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: secretkey
                name: {{ .Release.Name }}-minio
          ports:
          - name: grpc
            containerPort: 8887
            protocol: TCP
          - name: http
            containerPort: 8888
            protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.apiServer.resources | nindent 12 }}
      {{- with .Values.apiServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.apiServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.apiServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
