apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "redis-auto-cluster.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "redis-auto-cluster.name" . }}
    chart: {{ template "redis-auto-cluster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ add .Values.shards.replicationFactor 1 | mul .Values.shards.count  }}
  serviceName: redis-cluster
  selector:
    matchLabels:
      role: redis-cluster-node
      app: {{ template "redis-auto-cluster.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        role: redis-cluster-node
        app: {{ template "redis-auto-cluster.name" . }}
        chart: {{ template "redis-auto-cluster.chart" . }}
        release: {{ .Release.Name }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . |  sha256sum | trunc 63 }}
    spec:
      terminationGracePeriodSeconds: 15
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.antiAffinity }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  role: redis-cluster-node
                  app: {{ template "redis-auto-cluster.name" . }}
                  release: {{ .Release.Name }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.tuning }}
      initContainers:
        - name: init-sysctl
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - "sysctl -w net.core.somaxconn=65535"
          securityContext:
            privileged: true
        - name: disable-thp
          image: busybox
          volumeMounts:
            - name: host-sys
              mountPath: /host-sys
          command:
            - "/bin/sh"
            - "-c"
            - "echo never > /host-sys/kernel/mm/transparent_hugepage/enabled"
      {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - "redis-server"
          args:
          - "/conf/redis.conf"
          - "--cluster-announce-ip"
          - "$(MY_POD_IP)"
          env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
          - name: client
            containerPort: 6379
          - name: gossip
            containerPort: 26379
          readinessProbe:
            exec:
              command:
              - "sh"
              - "-c"
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            exec:
              command:
              - "sh"
              - "-c"
              - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
          resources:
            limits:
              cpu: 1
              memory: {{ .Values.shards.sizeGb }}Gi
            requests:
              cpu: 100m
              memory: {{ .Values.shards.sizeGb }}Gi
          volumeMounts:
            - name: config
              mountPath: /conf
              readOnly: false
            - name: data
              mountPath: /data
              readOnly: false
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
            - name: REDIS_ALIAS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: metrics
              containerPort: 9121
          {{- if .Values.metrics.resources }}
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}
        {{- end }}
        {{- end }}
      volumes:
        - name: host-sys
          hostPath:
            path: /sys
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
            items:
              - key: redis.conf
                path: redis.conf
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ mul .Values.shards.sizeGb 3 }}Gi
        storageClassName: {{ .Values.persistence.storageClassName }}
