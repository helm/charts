# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

## Security/Lightwave config
Security:
  Lightwave:
#     Server: lightwave01.kops.bjung.net
#     RootDN: dc=kops,dc=bjung,dc=net
#     ManagerPassword: VMware!1
Master:
  Name: jenkins-master
  Image: "jenkinsci/jenkins"
  ImageTag: "2.46.2"
  ImagePullPolicy: "Always"
  Component: "jenkins-master"
  UseSecurity: true
  AdminUser: admin
# AdminPassword: <defaults to random>
  Cpu: "200m"
  Memory: "256Mi"
# Set min/max heap here if needed with:
# JavaOpts: "-Xms512m -Xmx512m"
  ServicePort: 80
# For minikube, set this to NodePort, elsewhere use LoadBalancer
# Use ClusterIP if your setup includes ingress controller
  ServiceType: LoadBalancer
# Used to create Ingress record (should used with ServiceType: ClusterIP)
# HostName: jenkins.cluster.local
# NodePort: <to set explicitly, choose port between 30000-32767
  ContainerPort: 8080
  SlaveListenerPort: 50000
  LoadBalancerSourceRanges:
  - 0.0.0.0/0
# List of plugins to be install during Jenkins master start
  InstallPlugins:
      - kubernetes:0.11 
      - workflow-aggregator:2.5
      - credentials-binding:1.11
      - git:3.2.0
      - blueocean:1.0.1
      - ldap:1.15
# Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  # ScriptApproval:
  #   - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #   - "new groovy.json.JsonSlurperClassic"
# List of groovy init scripts to be executed during Jenkins master start
  InitScripts:
#  - |
#    print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  CustomConfigMap: false

  Ingress:
    Annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    TLS:
      # - secretName: jenkins.cluster.local
      #   hosts:
      #     - jenkins.cluster.local

Agent:
  Enabled: true
  Image: 367199020685.dkr.ecr.us-west-2.amazonaws.com/jenkins-agent
  ImageTag: 0.0.3
  Privileged: true
  PullImage: true
  Cpu: "400m"
  Memory: "512Mi"
  Volumes:
  - type: HostPath 
    hostPath: /var/run/docker.sock
    mountPath: /var/run/docker.sock
  - type: HostPath
    hostPath: /mnt/work
    mountPath: /work

Persistence:
  Enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # ExistingClaim:

  ## If defined, volume.beta.kubernetes.io/storage-class: <StorageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # StorageClass:
  AccessMode: ReadWriteOnce
  Size: 8Gi
  volumes:
#  - name: nothing
#    emptyDir: {}
  mounts:
#  - mountPath: /var/nothing
#    name: nothing
#    readOnly: true
