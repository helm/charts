{{- if .Values.daemonset.enabled }}
{{- if .Values.datadog.apiKey }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "datadog.fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "datadog.fullname" . }}
      name: {{ template "datadog.fullname" . }}
      annotations:
        checksum/autoconf-config: {{ toYaml .Values.datadog.autoconf | sha256sum }}
        checksum/confd-config: {{ toYaml .Values.datadog.confd | sha256sum }}
        checksum/checksd-config: {{ toYaml .Values.datadog.checksd | sha256sum }}
      {{- if .Values.daemonset.podAnnotations }}
{{ toYaml .Values.daemonset.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.daemonset.useHostNetwork }}
      hostNetwork: {{ .Values.daemonset.useHostNetwork }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
{{ toYaml .Values.datadog.resources | indent 12 }}
        ports:
        - containerPort: 8125
          {{- if .Values.daemonset.useHostPort }}
          hostPort: 8125
          {{- end }}
          name: dogstatsdport
          protocol: UDP
        {{- if .Values.datadog.apmEnabled }}
        - containerPort: 8126
          {{- if .Values.daemonset.useHostPort }}
          hostPort: 8126
          {{- end }}
          name: traceport
          protocol: TCP
        - containerPort: 7777
          name: legacytraceport
          protocol: TCP
        {{- end }}
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "datadog.fullname" . }}
                key: api-key
          {{- if .Values.datadog.logLevel }}
          - name: DD_LOG_LEVEL
            value: {{ .Values.datadog.logLevel | quote }}
          {{- end }}
          {{- if .Values.datadog.nonLocalTraffic }}
          - name: NON_LOCAL_TRAFFIC # agent5
            value: {{ .Values.datadog.nonLocalTraffic | quote }}
          - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC # agent6
            value: {{ .Values.datadog.nonLocalTraffic | quote }}
          {{- end }}
          {{- if .Values.datadog.tags }}
          - name: DD_TAGS
            value: {{ .Values.datadog.tags | quote }}
          {{- end }}
          {{- if .Values.datadog.apmEnabled }}
          - name: DD_APM_ENABLED
            value: {{ .Values.datadog.apmEnabled | quote }}
          {{- end }}
          - name: KUBERNETES_LEADER_CANDIDATE # agent5
            value: {{ .Values.datadog.leaderElection | quote}}
          - name: DD_LEADER_ELECTION  # agent6
            value: {{ .Values.datadog.leaderElection | quote}}
          {{- if .Values.datadog.leaderElection }}
          - name: KUBERNETES_LEADER_LEASE_DURATION # agent5
            value: {{ default "600" .Values.datadog.leaderLeaseDuration | quote }}
          - name: DD_LEADER_LEASE_DURATION # agent6
            value: {{ default "60" .Values.datadog.leaderLeaseDuration | quote }}
          {{- end }}
          {{- if .Values.datadog.collectEvents }}
          - name: DD_COLLECT_KUBERNETES_EVENTS # agent6
            value: {{.Values.datadog.collectEvents | quote}}
          {{- end }}
          - name: SD_BACKEND  # agent5
            value: docker
          - name: KUBERNETES
            value: "yes"
          {{- if (semverCompare ">=1" .Capabilities.KubeVersion.Major) and (semverCompare ">=7" .Capabilities.KubeVersion.Minor) }}
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- end }}

{{- if .Values.datadog.env }}
{{ toYaml .Values.datadog.env | indent 10 }}
{{- end }}
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
            readOnly: true
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          {{- if .Values.datadog.confd }}
          - name: confd
            mountPath: /conf.d
            readOnly: true
          {{- end }}
          {{- if .Values.datadog.checksd }}
          - name: checksd
            mountPath: /checks.d
            readOnly: true
          {{- end }}
          {{- if .Values.datadog.autoconf }}
          - name: autoconf
            {{- if hasSuffix "-alpine" .Values.image.tag }}
            mountPath: /opt/datadog-agent/agent/conf.d/auto_conf
            {{- else }}
            mountPath: /etc/dd-agent/conf.d/auto_conf
            {{- end }}
            readOnly: true
          {{- end }}
{{- if .Values.datadog.volumeMounts }}
{{ toYaml .Values.datadog.volumeMounts | indent 10 }}
{{- end }}
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        {{- if .Values.datadog.confd }}
        - name: confd
          configMap:
            name: {{ template "datadog.confd.fullname" . }}
        {{- end }}
        {{- if .Values.datadog.checksd }}
        - name: checksd
          configMap:
            name: {{ template "datadog.checksd.fullname" . }}
        {{- end }}
        {{- if .Values.datadog.autoconf }}
        - name: autoconf
          configMap:
            name: {{ template "datadog.autoconf.fullname" . }}
        {{- end }}
{{- if .Values.datadog.volumes }}
{{ toYaml .Values.datadog.volumes | indent 8 }}
{{- end }}
      {{- if .Values.daemonset.tolerations }}
      tolerations:
{{ toYaml .Values.daemonset.tolerations | indent 8 }}
      {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "datadog.fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
  updateStrategy:
    type: {{ default "OnDelete" .Values.daemonset.updateStrategy | quote }}
{{ end }}
{{ end }}
