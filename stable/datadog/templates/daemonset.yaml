{{- if .Values.datadog.apiKey }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "datadog.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        component: "{{ .Values.datadog.name }}"
      name: {{ template "datadog.fullname" . }}
    spec:
      containers:
      - name: {{ template "name" . }}-{{ .Values.datadog.name }}
        image: "{{ .Values.datadog.image.repository }}:{{ .Values.datadog.image.tag }}"
        imagePullPolicy: {{ .Values.datadog.image.pullPolicy }}
        resources:
{{ toYaml .Values.datadog.resources | indent 12 }}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        {{- if .Values.datadog.apmEnabled }}
        - containerPort: 8126
          name: traceport
          protocol: TCP
        - containerPort: 7777
          name: legacytraceport
          protocol: TCP
        {{- end }}
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "secret.fullname" . }}
                key: api-key
          - name: LOG_LEVEL
            value: {{ .Values.datadog.logLevel | quote }}
          - name: SD_BACKEND
            value: docker
          - name: NON_LOCAL_TRAFFIC
            value: {{ default "" .Values.datadog.nonLocalTraffic | quote }}
          - name: TAGS
            value: {{ default "" .Values.datadog.tags | quote }}
          - name: DD_APM_ENABLED
            value: {{ default "" .Values.datadog.apmEnabled | quote }}
          - name: KUBERNETES
            value: "yes"
{{- if .Values.datadog.env }}
{{ toYaml .Values.datadog.env | indent 10 }}
{{- end }}
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: confd
            mountPath: /conf.d
            readOnly: true
          - name: autoconf
            mountPath: /etc/dd-agent/conf.d/auto_conf
            readOnly: true
          - name: checksd
            mountPath: /checks.d
            readOnly: true
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
        - name: confd
          configMap:
            name: {{ template "confd.fullname" . }}
        - name: checksd
          configMap:
            name: {{ template "checksd.fullname" . }}
        - name: autoconf
          configMap:
            name: {{ template "autoconf.fullname" . }}
{{ end }}
