{{- if .Values.rbac.create -}}
apiVersion: {{ template "rbac.apiVersion" . }}
kind: ClusterRole
metadata:
  labels:
    app: {{ template "datadog.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "datadog.fullname" . }}
rules:
- nonResourceURLs:
  - "/version"  # Used to get apiserver version metadata
  - "/healthz"  # Healthcheck
  verbs: ["get"]
- apiGroups: ["apps"]
  resources:
    - "deployments"
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources:
    - "jobs"
  verbs: ["get", "list"]
- apiGroups: ["extensions"]
  resources:
    - "daemonsets"
    - "replicasets"
  verbs: ["get", "list"]
- apiGroups: [""]
  resources:
    - "namespaces"
    - "events"              # Cluster events + kube_service cache invalidation
    - "componentstatuses"   # ServiceCheck apiserver in the agent6
    - "services"            # kube_service tag agent5
    - "endpoints"           # kube_service tag agent6
    - "nodes"
    - "pods"
  verbs: ["get", "list", "watch"]
{{- if .Values.datadog.leaderElection }}
- apiGroups: [""]
  resources:
    - "configmaps"
  resourceNames:
    - "datadog-leader-elector"  # agent5
    - "datadogtoken"            # agent6
    - "datadog-leader-election" # agent6
  verbs: ["get", "delete", "update"]
- apiGroups:
    - ""
  resources:
    - "configmaps"
  verbs: ["create"]
{{- end }}
- apiGroups:
  - ""
  resources: # Kubelet connectivity
  - "nodes/metrics"
  - "nodes/spec"
  - "nodes/proxy"
  verbs: ["get"]
{{- end -}}

