apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "entrypoint.fullname" . }}
  labels:
    app: {{ template "entrypoint.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  entrypoint.sh: |
    /bin/bash -eux
    function collectEvents() {
      if /opt/datadog-agent/embedded/bin/curl --unix-socket /var/run/docker.sock http://localhost/containers/json | grep -q kube-state-metrics; then
        echo "true"
      else
        echo "false"
      fi
    }
    export COLLECT_EVENTS=`collectEvents`
    echo "collectEvents: $COLLECT_EVENTS"
    if [[ "$COLLECT_EVENTS" == "true" ]]; then
      echo "configuring the agent..."
      cp /etc/dd-agent/conf.d/kubernetes_state.yaml.example /etc/dd-agent/conf.d/kubernetes_state.yaml
      sed -i -e "s@# collect_events: false@ collect_events: true@" /etc/dd-agent/conf.d/kubernetes.yaml
      sed -i -e "s@example.com@kube-state-metrics-kube-state-metrics@" /etc/dd-agent/conf.d/kubernetes_state.yaml
    fi
    /entrypoint.sh supervisord -n -c /etc/dd-agent/supervisor.conf 
    while true; do
      if [[ "$(collectEvents)" != "$COLLECT_EVENTS" ]]; then
        service datadog-agent stop
      fi
      sleep 60
    done
