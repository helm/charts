{{- if .Values.secrets.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "concourse.concourse.fullname" . }}
  labels:
    app: {{ template "concourse.concourse.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  host-key: {{ .Values.secrets.hostKey | b64enc | quote }}
  host-key-pub: {{ .Values.secrets.hostKeyPub | b64enc | quote }}
  session-signing-key: {{ .Values.secrets.sessionSigningKey | b64enc | quote }}
  worker-key: {{ .Values.secrets.workerKey | b64enc | quote }}
  worker-key-pub: {{ .Values.secrets.workerKeyPub | b64enc | quote }}
  {{- if .Values.secrets.externalPostgres.enabled }}
  postgres-host: {{ template "concourse.secret.required" dict "key" "host" "is" "secrets.externalPostgres.enabled" "root" .Values.secrets.externalPostgres }}
  postgres-port: {{ default "" .Values.secrets.externalPostgres.port | b64enc | quote }}
  postgres-user: {{ template "concourse.secret.required" dict "key" "user" "is" "secrets.externalPostgres.enabled" "root" .Values.secrets.externalPostgres }}
  postgres-password: {{ template "concourse.secret.required" dict "key" "password" "is" "secrets.externalPostgres.enabled" "root" .Values.secrets.externalPostgres }}
  postgres-sslmode: {{ default "" .Values.secrets.externalPostgres.sslmode | b64enc | quote }}
  postgres-connect-timeout: {{ default "" .Values.secrets.externalPostgres.connectTimeout | b64enc | quote }}
  postgres-database: {{ template "concourse.secret.required" dict "key" "database" "is" "secrets.externalPostgres.enabled" "root" .Values.secrets.externalPostgres }}
  {{- end }}
  {{- if .Values.concourse.encryption.enabled }}
  encryption-key: {{ template "concourse.secret.required" dict "key" "encryptionKey" "is" "concourse.encryption.enabled" "root" .Values.secrets }}
  old-encryption-key: {{ default "" .Values.secrets.oldEncryptionKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.localUserAuth.enabled }}
  local-user-auth-local-users: {{ join "," .Values.secrets.localUserAuth.localUsers | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.cfAuth.enabled }}
  cf-auth-client-id: {{ template "concourse.secret.required" dict "key" "clientId" "is" "secrets.cfAuth.enabled" "root" .Values.secrets.cfAuth }}
  cf-auth-client-secret: {{ template "concourse.secret.required" dict "key" "clientSecret" "is" "secrets.cfAuth.enabled" "root" .Values.secrets.cfAuth }}
  cf-auth-api-url: {{ template "concourse.secret.required" dict "key" "apiUrl" "is" "secrets.cfAuth.enabled" "root" .Values.secrets.cfAuth }}
  cf-auth-ca-cert: {{ default "" .Values.secrets.cfAuth.caCert | b64enc | quote }}
  cf-auth-skip-ssl-validation: {{ default "" .Values.secrets.cfAuth.skipSslValidation | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.githubAuth.enabled }}
  github-auth-client-id: {{ template "concourse.secret.required" dict "key" "clientId" "is" "secrets.githubAuth.enabled" "root" .Values.secrets.githubAuth }}
  github-auth-client-secret: {{ template "concourse.secret.required" dict "key" "clientSecret" "is" "secrets.githubAuth.enabled" "root" .Values.secrets.githubAuth }}
  github-auth-host: {{ default "" .Values.secrets.githubAuth.host | b64enc | quote }}
  github-auth-ca-cert: {{ default "" .Values.secrets.githubAuth.caCert | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.gitlabAuth.enabled }}
  gitlab-auth-client-id: {{ template "concourse.secret.required" dict "key" "clientId" "is" "secrets.gitlabAuth.enabled" "root" .Values.secrets.gitlabAuth }}
  gitlab-auth-client-secret: {{ template "concourse.secret.required" dict "key" "clientSecret" "is" "secrets.gitlabAuth.enabled" "root" .Values.secrets.gitlabAuth }}
  gitlab-auth-host: {{ default "" .Values.secrets.gitlabAuth.host | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.ldapAuth.enabled }}
  ldap-auth-display-name: {{ default "" .Values.secrets.ldapAuth.displayName | b64enc | quote }}
  ldap-auth-host: {{ template "concourse.secret.required" dict "key" "host" "is" "secrets.ldapAuth.enabled" "root" .Values.secrets.ldapAuth }}
  ldap-auth-bind-dn: {{ template "concourse.secret.required" dict "key" "bindDn" "is" "secrets.ldapAuth.enabled" "root" .Values.secrets.ldapAuth }}
  ldap-auth-bind-pw: {{ template "concourse.secret.required" dict "key" "bindPw" "is" "secrets.ldapAuth.enabled" "root" .Values.secrets.ldapAuth }}
  ldap-auth-insecure-no-ssl: {{ default "" .Values.secrets.ldapAuth.insecureNoSsl | b64enc | quote }}
  ldap-auth-insecure-skip-verify: {{ default "" .Values.secrets.ldapAuth.insecureSkipVerify | b64enc | quote }}
  ldap-auth-start-tls: {{ default "" .Values.secrets.ldapAuth.startTls | b64enc | quote }}
  ldap-auth-ca-cert: {{ default "" .Values.secrets.ldapAuth.caCert | b64enc | quote }}
  ldap-auth-user-search-base-dn: {{ default "" .Values.secrets.ldapAuth.userSearchBaseDn | b64enc | quote }}
  ldap-auth-user-search-filter: {{ default "" .Values.secrets.ldapAuth.userSearchFilter | b64enc | quote }}
  ldap-auth-user-search-username: {{ default "" .Values.secrets.ldapAuth.userSearchUsername | b64enc | quote }}
  ldap-auth-user-search-scope: {{ default "" .Values.secrets.ldapAuth.userSearchScope | b64enc | quote }}
  ldap-auth-user-search-id-attr: {{ default "" .Values.secrets.ldapAuth.userSearchIdAttr | b64enc | quote }}
  ldap-auth-user-search-email-attr: {{ default "" .Values.secrets.ldapAuth.userSearchEmailAttr | b64enc | quote }}
  ldap-auth-user-search-name-attr: {{ default "" .Values.secrets.ldapAuth.userSearchNameAttr | b64enc | quote }}
  ldap-auth-group-search-base-dn: {{ default "" .Values.secrets.ldapAuth.groupSearchBaseDn | b64enc | quote }}
  ldap-auth-group-search-filter: {{ default "" .Values.secrets.ldapAuth.groupSearchFilter | b64enc | quote }}
  ldap-auth-group-search-scope: {{ default "" .Values.secrets.ldapAuth.groupSearchScope | b64enc | quote }}
  ldap-auth-group-search-user-attr: {{ default "" .Values.secrets.ldapAuth.groupSearchUserAttr | b64enc | quote }}
  ldap-auth-group-search-group-attr: {{ default "" .Values.secrets.ldapAuth.groupSearchGroupAttr | b64enc | quote }}
  ldap-auth-group-search-name-attr: {{ default "" .Values.secrets.ldapAuth.groupSearchNameAttr | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.oauthAuth.enabled }}
  oauth-auth-client-id: {{ template "concourse.secret.required" dict "key" "clientId" "is" "secrets.oauthAuth.enabled" "root" .Values.secrets.oauthAuth }}
  oauth-auth-client-secret: {{ template "concourse.secret.required" dict "key" "clientSecret" "is" "secrets.oauthAuth.enabled" "root" .Values.secrets.oauthAuth }}
  oauth-auth-auth-url: {{ template "concourse.secret.required" dict "key" "authUrl" "is" "secrets.oauthAuth.enabled" "root" .Values.secrets.oauthAuth }}
  oauth-auth-token-url: {{ template "concourse.secret.required" dict "key" "tokenUrl" "is" "secrets.oauthAuth.enabled" "root" .Values.secrets.oauthAuth }}
  oauth-auth-display-name: {{ default "" .Values.secrets.oauthAuth.displayName | b64enc | quote }}
  oauth-auth-userinfo-url: {{ default "" .Values.secrets.oauthAuth.userinfoUrl | b64enc | quote }}
  oauth-auth-scope: {{ default "" .Values.secrets.oauthAuth.scope | b64enc | quote }}
  oauth-auth-groups-key: {{ default "" .Values.secrets.oauthAuth.groupsKey | b64enc | quote }}
  oauth-auth-ca-cert: {{ default "" .Values.secrets.oauthAuth.caCert | b64enc | quote }}
  oauth-auth-skip-ssl-validation: {{ default "" .Values.secrets.oauthAuth.skipSslValidation | b64enc | quote }}
  {{- end }}
  {{- if .Values.credentialManager.vault.enabled }}
  vault-ca-cert: {{ default "" .Values.secrets.vaultCaCert | b64enc | quote }}
  vault-client-token: {{ default "" .Values.secrets.vaultClientToken | b64enc | quote }}
  vault-approle-id: {{ default "" .Values.secrets.vaultAppRoleId | b64enc | quote }}
  vault-approle-secret-id: {{ default "" .Values.secrets.vaultAppRoleSecretId | b64enc | quote }}
  vault-client-cert: {{ default "" .Values.secrets.vaultClientCert | b64enc | quote }}
  vault-client-key: {{ default "" .Values.secrets.vaultClientKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.credentialManager.ssm.enabled }}
  aws-ssm-access-key: {{ default "" .Values.secrets.awsSsmAccessKey | b64enc | quote }}
  aws-ssm-secret-key: {{ default "" .Values.secrets.awsSsmSecretKey | b64enc | quote }}
  {{- if .Values.secrets.awsSsmSessionToken }}
  aws-ssm-session-token: {{ .Values.secrets.awsSsmSessionToken | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.credentialManager.awsSecretsManager.enabled }}
  aws-secretsmanager-access-key: {{ default "" .Values.secrets.awsSecretsmanagerAccessKey | b64enc | quote }}
  aws-secretsmanager-secret-key: {{ default "" .Values.secrets.awsSecretsmanagerSecretKey | b64enc | quote }}
  {{- if .Values.secrets.awsSecretsmanagerSessionToken }}
  aws-secretsmanager-session-token: {{ .Values.secrets.awsSecretsmanagerSessionToken | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.web.metrics.influxdb.enabled }}
  influxdb-password: {{ default "" .Values.secrets.influxdbPassword | b64enc | quote }}
  {{- end }}
{{- end }}
