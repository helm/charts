apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "concourse.web.fullname" . }}
  labels:
    app: {{ template "concourse.web.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.web.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "concourse.web.fullname" . }}
        release: "{{ .Release.Name }}"
      annotations:
{{ toYaml .Values.web.annotations | indent 8 }}
    spec:
    {{- with .Values.web.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "concourse.web.fullname" . }}{{ else }}{{ .Values.rbac.webServiceAccountName }}{{ end }}
      tolerations:
{{ toYaml .Values.web.tolerations | indent 8 }}
      containers:
        - name: {{ template "concourse.web.fullname" . }}
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          args:
            - "web"
            {{- if .Values.credentialManager.ssm.enabled }}
            - "--aws-ssm-region"
            - "$(CONCOURSE_AWS_SSM_REGION)"
            {{- end }}
            {{- if .Values.credentialManager.awsSecretsManager.enabled }}
            - "--aws-secretsmanager-region"
            - "$(CONCOURSE_AWS_SECRETSMANAGER_REGION)"
            {{- end }}
          env:
            - name: CONCOURSE_TSA_HOST_KEY
              value: "/concourse-keys/host_key"
            - name: CONCOURSE_SESSION_SIGNING_KEY
              value: "/concourse-keys/session_signing_key"
            - name: CONCOURSE_TSA_AUTHORIZED_KEYS
              value: "/concourse-keys/worker_key.pub"
            {{- if .Values.secrets.externalPostgres.enabled }}
            - name: CONCOURSE_POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-host
            - name: CONCOURSE_POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-port
            - name: CONCOURSE_POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-user
            - name: CONCOURSE_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-password
            - name: CONCOURSE_POSTGRES_SSLMODE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-sslmode
            - name: CONCOURSE_POSTGRES_CONNECT_TIMEOUT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-connect-timeout
            - name: CONCOURSE_POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: postgres-database
            {{- else if .Values.postgresql.enabled }}
            - name: CONCOURSE_POSTGRES_HOST
              value: {{ template "concourse.postgresql.fullname" . }}
            - name: CONCOURSE_POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser }}
            - name: CONCOURSE_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.postgresql.fullname" . }}
                  key: postgres-password
            - name: CONCOURSE_POSTGRES_DATABASE
              value: {{ .Values.postgresql.postgresDatabase | quote }}
            - name: CONCOURSE_POSTGRES_SSLMODE
              value: "disable"
            {{- end }}
            {{- if .Values.concourse.encryption.enabled }}
            - name: CONCOURSE_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: encryption-key
            - name: CONCOURSE_OLD_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: old-encryption-key
            {{- end }}
            {{- if .Values.concourse.externalURL }}
            - name: CONCOURSE_EXTERNAL_URL
              value: {{ .Values.concourse.externalURL | quote }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONCOURSE_BIND_PORT
              value: {{ .Values.concourse.atcPort | quote }}
            - name: CONCOURSE_PEER_URL
              value: "http://$(POD_IP):$(CONCOURSE_BIND_PORT)"
            - name: CONCOURSE_TSA_BIND_PORT
              value: {{ .Values.concourse.tsaPort | quote }}
            - name: CONCOURSE_ALLOW_SELF_SIGNED_CERTIFICATES
              value: {{ .Values.concourse.allowSelfSignedCertificates | quote }}
            - name: CONCOURSE_AUTH_DURATION
              value: {{ .Values.concourse.authDuration | quote }}
            - name: CONCOURSE_RESOURCE_CHECKING_INTERVAL
              value: {{ .Values.concourse.resourceCheckingInterval | quote }}
            - name: CONCOURSE_OLD_RESOURCE_GRACE_PERIOD
              value: {{ .Values.concourse.oldResourceGracePeriod | quote }}
            - name: CONCOURSE_RESOURCE_CACHE_CLEANUP_INTERVAL
              value: {{ .Values.concourse.resourceCacheCleanupInterval | quote }}
            - name: CONCOURSE_CONTAINER_PLACEMENT_STRATEGY
              value: {{ .Values.concourse.containerPlacementStrategy | quote }}
            {{- if .Values.secrets.localUserAuth.enabled }}
            - name: CONCOURSE_ADD_LOCAL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: local-user-auth-local-users
            {{- end }}
            {{- if .Values.secrets.cfAuth.enabled }}
            - name: CONCOURSE_CF_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: cf-auth-client-id
            - name: CONCOURSE_CF_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: cf-auth-client-secret
            - name: CONCOURSE_CF_API_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: cf-auth-api-url
            - name: CONCOURSE_CF_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: cf-auth-ca-cert
            - name: CONCOURSE_CF_SKIP_SSL_VALIDATION
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: cf-auth-skip-ssl-validation
            {{- end }}
            {{- if .Values.secrets.githubAuth.enabled }}
            - name: CONCOURSE_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: github-auth-client-id
            - name: CONCOURSE_GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: github-auth-client-secret
            - name: CONCOURSE_GITHUB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: github-auth-host
            - name: CONCOURSE_GITHUB_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: github-auth-ca-cert
            {{- end }}
            {{- if .Values.secrets.gitlabAuth.enabled }}
            - name: CONCOURSE_GITLAB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: gitlab-auth-client-id
            - name: CONCOURSE_GITLAB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: gitlab-auth-client-secret
            - name: CONCOURSE_GITLAB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: gitlab-auth-host
            {{- end }}
            {{- if .Values.secrets.ldapAuth.enabled }}
            - name: CONCOURSE_LDAP_DISPLAY_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-display-name
            - name: CONCOURSE_LDAP_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-host
            - name: CONCOURSE_LDAP_BIND_DN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-bind-dn
            - name: CONCOURSE_LDAP_BIND_PW
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-bind-pw
            - name: CONCOURSE_LDAP_INSECURE_NO_SSL
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-insecure-no-ssl
            - name: CONCOURSE_LDAP_INSECURE_SKIP_VERIFY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-insecure-skip-verify
            - name: CONCOURSE_LDAP_START_TLS
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-start-tls
            - name: CONCOURSE_LDAP_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-ca-cert
            - name: CONCOURSE_LDAP_USER_SEARCH_BASE_DN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-base-dn
            - name: CONCOURSE_LDAP_USER_SEARCH_FILTER
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-filter
            - name: CONCOURSE_LDAP_USER_SEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-username
            - name: CONCOURSE_LDAP_USER_SEARCH_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-scope
            - name: CONCOURSE_LDAP_USER_SEARCH_ID_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-id-attr
            - name: CONCOURSE_LDAP_USER_SEARCH_EMAIL_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-email-attr
            - name: CONCOURSE_LDAP_USER_SEARCH_NAME_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-user-search-name-attr
            - name: CONCOURSE_LDAP_GROUP_SEARCH_BASE_DN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-base-dn
            - name: CONCOURSE_LDAP_GROUP_SEARCH_FILTER
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-filter
            - name: CONCOURSE_LDAP_GROUP_SEARCH_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-scope
            - name: CONCOURSE_LDAP_GROUP_SEARCH_USER_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-user-attr
            - name: CONCOURSE_LDAP_GROUP_SEARCH_GROUP_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-group-attr
            - name: CONCOURSE_LDAP_GROUP_SEARCH_NAME_ATTR
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: ldap-auth-group-search-name-attr
            {{- end }}
            {{- if .Values.secrets.oauthAuth.enabled }}
            - name: CONCOURSE_OAUTH_CLIENT_ID
              valueFrom:
                  secretKeyRef:
                    name: {{ template "concourse.concourse.fullname" . }}
                    key: oauth-auth-client-id
            - name: CONCOURSE_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-client-secret
            - name: CONCOURSE_OAUTH_AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-auth-url
            - name: CONCOURSE_OAUTH_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-token-url
            - name: CONCOURSE_OAUTH_DISPLAY_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-display-name
            - name: CONCOURSE_OAUTH_USERINFO_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-userinfo-url
            - name: CONCOURSE_OAUTH_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-scope
            - name: CONCOURSE_OAUTH_GROUPS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-groups-key
            - name: CONCOURSE_OAUTH_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-ca-cert
            - name: CONCOURSE_OAUTH_SKIP_SSL_VALIDATION
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oauth-auth-skip-ssl-validation
            {{- end }}
            {{- if .Values.secrets.oidcAuth.enabled }}
            - name: CONCOURSE_OIDC_DISPLAY_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-display-name
            - name: CONCOURSE_OIDC_ISSUER
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-issuer
            - name: CONCOURSE_OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-client-id
            - name: CONCOURSE_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-client-secret
            - name: CONCOURSE_OIDC_SCOPE
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-scope
            - name: CONCOURSE_OIDC_GROUPS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-groups-key
            - name: CONCOURSE_OIDC_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-ca-cert
            - name: CONCOURSE_OIDC_SKIP_SSL_VALIDATION
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: oidc-auth-skip-ssl-validation
            {{- end }}
            {{- if .Values.credentialManager.kubernetes.enabled }}
            - name: CONCOURSE_KUBERNETES_NAMESPACE_PREFIX
              value: {{ template "concourse.namespacePrefix" . }}
            - name: CONCOURSE_KUBERNETES_IN_CLUSTER
              value: ""
            {{- end }}
            {{- if .Values.credentialManager.vault.enabled }}
            - name: CONCOURSE_VAULT_URL
              value: {{ .Values.credentialManager.vault.url | quote }}
            - name: CONCOURSE_VAULT_PATH_PREFIX
              value: {{ .Values.credentialManager.vault.pathPrefix | quote }}
            - name: CONCOURSE_VAULT_AUTH_BACKEND
              value: {{ .Values.credentialManager.vault.authBackend | quote }}
            - name: CONCOURSE_VAULT_CLIENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: vault-client-token
            {{- if .Values.credentialManager.vault.useCaCert }}
            - name: CONCOURSE_VAULT_CA_CERT
              value: "/concourse-vault/ca.cert"
            {{- end }}
            {{- if eq (default "" .Values.credentialManager.vault.authBackend) "cert" }}
            - name: CONCOURSE_VAULT_CLIENT_CERT
              value: "/concourse-vault/client.cert"
            - name: CONCOURSE_VAULT_CLIENT_KEY
              value: "/concourse-vault/client.key"
            {{- end }}
            {{- if eq (default "" .Values.credentialManager.vault.authBackend) "approle" }}
            - name: CONCOURSE_VAULT_APPROLE_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: vault-approle-id
            - name: CONCOURSE_VAULT_APPROLE_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: vault-approle-secret-id
            - name: CONCOURSE_VAULT_AUTH_PARAM
              value: "role_id=$(CONCOURSE_VAULT_APPROLE_ID),secret_id=$(CONCOURSE_VAULT_APPROLE_SECRET_ID)"
            {{- end }}
            {{- end }}
            {{- if .Values.credentialManager.ssm.enabled }}
            - name: CONCOURSE_AWS_SSM_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-ssm-access-key
            - name: CONCOURSE_AWS_SSM_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-ssm-secret-key
            {{- if .Values.secrets.awsSsmSessionToken }}
            - name: CONCOURSE_AWS_SSM_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-ssm-session-token
            {{- end }}
            {{- if .Values.credentialManager.ssm.region }}
            - name: CONCOURSE_AWS_SSM_REGION
              value: {{ .Values.credentialManager.ssm.region | quote }}
            {{- end }}
            {{- if .Values.credentialManager.ssm.pipelineSecretTemplate }}
            - name: CONCOURSE_AWS_SSM_PIPELINE_SECRET_TEMPLATE
              value: {{ .Values.credentialManager.ssm.pipelineSecretTemplate | quote }}
            {{- end }}
            {{- if .Values.credentialManager.ssm.teamSecretTemplate }}
            - name: CONCOURSE_AWS_SSM_TEAM_SECRET_TEMPLATE
              value: {{ .Values.credentialManager.ssm.teamSecretTemplate | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.credentialManager.awsSecretsManager.enabled }}
            - name: CONCOURSE_AWS_SECRETSMANAGER_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-secretsmanager-access-key
            - name: CONCOURSE_AWS_SECRETSMANAGER_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-secretsmanager-secret-key
            {{- if .Values.secrets.awsSsmSessionToken }}
            - name: CONCOURSE_AWS_SECRETSMANAGER_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: aws-secretsmanager-session-token
            {{- end }}
            {{- if .Values.credentialManager.awsSecretsManager.region }}
            - name: CONCOURSE_AWS_SECRETSMANAGER_REGION
              value: {{ .Values.credentialManager.awsSecretsManager.region | quote }}
            {{- end }}
            {{- if .Values.credentialManager.awsSecretsManager.pipelineSecretTemplate }}
            - name: CONCOURSE_AWS_SECRETSMANAGER_PIPELINE_SECRET_TEMPLATE
              value: {{ .Values.credentialManager.awsSecretsManager.pipelineSecretTemplate | quote }}
            {{- end }}
            {{- if .Values.credentialManager.awsSecretsManager.teamSecretTemplate }}
            - name: CONCOURSE_AWS_SECRETSMANAGER_TEAM_SECRET_TEMPLATE
              value: {{ .Values.credentialManager.awsSecretsManager.teamSecretTemplate | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.web.metrics.prometheus.enabled }}
            - name: CONCOURSE_PROMETHEUS_BIND_IP
              value: "0.0.0.0"
            - name: CONCOURSE_PROMETHEUS_BIND_PORT
              value: {{ .Values.web.metrics.prometheus.port | quote }}
            {{- end }}
            {{- if .Values.web.metrics.datadog.enabled }}
            - name: CONCOURSE_DATADOG_AGENT_HOST
            {{- if .Values.web.metrics.datadog.agentHostUseHostIP }}
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- else }}
              value: {{ .Values.web.metrics.datadog.agentHost | quote }}
            {{- end }}
            - name: CONCOURSE_DATADOG_AGENT_PORT
              value: {{ .Values.web.metrics.datadog.agentPort | quote }}
            {{- if .Values.web.metrics.datadog.prefix }}
            - name: CONCOURSE_DATADOG_PREFIX
              value: {{ .Values.web.metrics.datadog.prefix }}
            {{- end }}
            {{- end }}
            {{- if .Values.web.metrics.influxdb.enabled }}
            - name: CONCOURSE_INFLUXDB_URL
              value: {{ .Values.web.metrics.influxdb.url | quote }}
            - name: CONCOURSE_INFLUXDB_DATABASE
              value: {{ .Values.web.metrics.influxdb.database | quote }}
            - name: CONCOURSE_INFLUXDB_USERNAME
              value: {{ .Values.web.metrics.influxdb.username | quote }}
            - name: CONCOURSE_INFLUXDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "concourse.concourse.fullname" . }}
                  key: influxdb-password
            - name: CONCOURSE_INFLUXDB_INSECURE_SKIP_VERIFY
              value: {{ .Values.web.metrics.influxdb.insecureSkipVerify | quote}}
            {{- end }}
            {{- with .Values.concourse.mainTeam }}
            - name: CONCOURSE_MAIN_TEAM_LOCAL_USER
              value: {{ join "," .localUsers }}
            {{- if .allowAllUsers }}
            - name: CONCOURSE_MAIN_TEAM_ALLOW_ALL_USERS
              value: ""
            {{- end }}
            - name: CONCOURSE_MAIN_TEAM_CF_USER
              value: {{ join "," .cfUsers }}
            - name: CONCOURSE_MAIN_TEAM_CF_ORG
              value: {{ join "," .cfOrgs }}
            - name: CONCOURSE_MAIN_TEAM_CF_SPACE
              value: {{ join "," .cfSpaces }}
            - name: CONCOURSE_MAIN_TEAM_GITHUB_USER
              value: {{ join "," .githubUsers }}
            - name: CONCOURSE_MAIN_TEAM_GITHUB_ORG
              value: {{ join "," .githubOrgs }}
            - name: CONCOURSE_MAIN_TEAM_GITHUB_TEAM
              value: {{ join "," .githubTeams }}
            - name: CONCOURSE_MAIN_TEAM_GITLAB_USER
              value: {{ join "," .gitlabUsers }}
            - name: CONCOURSE_MAIN_TEAM_GITLAB_GROUP
              value: {{ join "," .gitlabGroups }}
            - name: CONCOURSE_MAIN_TEAM_LDAP_USER
              value: {{ join "," .ldapUsers }}
            - name: CONCOURSE_MAIN_TEAM_LDAP_GROUP
              value: {{ join "," .ldapGroups }}
            - name: CONCOURSE_MAIN_TEAM_OAUTH_USER
              value: {{ join "," .oauthUsers }}
            - name: CONCOURSE_MAIN_TEAM_OAUTH_GROUP
              value: {{ join "," .oauthGroups }}
            - name: CONCOURSE_MAIN_TEAM_OIDC_USER
              value: {{ join "," .oidcUsers }}
            - name: CONCOURSE_MAIN_TEAM_OIDC_GROUP
              value: {{ join "," .oidcGroups }}
            {{- end }}
{{- if .Values.web.extraEnv }}
{{ toYaml .Values.web.extraEnv | indent 12 }}
{{- end }}
          ports:
            - name: atc
              containerPort: {{ .Values.concourse.atcPort }}
            - name: tsa
              containerPort: {{ .Values.concourse.tsaPort }}
            {{- if .Values.web.metrics.prometheus.enabled }}
            - name: prometheus
              containerPort: {{ .Values.web.metrics.prometheus.port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: atc
            initialDelaySeconds: 120
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: atc
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.web.resources | indent 12 }}
          volumeMounts:
            - name: concourse-keys
              mountPath: /concourse-keys
              readOnly: true
            {{- if .Values.credentialManager.vault.enabled }}
            - name: vault-keys
              mountPath: /concourse-vault
              readOnly: true
            {{- end }}
      affinity:
{{- if .Values.web.additionalAffinities }}
{{ toYaml .Values.web.additionalAffinities | indent 8 }}
{{- end }}
      volumes:
        - name: concourse-keys
          secret:
            secretName: {{ template "concourse.concourse.fullname" . }}
            defaultMode: 0400
            items:
              - key: host-key
                path: host_key
              - key: session-signing-key
                path: session_signing_key
              - key: worker-key-pub
                path: worker_key.pub
        {{- if .Values.credentialManager.vault.enabled }}
        - name: vault-keys
          secret:
            secretName: {{ template "concourse.concourse.fullname" . }}
            defaultMode: 0400
            items:
            {{- if .Values.credentialManager.vault.useCaCert }}
              - key: vault-ca-cert
                path: ca.cert
            {{- end }}
            {{- if eq (default "" .Values.credentialManager.vault.authBackend) "cert" }}
              - key: vault-client-cert
                path: client.cert
              - key: vault-client-key
                path: client.key
            {{- end }}
        {{- end }}
