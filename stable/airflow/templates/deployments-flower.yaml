{{- if .Values.flower.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow.fullname" . }}-flower
  {{- if .Values.flower.annotations }}
  annotations:
    {{- toYaml .Values.flower.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: flower
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.flower.labels }}
    {{- toYaml .Values.flower.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: flower
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-env: {{ include (print $.Template.BasePath "/configmap-env.yaml") . | sha256sum }}
        {{- if .Values.flower.podAnnotations }}
        {{- toYaml .Values.flower.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: flower
        release: {{ .Release.Name }}
        {{- if .Values.flower.podLabels }}
        {{- toYaml .Values.flower.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.airflow.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.airflow.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.flower.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.flower.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.flower.affinity }}
      affinity:
        {{- toYaml .Values.flower.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.flower.tolerations }}
      tolerations:
        {{- toYaml .Values.flower.tolerations | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      {{- if .Values.flower.securityContext }}
      securityContext:
        {{- toYaml .Values.flower.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-flower
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: "{{ include "airflow.fullname" . }}-env"
          env:
            {{- include "airflow.mapenvsecrets" . | indent 12 }}
          ports:
            - name: flower
              containerPort: 5555
              protocol: TCP
          {{- if .Values.flower.extraConfigmapMounts }}
          volumeMounts:
            {{- toYaml .Values.flower.extraConfigmapMounts | nindent 12 }}
          {{- end }}
          command:
            - "/usr/bin/dumb-init"
            - "--"
          args:
            - "bash"
            - "-c"
            - >
              true \
               && echo "*** waiting 60s..." \
               && sleep 60 \
               && mkdir -p /home/airflow/.local/bin \
               && export PATH=/home/airflow/.local/bin:$PATH \
               && export AIRFLOW__CORE__SQL_ALCHEMY_CONN="{{ include "airflow.connection.alchemy" . }}" \
               && export AIRFLOW__CELERY__RESULT_BACKEND="{{ include "airflow.connection.celery.backend" . }}" \
               && export AIRFLOW__CELERY__BROKER_URL="{{ include "airflow.connection.celery.broker" . }}" \
               && echo "*** running flower..." \
               && airflow flower
          livenessProbe:
            httpGet:
              path: "{{ .Values.ingress.flower.livenessPath }}/"
              port: flower
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            {{- toYaml .Values.flower.resources | nindent 12 }}
{{- end }}
