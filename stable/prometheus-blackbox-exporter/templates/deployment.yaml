apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-blackbox-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "prometheus-blackbox-exporter.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "prometheus-blackbox-exporter.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-blackbox-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-blackbox-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "prometheus-blackbox-exporter.chart" . }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
    {{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
    {{- end }}

      restartPolicy: {{ .Values.restartPolicy }}
      containers:
        - name: blackbox-exporter
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: {{ .Values.readOnlyRootFilesystem }}
            runAsNonRoot: {{ .Values.runAsNonRoot  }}
            runAsUser: {{ .Values.runAsUser }}
          args:
{{- if .Values.config }}
            - "--config.file=/config/blackbox.yaml"
{{- else }}
            - "--config.file=/etc/blackbox_exporter/config.yml"
{{- end }}
        {{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 12 }}
        {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - mountPath: /config
              name: config
        - name: configmap-reload
          image: "{{ .Values.configmapReload.image.repository }}:{{ .Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ .Values.configmapReload.image.pullPolicy }}"
          securityContext:
            runAsNonRoot: {{ .Values.configmapReload.runAsNonRoot }}
            runAsUser: {{ .Values.configmapReload.runAsUser }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:{{ .Values.service.port }}/-/reload
          resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
          volumeMounts:
            - mountPath: /etc/config
              name: config
              readOnly: true
      volumes:
        - name: config
{{- if .Values.secretConfig }}
          secret:
            secretName: {{ template "prometheus-blackbox-exporter.fullname" . }}
{{- else }}
          configMap:
            name: {{ template "prometheus-blackbox-exporter.fullname" . }}
{{- end }}
