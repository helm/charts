## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  server:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 700Mi
  sentinel:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 200Mi

## Node labels and tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
nodeSelector: {}
tolerations: []

## Redis image version
redis_image: quay.io/bzumhagen/kube-redis-ha:4.0.9-2
## replicas number for each component
replicas:
  servers: 3
  sentinels: 3
servers:
  serviceType: ClusterIP  # [ClusterIP|LoadBalancer]
  annotations: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

## Redis password
## Defaults to a random 10-character alphanumeric string if not set and auth is true
## ref: https://github.com/kubernetes/charts/blob/master/stable/redis-ha/templates/redis-auth-secret.yaml
##
## redisPassword:

## Redis specific configuration options
redis:
  ## Configures redis with AUTH (requirepass & masterauth conf params)
  auth: false
  # Max memory to use for each redis instance. Default is unlimited.
  maxMemory: ""
  # Max memory policy to use for each redis instance. Default is volatile-lru.
  maxMemoryPolicy: ""
  # Determines if scheduled RDB backups are created. Default is false.
  # Please note that local (on-disk) RDBs will still be created when re-syncing with a new slave. The only way to prevent this is to enable diskless replication.
  rdbBackups: "false"
  # When enabled, directly sends the RDB over the wire to slaves, without using the disk as intermediate storage. Default is false.
  disklessReplication: "false"
