apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "redis-ha.fullname" . }}-configmap
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ template "redis-ha.fullname" . }}
data:
  redis.conf: |
{{- if .Values.redis.customConfig }}
{{ .Values.redis.customConfig | indent 4 }}
{{- else }}
    dir "/data"
    {{- range $key, $value := .Values.redis.config }}
    {{ $key }} {{ $value }}
    {{- end }}
{{- if .Values.auth }}
    requirepass replace-default-auth
    masterauth replace-default-auth
{{- end }}
{{- end }}

  sentinel.conf: |
{{- if .Values.sentinel.customConfig }}
{{ .Values.sentinel.customConfig | indent 4 }}
{{- else }}
    dir "/data"
    {{- $root := . -}}
    {{- range $key, $value := .Values.sentinel.config }}
    sentinel {{ $key }} {{ $root.Values.redis.masterGroupName }} {{ $value }}
    {{- end }}
{{- if .Values.auth }}
    sentinel auth-pass {{ .Values.redis.masterGroupName }} replace-default-auth
{{- end }}
{{- end }}

  init.bash: |
    MASTER=`redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel get-master-addr-by-name {{ .Values.redis.masterGroupName }} | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`
    REDIS_CONF=/data/conf/redis.conf
    SENTINEL_CONF=/data/conf/sentinel.conf
    
    set -e
    function sentinel_update(){
        echo "Updating sentinel config"
        sed -i "1s/^/sentinel monitor {{ .Values.redis.masterGroupName }} $1 {{ .Values.redis.port }} {{ .Values.sentinel.quorum }} \n/" $SENTINEL_CONF
    }

    function redis_update(){
        echo "Updating redis config"
        echo "slaveof $1 {{ .Values.redis.port }}" >> $REDIS_CONF
    }

    function setup_defaults(){
        echo "Setting up defaults"
        if [[ "$HOSTNAME" == "{{ template "redis-ha.fullname" . }}-server-0" ]]; then
            echo "Setting this pod as the default master"
            sed -i "s/^.*slaveof.*//" $REDIS_CONF
            sentinel_update "$POD_IP"
        else
            echo "Setting default slave config.."
            echo "slaveof {{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }} {{ .Values.redis.port }}" >> $REDIS_CONF
            sentinel_update "{{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }}"
            redis_update "{{ template "redis-ha.fullname" . }}-server-0.{{ template "redis-ha.fullname" . }}"
        fi
    }

    function find_master(){
        echo "Attempting to find master"
        if [[ ! `redis-cli -h $MASTER{{ if .Values.auth }} -a $AUTH{{ end }} ping` ]]; then
           echo "Can't ping master, attempting to force failover"
           if redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel failover {{ .Values.redis.masterGroupName }} | grep -q 'NOGOODSLAVE' ; then 
               setup_defaults
               return 0
           fi
           sleep 10
           MASTER=`redis-cli -h {{ template "redis-ha.fullname" . }} -p {{ .Values.sentinel.port }} sentinel get-master-addr-by-name {{ .Values.redis.masterGroupName }} | grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`
           if [[ "$MASTER" ]]; then
               sentinel_update $MASTER
               redis_update $MASTER
           else
              echo "Could not failover, exiting..."
              exit 1
           fi
        else
            echo "Found reachable master, updating config"
            sentinel_update $MASTER
            redis_update $MASTER
        fi
    }

    mkdir -p /data/conf/
    echo "Initializing config.."

    cp /readonly-config/redis.conf $REDIS_CONF
    cp /readonly-config/sentinel.conf $SENTINEL_CONF

    if [[ "$MASTER" ]]; then
        find_master
    else
        setup_defaults
    fi
    if [[ "$AUTH" ]]; then
        echo "Setting auth values"
        sed -i "s/replace-default-auth/$AUTH/" $REDIS_CONF $SENTINEL_CONF
    fi

    echo "Ready..."
