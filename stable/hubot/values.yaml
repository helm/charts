---

fullnameOverride: ""

replicaCount: 1

strategyType: RollingUpdate

image:
  repository: minddocdev/hubot
  tag: 3.3.2
  pullPolicy: IfNotPresent

service:
  type: NodePort
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - hubot.local
  tls: []
  #  - secretName: hubot-tls
  #    hosts:
  #      - hubot.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraLabels: {}

extraConfigmapMounts: []
# - name: certs-configmap
#   mountPath: /hubot/ssl/
#   configMap: certs-configmap
#   readOnly: true

args:
  - --name
  - "${HUBOT_NAME}"
  - --adapter
  - slack

extraArgs: []
# - --alias
# - '!'

scripts: {}
# hithere.coffee: |
#   module.exports = (robot) ->
#     robot.respond /hi my bot/i, (msg) ->
#       msg.send 'Hi there my human'

scriptsRepo:
  enabled: false
  image: k8s.gcr.io/git-sync:v3.1.2
  repository: ""  # https:///git.mycompany.com/hubot-scripts.git
  branch: master
# username: git_username
# password: mysecretpassword
# existingSecretName: git-readonly-secret


# npm packages, required for custom scripts
extraPackages: []
#  - aws-sdk
#  - cron
#  - underscore

# external scripts (npm packages) to be enabled
externalScripts: []
# - hubot-pugme
# - hubot-plusplus

# Environment variables passed to Hubot.
config: {}
# HUBOT_URL: "http://hubot.mycompany.internal/"
# HUBOT_LOG_LEVEL: 'debug'
# HUBOT_CACHE_IMAGE: 'true'

# Sensitive environment variables passed to Hubot as Secret.
secretConfig: {}
# HUBOT_SLACK_TOKEN: 'xoxb-somenumbers-someletters'

# Reference to an existing Secret with sensitive env vars.
existingSecretConfigName: ""

redis:
  enabled: true
  usePassword: false
  cluster:
    enabled: false

# This should be changed only during CI tests
tty: false
