# ========================================================
# Definition of autodiscovery patterns
# ========================================================

# The top level element identifies the app type.
# The value of this element is used by AA to correctly
# setup the corresponding agent. Then we have a number
# of attributes that determines whether certain service is
# discovered as such.
# Then, we have `signatures` that represents the patterns
# used to match the data from the process' command line.

# Finally, `labels` attribute provides custom key-value pairs
# that are attached as container labels/env vars. The naming
# of some of them might be specific to AA framework and thus
# are used by itself.

# You can use any valid go template (https://golang.org/pkg/text/template/)
# construct inside yaml file. You can access command line args like this:
#
# labels:
#   cmdline: "{{ .Cmdline}}"
#
# For instance to get the container id or container name you
# would use the following go template action. Please note that built-in `isset`
# function is used to ensure container details are present since some
# apps can be discovered in the VM or baremetal host and thus lack container
# meta.
#
# labels:
#    container.name: '{{if isset .Meta.ContainerInfo "Name"}}{{ .Meta.ContainerInfo.Name }}{{end}}'
#    container.id:  '{{if isset .Meta.ContainerInfo "ID"}}{{ .Meta.ContainerInfo.ID }}{{end}}'

# You can also query app meta info through `Meta` field. For example, to get
# the version of nginx server use '{{if isset .Meta "Version"}}{{ .Meta.Version }}{{end}}'
# in `labels` section.

cassandra:
  name: Cassandra
  signatures:
    - java org.apache.cassandra.service.CassandraDaemon

clickhouse:
  name: Clickhouse fast time-series storage engine
  signatures:
    - clickhouse-server
  labels:
    SPM_MONITOR_CLICKHOUSE_DB_HOST_PORT: "{{ .IP }}:8123"
    SPM_MONITOR_CLICKHOUSE_DB_USER:
    SPM_MONITOR_CLICKHOUSE_DB_PASSWORD:

couchbase:
  name: Couchbase
  signatures:
    - beam.smp couchbase
  labels:
    COUCHBASE_HOST_PORT: "{{ .IP }}:8093"
    COUCHBASE_QUERY_HOST_PORT: "{{ .IP }}:8093"
    COUCHBASE_BASICAUTH_USERNAME:
    COUCHBASE_BASICAUTH_PASSWORD:

elasticsearch:
  name: Elasticsearch distributed search engine
  signatures:
    - java org.elasticsearch.bootstrap.Elasticsearch
  labels:
    SPM_MONITOR_ES_NODE_HOSTPORT: "{{ .IP }}:9200"

flink:
  name: Flink
  signatures:
    - java org.apache.flink.runtime.entrypoint.StandaloneSessionClusterEntrypoint
    - java org.apache.flink.runtime.taskexecutor.TaskManagerRunner
  lables:
    FLINK_HOST_PORT: "{{ .IP }}:8081"

haproxy:
  name: HAProxy
  signatures:
    - haproxy
  labels:
    SPM_MONITOR_HAPROXY_STATS_URL: "http://{{ .IP }}:9000/haproxy_stats;csv"
    SPM_MONITOR_HAPROXY_USER: ""
    SPM_MONITOR_HAPROXY_PASSWORD: ""

kafka:
  name: Kafka
  signatures:
    - java kafka.Kafka server.properties

mysql:
  name: MySQL
  signatures:
    - mysqld

nats:
  name: NATS
  signatures:
    - gnatsd -c gnatsd.conf
  labels:
    NATS_SERVER_HOST_PORT: "{{ .IP }}:8222"

postgresql:
  name: Postgres
  signatures:
    - postgres
    - postgres -D
    - postgres -c &#39;pg_ctl start -D -l
  labels:
    POSTGRESQL_HOST_PORT: 5432
    POSTGRESQL_DB_NAME: pg_stat_user_tables
    POSTGRESQL_DB_USER:
    POSTGRESQL_DB_PASSWORD:

rabbitmq:
  name: RabbitMQ
  signatures:
    - mnesia
    - rabbitmq
  labels:
    RABBITMQ_HOST_PORT: "http://{{ .IP }}:15672"
    RABBITMQ_BASICAUTH_USERNAME:
    RABBITMQ_BASICAUTH_PASSWORD:

redis:
  name: Redis key/value store
  signatures:
    - redis-server
  labels:
    REDIS_HOST: "{{ .IP }}"
    REDIS_PORT: "6379"
    REDIS_PASSWORD: ""

solr:
  name: Solr
  signatures:
    - java solr start.jar
  jmx:
    truststore-file:
    truststore-password:
    password-file:

spark-master:
  name: Spark master
  signatures:
    - java org.apache.spark.deploy.master.Master

spark-worker:
  name: Spark worker
  signatures:
    - java org.apache.spark.deploy.worker.Worker

spark-driver:
  name: Spark driver
  signatures:
    - java org.apache.spark.deploy.SparkSubmit
    - java org.apache.spark.deploy.worker.DriverWrapper

spark-executor:
  name: Spark executor
  signatures:
    - java org.apache.spark.executor.CoarseGrainedExecutorBackend

storm-nimbus:
  name: Storm nimbus
  signatures:
    - java org.apache.storm.daemon.nimbus

storm-supervisor:
  name: Storm supervisor
  signatures:
    - java org.apache.storm.daemon.supervisor.Supervisor

storm-worker:
  name: Storm worker
  signatures:
    - java org.apache.storm.daemon.worker

jvm:
  name: JVM apps
  signatures:
    - java org.eclipse.jetty.xml.XmlConfiguration

tomcat:
  name: Tomcat servlet container
  signatures:
    - java org.apache.catalina.startup.Bootstrap

zookeeper:
  name: Zookeeper
  signatures:
    - zkServer.sh start
    - org.apache.zookeeper.server.quorum.QuorumPeerMain
    - java zoo.cfg
