apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "spinnaker.fullname" . }}-halyard
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}
spec:
  serviceName: {{ template "spinnaker.fullname" . }}-halyard
  replicas: 1
  selector:
    matchLabels:
{{ include "spinnaker.standard-selector-labels" . | indent 6 }}
      component: halyard
  template:
    metadata:
      {{- if .Values.halyard.annotations }}
      annotations:
{{ toYaml .Values.halyard.annotations | indent 8 }}
      {{- end }}
      labels:
{{ include "spinnaker.standard-labels" . | indent 8 }}
        component: halyard
    spec:
      {{- if .Values.serviceAccount.halyardName }}
      serviceAccountName: {{ .Values.serviceAccount.halyardName }}
      {{- else }}
      serviceAccountName: {{ template "spinnaker.fullname" . }}-halyard
      {{- end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: "create-halyard-local"
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        command:
        - bash
        - /tmp/initscript/init.sh
        volumeMounts:
        - name: halyard-config
          mountPath: /tmp/config
        - name: service-settings
          mountPath: /tmp/service-settings
        - name: halyard-home
          mountPath: /tmp/spinnaker
        {{- if .Values.halyard.additionalProfileConfigMaps.create }}
        - name: additional-profile-config-maps
          mountPath: /tmp/additionalProfileConfigMaps
        {{- end }}
        - name: halyard-initscript
          mountPath: /tmp/initscript
      volumes:
      {{- if .Values.kubeConfig.enabled }}
      - name: kube-config
        secret:
          secretName: {{ .Values.kubeConfig.secretName }}
      {{- end }}
      {{- if .Values.gcs.enabled }}
      - name: gcs-key
        secret:
        {{- if .Values.gcs.secretName }}
          secretName: {{ .Values.gcs.secretName }}
        {{- else }}
          secretName: {{ template "spinnaker.fullname" . }}-gcs
        {{- end }}
      {{- end }}
      - name: reg-secrets
        secret:
          {{- if .Values.dockerRegistryAccountSecret }}
          secretName: {{ .Values.dockerRegistryAccountSecret }}
          {{- else }}
          secretName: {{ template "spinnaker.fullname" .}}-registry
          {{- end }}
      {{- if and .Values.s3.enabled .Values.s3.accessKey .Values.s3.secretKey }}
      - name: s3-secrets
        secret:
          secretName: {{ template "spinnaker.fullname" . }}-s3
      {{- end }}
      {{- if or .Values.halyard.additionalSecrets.create (hasKey .Values.halyard.additionalSecrets "name") }}
      - name: additional-secrets
        secret:
        {{- if .Values.halyard.additionalSecrets.create }}
          secretName: {{ template "spinnaker.fullname" . }}-additional-secrets
        {{- else if .Values.halyard.additionalSecrets.name }}
          secretName: {{ .Values.halyard.additionalSecrets.name }}
        {{- end }}
      {{- end }}
      {{- if .Values.halyard.additionalConfigMaps.create }}
      - name: additional-config-maps
        configMap:
          name: {{ template "spinnaker.fullname" . }}-additional-config-maps
      {{- end }}
      {{- if .Values.halyard.additionalProfileConfigMaps.create }}
      - name: additional-profile-config-maps
        configMap:
          name: {{ template "spinnaker.fullname" . }}-additional-profile-config-maps
      {{- end }}
      - name: halyard-config
        emptyDir: {}
      - name: service-settings
        configMap:
          name: {{ template "spinnaker.fullname" . }}-service-settings
      - name: halyard-initscript
        configMap:
          name: {{ template "spinnaker.fullname" . }}-halyard-init-script
      containers:
      - name: halyard
        image: {{ .Values.halyard.image.repository }}:{{ .Values.halyard.image.tag }}
        ports:
        - containerPort: 8064
          name: daemon
        volumeMounts:
        {{- if .Values.gcs.enabled }}
        - name: gcs-key
          mountPath: /opt/gcs
        {{- end }}
        {{- if and .Values.s3.enabled .Values.s3.accessKey .Values.s3.secretKey }}
        - name: s3-secrets
          mountPath: /opt/s3
        {{- end }}
        {{- if .Values.kubeConfig.enabled }}
        - name: kube-config
          mountPath: /opt/kube
        {{- end }}
        {{- if or .Values.halyard.additionalSecrets.create (hasKey .Values.halyard.additionalSecrets "name") }}
        - name: additional-secrets
          mountPath: /opt/halyard/additionalSecrets
        {{- end }}
        {{- if .Values.halyard.additionalConfigMaps.create }}
        - name: additional-config-maps
          mountPath: /opt/halyard/additionalConfigMaps
        {{- end }}
        - name: halyard-home
          mountPath: /home/spinnaker
        - name: halyard-config
          mountPath: /opt/halyard/config
        - name: reg-secrets
          mountPath: /opt/registry/passwords
  volumeClaimTemplates:
  - metadata:
      name: halyard-home
      labels:
{{ include "spinnaker.standard-labels" . | indent 8 }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
