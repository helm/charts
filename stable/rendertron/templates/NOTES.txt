1. The rendertron server can be accessed via port {{ .Values.service.port }} on the following DNS name from within your cluster:

   {{ template "rendertron.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
{{ if .Values.ingress.enabled }}
   From outside the cluster, the server URL(s) are:
{{- range .Values.ingress.hosts }}
     http://{{ . }}
{{- end }}
{{ else }}
   Get the rendertron URL to visit by running these commands in the same shell:
{{ if contains "NodePort" .Values.service.type -}}
     export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "rendertron.fullname" . }})
     export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
     echo http://$NODE_IP:$NODE_PORT
{{ else if contains "LoadBalancer" .Values.service.type -}}
   NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "rendertron.fullname" . }}'
     export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "rendertron.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
     http://$SERVICE_IP:{{ .Values.service.port -}}
{{ else if contains "ClusterIP"  .Values.service.type }}
     export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "rendertron.fullname" . }},component={{ .Values.name }}" -o jsonpath="{.items[0].metadata.name}")
     kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080
{{- end }}
{{- end }}
