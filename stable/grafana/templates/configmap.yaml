apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "grafana.fullname" . }}
  labels:
    app: {{ template "grafana.name" . }}
    chart: {{ template "grafana.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
{{- if .Values.plugins }}
  plugins: {{ join "," .Values.plugins }}
{{- end }}
  grafana.ini: |
{{- range $key, $value := index .Values "grafana.ini" }}
    [{{ $key }}]
    {{- range $elem, $elemVal := $value }}
    {{ $elem }} = {{ $elemVal }}
    {{- end }}
{{- end }}

{{- if .Values.datasources }}
  {{- range $key, $value := .Values.datasources }}
  {{ $key }}: |
{{ toYaml $value | indent 4 }}
  {{- end -}}
{{- end -}}

{{- if .Values.dashboardProviders }}
  {{- range $key, $value := .Values.dashboardProviders }}
  {{ $key }}: |
{{ toYaml $value | indent 4 }}
  {{- end -}}
{{- end -}}

{{- if .Values.dashboards  }}
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    {{- if .Values.dashboardProviders }}
      {{- range $key, $value := .Values.dashboardProviders }}
        {{- range $value.providers }}
    mkdir -p {{ .options.path }}
        {{- end }}
      {{- end }}
    {{- end }}

  {{- range $provider, $dashboards := .Values.dashboards }}
    {{- range $key, $value := $dashboards }}
      {{- if (or (hasKey $value "gnetId") (hasKey $value "url")) }}
    curl -sk \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
    {{- if $value.url -}}{{ $value.url }}{{- else -}} https://grafana.com/api/dashboards/{{ $value.gnetId }}/revisions/{{- if $value.revision -}}{{ $value.revision }}{{- else -}}1{{- end -}}/download{{- end -}}{{ if $value.datasource }}| sed 's|\"datasource\":[^,]*|\"datasource\": \"{{ $value.datasource }}\"|g'{{ end }} \
    > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json
      {{- end -}}
      {{- if hasKey $value "gerritserver" }}
    curl -sk \
    --connect-timeout 60 \
    --max-time 60 \
    --user {{$value.gerrituser}}:{{$value.gerritpwd}} \
    https://{{ $value.gerritserver }}/a/projects/$(echo {{ $value.gerritprojname }} | sed 's/\//%2F/g' )/branches/{{ $value.gerritprojbrch }}/files/$(echo {{ $value.gerritfile }} | sed 's/\//%2F/g' )/content \
    > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.base64
    base64 -d /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.base64 > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json
    rm -f /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.base64
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
