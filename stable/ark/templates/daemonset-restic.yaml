{{- if .Values.configuration.backupStorageProvider.resticLocation -}}
{{- $providers := list .Values.configuration.backupStorageProvider.name .Values.configuration.persistentVolumeProvider.name | uniq -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "ark.fullname" . }}-restic
  labels:
    release: {{ .Release.Name }}
    app: {{ template "ark.name" . }}
    chart: {{ template "ark.chart" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ template "ark.name" . }}-restic
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: {{ template "ark.name" . }}-restic
  {{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
  {{- end }}
    spec:
      securityContext:
        runAsUser: 0
      restartPolicy: Always
      serviceAccountName: {{ template "ark.serverServiceAccount" . }}
      containers:
      - name: ark
        image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /ark
        args:
  {{- if eq .Values.logging.to "both" }}
        - --alsologtostderr
  {{- else if eq .Values.logging.to "stderr" }}
        - --logtostderr
  {{- end }}
        - restic
        - server
        - --log-level={{ .Values.logging.level }}
  {{- if has "azure" $providers }}
        envFrom:
        - secretRef:
            name: {{ template "ark.secretName" . }}
  {{- end }}
        volumeMounts:
        - name: host-pods
          mountPath: /host_pods
          mountPropagation: HostToContainer
        - name: scratch
          mountPath: /scratch
  {{- if and .Values.credentials.useSecret (or (has "aws" $providers) (has "gcp" $providers)) }}
        - name: cloud-credentials
          mountPath: /credentials
  {{- end }}
        env:
  {{- if and .Values.credentials.useSecret (has "aws" $providers) }}
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /credentials/aws
  {{- end }}
  {{- if and .Values.credentials.useSecret (has "gcp" $providers) }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /credentials/gcp
  {{- end }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HEPTIO_ARK_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ARK_SCRATCH_DIR
          value: /scratch
      volumes:
  {{- if and .Values.credentials.useSecret (or (has "aws" $providers) (has "gcp" $providers)) }}
      - name: cloud-credentials
        secret:
          secretName: {{ template "ark.secretName" . }}
  {{- end }}
      - name: host-pods
        hostPath:
          path: /var/lib/kubelet/pods
      - name: scratch
        emptyDir: {}
{{- end }}
