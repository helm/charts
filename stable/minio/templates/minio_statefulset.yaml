{{- if eq .Values.mode "distributed" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  clusterIP: None
  ports:
    - name: service
      port: 9000
      targetPort: {{ .Values.servicePort }}
      protocol: TCP
  selector:
    app: {{ template "fullname" . }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      volumes:
        - name: minio-user
          secret:
            secretName: {{ template "fullname" . }}-user
        - name: minio-configmap
          configMap:
            name: {{ template "fullname" . }}-cm
      containers:
        - name: minio
          image: {{ .Values.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /bin/sh
            - /go/bin/start.sh
          volumeMounts:
            - name: export
              mountPath: {{ .Values.mountPath }}
            - name: minio-configmap
              mountPath: /go/bin/start.sh
              subPath: start.sh
          ports:
            - name: service
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}-user
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}-user
                  key: secretkey
          resources:
{{ toYaml .Values.resources | indent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: export
        annotations:
          {{- if .Values.persistence.storageClass }}
          volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass }}
          {{- else }}
          volume.alpha.kubernetes.io/storage-class: default
          {{- end }}
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
