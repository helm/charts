{{- if .Values.secrets.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "drone.fullname" . }}-secrets
  labels:
    app: {{ template "drone.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: secrets
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- if .Values.metrics.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
{{- end }}
{{- if .Values.secrets.annotations }}
{{ toYaml .Values.secrets.annotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "drone.name" . }}
        release: "{{ .Release.Name }}"
        component: secrets
    spec:
{{- if .Values.secrets.schedulerName }}
      schedulerName: "{{ .Values.secrets.schedulerName }}"
{{- end }}
{{- if .Values.secrets.affinity }}
      affinity:
{{ toYaml .Values.secrets.affinity | indent 8 }}
{{- end }}
{{- if .Values.secrets.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.secrets.nodeSelector | indent 8 }}
{{- end }}
      serviceAccountName: {{ template "drone.serviceAccountName" . }}
      containers:
      - name: {{ template "drone.fullname" . }}-secrets
        image: "{{ .Values.images.secrets.repository }}:{{ .Values.images.secrets.tag }}"
        imagePullPolicy: {{ .Values.images.secrets.pullPolicy }}
        env:
          - name: KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "drone.fullname" . }}
                key: secretService
          {{- range $key, $value := .Values.secrets.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        #livenessProbe:
          #httpGet:
            #path: /
            #port: http
          #initialDelaySeconds: 60
        resources:
{{ toYaml .Values.secrets.resources | indent 10 }}
{{- with .Values.secrets.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
        volumeMounts:
{{- with .Values.secrets.extraVolumeMounts }}
{{ tpl . $ | indent 10 }}
{{- end }}
      volumes:
{{- with .Values.secrets.extraVolumes }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- end }}
