apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-worker
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.worker.replicacount }}
  template:
    metadata:
      {{- if .Values.worker.podAnnotations }}
      annotations:
{{ toYaml .Values.worker.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        app: {{ template "fullname" . }}
        release: "{{ .Release.Name }}"
        role: worker
    spec:
      {{- if .Values.worker.affinity }}
      affinity:
{{ toYaml .Values.worker.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.worker.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.worker.tolerations }}
      tolerations:
{{ toYaml .Values.worker.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.worker.schedulerName }}
      schedulerName: "{{ .Values.worker.schedulerName }}"
      {{- end }}
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-workers
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["run", "worker"]
        ports:
        - containerPort: {{ .Values.service.internalPort }}
{{- include "sentry.standardEnv" . | indent 8 }}
{{- if .Values.worker.env }}
{{ toYaml .Values.worker.env | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
        resources:
{{ toYaml .Values.worker.resources | indent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
