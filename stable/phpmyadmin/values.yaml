## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

## Bitnami WordPress image version
## ref: https://hub.docker.com/r/bitnami/phpmyadmin/tags/
##
image:
  registry: docker.io
  repository: bitnami/phpmyadmin
  tag: 4.9.1-debian-9-r34
  ## Specify a imagePullPolicy
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

## String to partially override phpmyadmin.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override phpmyadmin.fullname template
##
# fullnameOverride:

## User of the application
## ref: https://github.com/bitnami/bitnami-docker-phpmyadmin#environment-variables
##
service:
  type: ClusterIP
  port: 80

db:
  ## Database port
  ##
  port: 3306

  ## If you are deploying phpMyAdmin as part of a release and the database is part
  ## of the release, you can pass a suffix that will be used to find the database
  ## in releasename-dbSuffix. Please note that this setting precedes db.host
  ##
  # chartName: mariadb

  ## Database Hostname. Ignored when db.chartName is set.
  ##
  # host: foo

  ## If you want to test phpMyAdmin, you can set it to bundle a MariaDB
  ## instance
  ##
  bundleTestDB: false

  ## Whether to enable SSL for the connection between phpMyAdmin and the MySQL server to secure the connection
  ##
  enableSsl: false
  ssl:
    ## Client key file when using SSL
    ##
    clientKey: |-
    ## Client certificate file when using SSL
    ##
    clientCertificate: |-
    ## CA file when using SSL
    ##
    caCertificate: |-
    ## List of allowable ciphers for connections when using SSL
    ##
    # ciphers:
    ## Enable SSL certificate validation
    ##
    verify: true

ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: false

  ## Set this to true in order to add the corresponding annotations for cert-manager
  certManager: false

  ## Ingress annotations done as key:value pairs
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rewrite-target: /
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ##
  hosts:
  - name: phpmyadmin.local
    path: /

    ## Set this to true in order to enable TLS on the ingress record
    tls: false

    ## Optionally specify the TLS hosts for the ingress record
    ## Useful when the Ingress controller supports www-redirection
    ## If not specified, the above host name will be used
    # tlsHosts:
    # - www.phpmyadmin.local
    # - phpmyadmin.local

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: phpmyadmin.local-tls

## Enable liveness and readiness probes
probesEnabled: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Pod labels
podLabels: {}

## Pod annotations
podAnnotations: {}

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/apache-exporter
    tag: 0.7.0-debian-9-r104
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
     ## Metrics exporter pod Annotation and Labels
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9117"
  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources: {}
