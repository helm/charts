{{ $podCount := .Values.replicas | int }}
1. After the statefulset is created completely, one can check which instance is primary by running:

    $ for ((i = 0; i < {{ .Values.replicas }}; ++i)); do kubectl exec --namespace {{ .Release.Namespace }} {{ template "fullname" . }}-$i -- sh -c 'mongo --eval="printjson(rs.isMaster())"'; done

2. One can insert a key into the primary instance of the mongodb replica set by running the following:
    MASTER_POD_NAME must be replaced with the name of the master found from the previous step.

    $ kubectl exec --namespace {{ .Release.Namespace }} MASTER_POD_NAME -- mongo --eval="printjson(db.test.insert({key1: 'value1'}))"

3. One can fetch the keys stored in the primary or any of the slave nodes in the following manner.
    POD_NAME must be replaced by the name of the pod being queried.

    $ kubectl exec --namespace {{ .Release.Namespace }} POD_NAME -- mongo --eval="rs.slaveOk(); db.test.find().forEach(printjson)"
{{- if (and (not (empty .Values.podServices.enabled)) (eq .Values.podServices.enabled true)) }}

4.
{{- if (and (not (empty .Values.podServices.enabled)) (contains .Values.podServices.type "NodePort")) }}

{{- range $i := until $podCount }}
  export NODE_PORT_{{ $i }}=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "fullname" $ }}-{{ $i }})
{{- end }}

  export NODE_IP_=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

  You can get the MongoDB URI with

  echo mongodb://$NODE_IP:$NODE_PORT_0,$NODE_IP:$NODE_PORT_1,$NODE_IP:$NODE_PORT_2, ... /?replicaSet={{ .Values.replicaset }}

{{- else if (and (not (empty .Values.podServices.enabled)) (contains .Values.podServices.type "LoadBalancer")) }}

     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w -l app={{ template "name" . }}'

{{- range $i := until $podCount }}
  export SERVICE_IP_{{ $i }}=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ template "fullname" $ }}-{{ $i }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
{{- end }}

  You can get the MongoDB URI with

  echo mongodb://$SERVICE_IP_0:{{ $.Values.port }},$SERVICE_IP_1:{{ $.Values.port }},$SERVICE_IP_2,:{{ $.Values.port }}, ... /?replicaSet={{ $.Values.replicaset }}

{{- end }}
{{- end }}
