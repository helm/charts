apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "stolon.fullname" . }}-create-secrets
  labels:
    app: {{ template "stolon.name" . }}
    chart: {{ template "stolon.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ template "stolon.name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: {{ .Chart.Name }}
          image: "lachlanevenson/k8s-kubectl:v1.10.2"
          command:
          - sh
          - -c
          - "if ! kubectl get secret {{ template "stolon.fullname" . }}; then kubectl create secret generic {{ template "stolon.fullname" . }} --namespace {{ .Release.Namespace }} --from-literal=pg_su_password={{- if .Values.superuserPassword -}}'{{ .Values.superuserPassword }}' {{ else }}'{{ randAlphaNum 40 }}' {{ end }} --from-literal=pg_repl_password={{- if .Values.replicationPassword -}}'{{ .Values.replicationPassword }}'{{ else }}'{{ randAlphaNum 40 }}'{{- end -}}; fi"
          volumeMounts:
          - name: kubectl
            mountPath: /kubectl
      volumes:
      - name: kubectl
        hostPath:
          path: /usr/bin/kubectl
