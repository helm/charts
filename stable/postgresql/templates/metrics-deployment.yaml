{{- if .Values.metrics.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "postgresql.fullname" . }}-metrics
  labels:
    app: {{ template "postgresql.name" . }}
    chart: {{ template "postgresql.chart" . }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      app: {{ template "postgresql.name" . }}
      role: metrics
  template:
    metadata:
      labels:
        release: {{ .Release.Name | quote }}
        app: {{ template "postgresql.name" . }}
        chart: {{ template "postgresql.chart" . }}
        role: metrics
      {{- if .Values.metrics.podLabels }}
{{ toYaml .Values.metrics.podLabels | indent 8 }}
      {{- end }}
      {{- if .Values.metrics.podAnnotations }}
      annotations:
{{ toYaml .Values.metrics.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.metrics.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.metrics.image.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end}}
      {{- if .Values.metrics.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.metrics.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.metrics.tolerations }}
      tolerations:
{{ toYaml .Values.metrics.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: metrics
        image: {{ template "metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        env:
        {{- $database := required "In order to enable metrics you need to specify a database (.Values.postgresqlDatabase)" .Values.postgresqlDatabase }}
        - name: DATA_SOURCE_URI
          value: {{ printf "%s:%d/%s?sslmode=disable" ( include "postgresql.fullname" . ) (int .Values.service.port) $database | quote }}
        - name: DATA_SOURCE_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "postgresql.fullname" . }}
              key: postgresql-password
        - name: DATA_SOURCE_USER
          value: {{ .Values.postgresqlUsername }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: 9187
        resources:
{{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
