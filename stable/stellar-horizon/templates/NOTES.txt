1. Wait until Stellar Horizon is ready (i.e., ingested all requested data
   from Stellar Core

2. Get the Stellar Horizon URL:

{{- if .Values.ingress.enabled }}

  You should be able to access your new Stellar Horizon installation through

  {{- range .Values.ingress.hosts }}
  {{ if .tls }}https{{ else }}http{{ end }}://{{ .name }}/
  {{- end }}

{{- else if contains "LoadBalancer" .Values.service.type }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "stellar-horizon.fullname" . }}'

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "stellar-horizon.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo "Stellar Core URL: http://$SERVICE_IP:{{ .Values.service.port }}/"

{{- else if contains "ClusterIP" .Values.service.type }}

  echo "Stellar Core URL: http://127.0.0.1/"
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "stellar-horizon.fullname" . }} 8080:{{ .Values.service.port }}

{{- else if contains "NodePort" .Values.service.port }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "stellar-horizon.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Stellar Core URL: http://$NODE_IP:$NODE_PORT/"

{{- end }}
