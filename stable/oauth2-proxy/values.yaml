# E-mail domains to authenticate
emailDomains:
  - "*" # authenticate all domains

# Oauth client configuration specifics
config:
  # OAuth client ID
  clientID: "XXXXXXX"
  # OAuth client secret
  clientSecret: "XXXXXXXX"
  # Create a new secret with the following command
  # python -c 'import os,base64; print base64.b64encode(os.urandom(16))'
  cookieSecret: "XXXXXXXXXX"
  # Custom configuration file: oauth2_proxy.cfg
  # configFile: |-
  #   pass_basic_auth = false
  #   pass_access_token = true
  configFile: ""

# Provider-specific configuration
providers:
  # Additional configuration for the Google provider
  # Only required if authentication limited to certain Google Groups
  google:
    # # The admin e-mail address to impersonate
    # adminEmail: "xxx@yyy.zzz"
    # # A list of groups to allow
    # groups:
    #   - "xxx@yyy.zzz"
    # # Service account credentials in JSON format
    # jsonCredentials: |-
    #   {
    #     "type": "",
    #     "project_id": "",
    #     "private_key_id": "",
    #     "private_key": "",
    #     "client_email": "",
    #     "client_id": "",
    #     "auth_uri": "",
    #     "token_uri": "",
    #     "auth_provider_x509_cert_url": "",
    #     "client_x509_cert_url": ""
    #   }
  # Additional configuration for the GitHub provider
  # Only required if authentication is limited to certain orgs and teams
  github:
    # The GitHub orgs to restrict access to
    orgs:
      - "xxx"
    # The GitHub teams to restrict access to
    teams:
      - "xxx"

image:
  repository: "a5huynh/oauth2_proxy"
  tag: "2.2"
  pullPolicy: "IfNotPresent"

# Optionally specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
# ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# imagePullSecrets:
  # - name: myRegistryKeySecretName

extraArgs:
  upstream: "file:///dev/null"
  http-address: "0.0.0.0:4180"

service:
  type: ClusterIP
  port: 80
  annotations: {}
  # foo.io/bar: "true"

ingress:
  enabled: false
  path: /
  # Used to create an Ingress record.
  # hosts:
    # - chart-example.local
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  # tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 300Mi
  # requests:
  #   cpu: 100m
  #   memory: 300Mi

priorityClassName: ""

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

podAnnotations: {}
podLabels: {}
replicaCount: 1
