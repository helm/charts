apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "home-assistant.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "home-assistant.name" . }}
    helm.sh/chart: {{ include "home-assistant.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "home-assistant.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "home-assistant.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }} 
      {{- end }}
      initContainers:
      {{- if .Values.git.enabled }}
      - name: git-sync
        image: "{{ .Values.git.image.repository }}:{{ .Values.git.image.tag }}"
        imagePullPolicy: {{ .Values.git.image.pullPolicy }}
        command: ['sh', '-c', 'git clone {{ .Values.git.repo }} {{ .Values.git.syncPath }}']
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: {{ .Values.git.keyPath }}/id_rsa
          name: git-secret
          subPath: id_rsa
        - mountPath: {{ .Values.git.keyPath }}id_rsa.pub
          name: git-secret
          subPath: id_rsa.pub
        - mountPath: {{ .Values.git.keyPath }}/known_hosts
          name: git-secret
          subPath: known_hosts
        securityContext:
          runAsUser: 0
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: api
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 5
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- range $name, $opts := .Values.extraEnvSecrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $opts.secret }}
                  key: {{ $opts.key }}
            {{- end }}
          volumeMounts:
          - mountPath: /config
            name: config
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if .Values.configurator.enabled }}
        - name: configurator
          image: "{{ .Values.configurator.image.repository }}:{{ .Values.configurator.image.tag }}"
          imagePullPolicy: {{ .Values.configurator.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.configurator.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
              initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: http
              initialDelaySeconds: 15
          env:
            {{- if .Values.configurator.hassApiPassword }}
            - name: HC_HASS_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "home-assistant.fullname" . }}-configurator
                  key: hass-api-password
            {{- end }}
            {{- if (.Values.configurator.username) and (.Values.configurator.password) }}
            - name: HC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "home-assistant.fullname" . }}-configurator
                  key: username
            - name: HC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "home-assistant.fullname" . }}-configurator
                  key: password
            {{- end }}
            {{- if .Values.configurator.hassApiUrl }}
            - name: HC_HASS_API
              value: "{{ .Values.configurator.hassApiUrl }}"
            {{- else }}
            - name: HC_HASS_API
              value: "http://127.0.0.1:8123/api/"
            {{- end }}
            {{- if .Values.configurator.basepath }}
            - name: HC_BASEPATH
              value: "{{ .Values.configurator.basepath }}"
            {{- end }}
            {{- if .Values.configurator.enforceBasepath }}
            - name: HC_ENFORCE_BASEPATH
              value: "{{ .Values.configurator.enforceBasepath }}"
            {{- end }}
            {{- range $key, $value := .Values.configurator.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          volumeMounts:
          - mountPath: /config
            name: config
          {{- if .Values.git.enabled }}
          - mountPath: {{ .Values.git.keyPath }}/id_rsa
            name: git-secret
            subPath: id_rsa
          - mountPath: {{ .Values.git.keyPath }}/id_rsa.pub
            name: git-secret
            subPath: id_rsa.pub
          - mountPath: {{ .Values.git.keyPath }}/known_hosts
            name: git-secret
            subPath: known_hosts
          {{- end }}
          resources:
{{ toYaml .Values.configurator.resources | indent 12 }}
        {{- end }}
      volumes:
      - name: config
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "home-assistant.fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
      {{- if .Values.git.enabled }}
      - name: git-secret
        secret:
          defaultMode: 256
          secretName: {{ .Values.git.secret }}
      {{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
