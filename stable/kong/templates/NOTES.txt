1. Kong Admin can be accessed via port {{ .Values.admin.http.servicePort }} or SSL port {{ .Values.admin.https.servicePort }} on the following DNS name from within your cluster:
     '{{ template "kong.name" . }}.{{ .Release.Namespace }}.svc.cluster.local'

To connect from outside the K8s cluster:
   {{- if contains "LoadBalancer" .Values.admin.type }}
     HOST=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-admin -o jsonpath='{.status.loadBalancer.ingress.ip}')
     PORT=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-admin -o jsonpath='{.spec.ports[0].nodePort}')

   {{- else if contains "NodePort" .Values.admin.type }}
     HOST=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath='{.items[0].status.addresses[0].address}')
     PORT=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-admin -o jsonpath='{.spec.ports[0].nodePort}')

   {{- else if contains "ClusterIP" .Values.admin.type }}
     HOST=127.0.0.1

     {{- if .Values.admin.https }}
     # Execute the following commands to route the connection to Admin SSL port:
     export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "kong.name" . }}" -o jsonpath="{.items[0].metadata.name}")
     kubectl port-forward $POD_NAME {{ .Values.admin.https.servicePort }}:{{ .Values.admin.https.servicePort }}
     {{- else }}
     # Execute the following commands to route the connection to Admin port:
     export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "kong.name" . }}" -o jsonpath="{.items[0].metadata.name}")
     kubectl port-forward $POD_NAME {{ .Values.admin.http.servicePort }}:{{ .Values.admin.http.servicePort }}
     {{- end }}
   {{- end }}


2. Kong Proxy can be accessed via port {{ .Values.proxy.http.servicePort }} or SSL port {{ .Values.proxy.https.servicePort }} on the following DNS name from within your cluster:
     '{{ template "kong.name" . }}.{{ .Release.Namespace }}.svc.cluster.local'

To connect from outside the K8s cluster:
   {{- if contains "LoadBalancer" .Values.proxy.type }}
     HOST=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-proxy -o jsonpath='{.status.loadBalancer.ingress.ip}')
     PORT=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-proxy -o jsonpath='{.spec.ports[0].nodePort}')

   {{- else if contains "NodePort" .Values.proxy.type }}
     HOST=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath='{.items[0].status.addresses[0].address}')
     PORT=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "kong.name" . }}-proxy -o jsonpath='{.spec.ports[0].nodePort}')

   {{- else if contains "ClusterIP" .Values.proxy.type }}
     HOST=127.0.0.1

     {{- if .Values.proxy.https }}
     # Execute the following commands to route the connection to proxy SSL port:
     export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "kong.name" . }}" -o jsonpath="{.items[0].metadata.name}")
     kubectl port-forward $POD_NAME {{ .Values.proxy.https.servicePort }}:{{ .Values.proxy.https.servicePort }}
     {{- else }}
     # Execute the following commands to route the connection to proxy port:
     export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "kong.name" . }}" -o jsonpath="{.items[0].metadata.name}")
     kubectl port-forward $POD_NAME {{ .Values.proxy.http.servicePort }}:{{ .Values.proxy.http.servicePort }}
     {{- end }}
   {{- end }}
