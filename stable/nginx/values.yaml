# Default values for nginx.
# This is a YAML-formatted file.

## create a service account, role, and rolebinding with least required
## permissions
rbac:
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

deployment:
  ## Number of pods in the replicaSet. Increate as needed to handle SLA and load requirements
  replicaCount: 1

  ## The image source. Default is to get the official nginx container image from docker hub.
  image:
    repository: nginx
    tag: "1.15.12"
    pullPolicy: IfNotPresent

  ## Additional command line arguments to pass to nginx (if any)
  extraArgs: {}

  ## Additional environment variables to set (if any)
  extraEnvs: []

  ## Additional containers that can initialize the pod. See https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## These might be used to pull content from a git repo or build content (eg. hugo) prior to starting the actual
  ## nginx container.
  initContainers: []


    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  resources: {}

  ## select specific nodes to run on. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}

  ## tolerate node taints. https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## assign pod affinities. https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## select a specific name/fullname for generated primitives instead of using the generated name
nameOverride: ""
fullnameOverride: ""


service:
  ## service types can be ClusterIP, NodePort, or LoadBalancer
  type: ClusterIP
  httpPorts:
    - port: 80
      ## nodePort is a port in a range specific to the cluster configuration, but defaults
      ## between 30000-32767. Select a specific one to keep it static, otherwise a different
      ## port is selected with each deployment.
      # nodePort:
  httpsPorts:
    - port: 443
      # nodePort:
  ## set arbitrary annotations and labels on this service
  annotations: {}
  labels: {}

ingress:
  ## enable if you have an ingress controller to allow access from outside the cluster
  enabled: false
  ## annotations on ingress records can be set to modify the behavior of the ingress
  ## controller. See your ingress controller documentation for details.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  ## replace the closed braces with a list similar to the example below to enable
  ## tls
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## If defined, this will be used to create a ConfigMap that will replace /etc/nginx
## so the configuration will need to be complete.
##
## The contents of this map will replace /etc/nginx
config: {}
  # nginx.conf |
    # worker_processes 1;
    # daemon off;
    # events {
    #     worker_connections 1024;
    # }
    # http {
    #     server {
    #         listen 80;
    #         location / {
    #             root /usr/share/nginx/html;
    #         }
    #     }
    # }

## This will create a ConfigMap that will be mounted at /usr/share/nginx/html
content:
  data:
    index.html: "<html><body><h1>Hello World!</h1></body></html>"
  ## alternatively, _instead_ of `data` you can use this to pull content from a directory
  # fromDir: mycontentdir
