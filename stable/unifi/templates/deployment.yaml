apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "unifi.fullname" . }}
  labels:
    app: {{ template "unifi.name" . }}
    chart: {{ template "unifi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "unifi.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "unifi.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: gui
            containerPort: {{ .Values.guiService.port }}
            protocol: TCP
          - name: controller
            containerPort: {{ .Values.controllerService.port }}
            protocol: TCP
          - name: discovery
            containerPort: {{ .Values.discoveryService.port }}
            protocol: UDP
          - name: stun
            containerPort: {{ .Values.stunService.port }}
            protocol: UDP
          livenessProbe:
            httpGet:
              path: /status
              port: gui
              scheme: HTTPS
              initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /status
              port: gui
              scheme: HTTPS
              initialDelaySeconds: 15
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            - name: RUNAS_UID0
              value: "{{ .Values.runas_root }}"
            {{- if .Values.mongodb.enabled }}
            - name: DB_URI
              value: "{{ .Values.mongodb.db_uri }}"
            - name: STATDB_URI
              value: "{{ .Values.mongodb.statdb_uri }}"
            - name: DB_NAME
              value: "{{ .Values.mongodb.database_name }}"
            {{- end }}
          volumeMounts:
          - mountPath: /unifi/data
            name: unifi-data
            subPath: data
          - mountPath: /unifi/log
            name: unifi-data
            subPath: log
          - mountPath: /unifi/cert
            name: unifi-data
            subPath: cert
          - mountPath: /unifi/init.d
            name: unifi-data
            subPath: init.d
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: unifi-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "unifi.fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
