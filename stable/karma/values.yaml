# Default values for karma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lmierzwa/karma
  tag: v0.50
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# env:
# - name: ALERTMANAGER_URI
#   value: http://monitoring-prometheus-alertmanager

service:
  type: ClusterIP
  port: 80
  annotations: {}
    # prometheus.io/scrape: "true"
  labels: {}

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

deployment:
  annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}

# configuration for liveness probe
livenessProbe:
  delay: 5
  period: 5
  path: /

# configMap dictates if a configmap based configuration for Karma should be used
# to provide advanced configuration. NOTE, you must use port 8080!
configMap:
  enabled: false
  # rawConfig:
  #   alertmanager:
  #   interval: 30s
  #   servers:
  #     - name: local
  #       uri: http://localhost:9093
  #       timeout: 10s
  #       proxy: true
  #       headers:
  #         x-auth-token: some-token
  #         any-header: string-value
  #     - name: client-auth
  #       uri: https://localhost:9093
  #       timeout: 10s
  #       tls:
  #         ca: /etc/ssl/certs/ca-bundle.crt
  #         cert: /etc/karma/client.pem
  #         key: /etc/karma/client.key
  #   annotations:
  #     default:
  #       hidden: false
  #     hidden:
  #       - help
  #     visible: []
  #   filters:
  #     default:
  #       - "@receiver=by-cluster-service"
  #   labels:
  #     color:
  #       static:
  #         - job
  #       unique:
  #         - cluster
  #         - instance
  #         - "@receiver"
  #     keep: []
  #     strip: []
  #   listen:
  #     address: "0.0.0.0"
  #     port: 8080
  #     prefix: /
  #   log:
  #     config: false
  #     level: info
  #   jira:
  #     - regex: DEVOPS-[0-9]+
  #       uri: https://jira.example.com
  #   receivers:
  #     keep: []
  #     strip: []
  #   sentry:
  #     private: secret
  #   public: 123456789

# Names of secrets that will be mounted to `/etc/certs/<secret_name>` in the karma container.
# These secrets can be used to configure TLS for Karma's Alertmanagers by passing their paths to
# the appropriate Karma configuration parameters. For example, secret `foo` containing a `ca.crt`
# will yield a file at `/etc/certs/foo/ca.crt`. That path can then be provided as the value to
# `configMap.rawConfig.alertmanager.servers[].tls.ca`.
# See <https://github.com/prymitive/karma/blob/master/docs/CONFIGURATION.md#alertmanagers>.
certSecretNames: []
