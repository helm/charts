apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ template "registry.fullname" . }}"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "portus.fullname" . }}"
    component: "docker-registry"
spec:
  replicas: {{ .Values.registry.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ template "portus.fullname" . }}"
        component: "docker-registry"
    spec:
      containers:
      - name: registry
        image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
        imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "registry.secret" . }}
              key: ha-shared-secret
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: {{ template "registry.secret" . }}
              key: s3-access-key
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: {{ template "registry.secret" . }}
              key: s3-secret-key
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
{{ toYaml .Values.registry.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 5000
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/docker/registry
          name: config
          readOnly: true
        - mountPath: /etc/ssl/docker
          name: tls-cert
          readOnly: true
        - mountPath: /etc/ssl/portus
          name: portus-tls-cert
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ template "registry.configmap" . }}
      - name: tls-cert
        secret:
          secretName: {{ .Values.registry.fqdn }}.tls
      - name: portus-tls-cert
        secret:
          secretName: {{ .Values.portus.fqdn }}.tls
