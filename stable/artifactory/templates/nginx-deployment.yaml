{{- if .Values.nginx.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "artifactory.nginx.fullname" . }}
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.nginx.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "artifactory.name" . }}
        component: "{{ .Values.nginx.name }}"
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
    {{- if .Values.nginx.persistence.enabled }}
      initContainers:
      - name: "remove-lost-found"
        image: "{{ .Values.initContainerImage }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        command:
        - '/bin/sh'
        - '-c'
        - 'rm -rfv {{ .Values.nginx.persistence.mountPath }}/lost+found'
        volumeMounts:
        - mountPath: {{ .Values.nginx.persistence.mountPath | quote }}
          name: nginx-volume
    {{- end }}
      containers:
      - name: {{ .Values.nginx.name }}
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.version }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        lifecycle:
          postStart:
            exec:
              command:
              - '/bin/sh'
              - '-c'
              - >
                until [ -f /etc/nginx/conf.d/artifactory.conf ]; do sleep 1; done;
                sed -i -e 's,proxy_pass .*,proxy_pass     http://{{ template "artifactory.fullname" . }}:{{ .Values.artifactory.externalPort }}/artifactory/;,g' \
                    -e 's,server_name .*,server_name ~(?<repo>.+)\\.{{ template "artifactory.fullname" . }} {{ template "artifactory.fullname" . }};,g' \
                    /etc/nginx/conf.d/artifactory.conf;
                sleep 5; nginx -s reload; touch /var/log/nginx/conf.done
        env:
        - name: ART_BASE_URL
          {{- if .Values.nginx.env.artUrl }}
          value: {{ .Values.nginx.env.artUrl }}
          {{- else }}
          value: "http://{{ template "artifactory.fullname" . }}:{{ .Values.artifactory.externalPort }}/artifactory"
          {{- end }}
        - name: SSL
          value: "{{ .Values.nginx.env.ssl }}"
        ports:
        - containerPort: {{ .Values.nginx.internalPortHttp }}
        - containerPort: {{ .Values.nginx.internalPortHttps }}
        volumeMounts:
        - name: nginx-volume
          mountPath: {{ .Values.nginx.persistence.mountPath | quote }}
        {{- if .Values.nginx.tlsSecretName }}
        - name: ssl-secret-volume
          mountPath: "/var/opt/jfrog/nginx/ssl"
        {{- end }}
        resources:
{{ toYaml .Values.nginx.resources | indent 10 }}
      volumes:
      - name: nginx-volume
      {{- if .Values.nginx.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.nginx.persistence.existingClaim | default (include "artifactory.nginx.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- if .Values.nginx.tlsSecretName }}
      - name: ssl-secret-volume
        secret:
          secretName: {{ .Values.nginx.tlsSecretName }}
      {{- end -}}
{{- end }}
