apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "artifactory.artifactory.fullname" . }}
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.artifactory.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.artifactory.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "artifactory.name" . }}
        component: "{{ .Values.artifactory.name }}"
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      initContainers:
      - name: "remove-lost-found"
        image: "{{ .Values.initContainerImage }}"
        imagePullPolicy: {{ .Values.artifactory.image.pullPolicy }}
        command:
        - 'sh'
        - '-c'
        - 'rm -rfv {{ .Values.artifactory.persistence.mountPath }}/lost+found'
        volumeMounts:
        - mountPath: {{ .Values.artifactory.persistence.mountPath | quote }}
          name: artifactory-volume
      - name: "wait-for-db"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - 'until nc -z -w 2 {{ template "artifactory.database.name" . }} {{ .Values.database.externalPort }} && echo database ok; do sleep 2; done'
      containers:
      - name: {{ .Values.artifactory.name }}
        image: "{{ .Values.artifactory.image.repository }}:{{ .Values.artifactory.image.version }}"
        imagePullPolicy: {{ .Values.artifactory.image.pullPolicy }}
        env:
        - name: DB_TYPE
          value: {{ .Values.database.env.type }}
        - name: DB_USER
          value: {{ .Values.database.env.user }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "artifactory.fullname" . }}
              key: artifactory-database-password
        - name: DB_HOST
          value: {{ template "artifactory.database.name" . }}
        - name: EXTRA_JAVA_OPTIONS
          value: "-Xms{{ .Values.artifactory.resources.requests.memory }}g -Xmx{{ .Values.artifactory.resources.limits.memory }}g"
        ports:
        - containerPort: {{ .Values.artifactory.internalPort }}
        volumeMounts:
        - name: artifactory-volume
          mountPath: {{ .Values.artifactory.persistence.mountPath | quote }}
        resources:
          requests:
            memory: "{{ .Values.artifactory.resources.requests.memory }}Gi"
            cpu: "{{ .Values.artifactory.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.artifactory.resources.limits.memory }}.5Gi"
            cpu: "{{ .Values.artifactory.resources.limits.cpu }}"
        readinessProbe:
          httpGet:
            path: '/artifactory/webapp/#/login'
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: '/artifactory/webapp/#/login'
            port: 8081
          initialDelaySeconds: 180
          periodSeconds: 10
      volumes:
      - name: artifactory-volume
      {{- if .Values.artifactory.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "artifactory.artifactory.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
