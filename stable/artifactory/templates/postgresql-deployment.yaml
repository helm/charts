apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "artifactory.database.fullname" . }}
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.database.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "artifactory.name" . }}
        component: "{{ .Values.database.name }}"
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "{{ .Values.initContainerImage }}"
        imagePullPolicy: "{{ .Values.database.image.pullPolicy }}"
        command:
        - 'sh'
        - '-c'
        - 'rm -rf {{ .Values.database.persistence.mountPath }}/lost+found'
        volumeMounts:
        - mountPath: {{ .Values.database.persistence.mountPath | quote }}
          name: postgresql-volume
      containers:
      - name: {{ .Values.database.name }}
        image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.version }}"
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        env:
        - name: POSTGRES_DB
          value: {{ .Values.database.env.name }}
        - name: POSTGRES_USER
          value: {{ .Values.database.env.user }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "artifactory.fullname" . }}
              key: artifactory-database-password
        ports:
        - containerPort: {{ .Values.database.internalPort }}
        volumeMounts:
        - mountPath: {{ .Values.database.persistence.mountPath | quote }}
          name: postgresql-volume
        resources:
{{ toYaml .Values.database.resources | indent 10 }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
      volumes:
      - name: postgresql-volume
      {{- if .Values.database.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "artifactory.database.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
