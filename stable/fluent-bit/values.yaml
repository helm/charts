# Minikube stores its logs in a separate directory.
# enable if started in minikube.
on_minikube: false

image:
  fluent_bit:
    repository: fluent/fluent-bit
    tag: 1.1.0
  pullPolicy: Always

testFramework:
  image: "dduportal/bats"
  tag: "0.4.0"

nameOverride: ""
fullnameOverride: ""

# When enabled, exposes json and prometheus metrics on {{ .Release.Name }}-metrics service
metrics:
  enabled: false
  service:
    annotations: {}
    # In order for Prometheus to consume metrics automatically use the following annotations:
    # prometheus.io/path: "/api/v1/metrics/prometheus"
    # prometheus.io/port: "2020"
    # prometheus.io/scrape: "true"
    port: 2020
    type: ClusterIP

# When enabled, fluent-bit will keep track of tailing offsets across pod restarts.
trackOffsets: false

## PriorityClassName
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: ""

env: []

## Annotations to add to the DaemonSet's Pods
podAnnotations: {}

## By default there different 'files' provides in the config
## (fluent-bit.conf, custom_parsers.conf). This defeats
## changing a configmap (since it uses subPath). If this
## variable is set, the user is assumed to have provided,
## in 'existingConfigMap' the entire config (etc/*) of fluent-bit,
## parsers and system config. In this case, no subPath is
## used
fullConfigMap: false

## ConfigMap override where fullname is {{.Release.Name}}-{{.Values.existingConfigMap}}
## Defining existingConfigMap will cause templates/config.yaml
## to NOT generate a ConfigMap resource
##
existingConfigMap: ""


# NOTE If you want to add extra sections, add them here, inbetween the includes,
# wherever they need to go. Sections order matters.

rawConfig: |-
  @INCLUDE fluent-bit-service.conf
  @INCLUDE fluent-bit-input.conf
  @INCLUDE fluent-bit-filter.conf
  @INCLUDE fluent-bit-output.conf


## Extra ports to add to the daemonset ports section
extraPorts: []

## Extra volumes containing additional files required for fluent-bit to work
## (eg. CA certificates)
## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
##
extraVolumes: []

## Extra volume mounts for the fluent-bit pod.
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
##
extraVolumeMounts: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 10m
  #   memory: 8Mi

# When enabled, pods will bind to the node's network namespace.
hostNetwork: false

# Which DNS policy to use for the pod.
# Consider switching to 'ClusterFirstWithHostNet' when 'hostNetwork' is enabled.
dnsPolicy: ClusterFirst

## Node tolerations for fluent-bit scheduling to nodes with taints
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
##
tolerations: []
# - key: "key"
#  operator: "Equal|Exists"
#  value: "value"
#  effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

## Node labels for fluent-bit pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
affinity: {}

service:
  flush: 1
  logLevel: info

inputs:
  - Name: "tail"
    Mem_Buf_Limit: 5MB
    Parser: docker
    Path: /var/log/containers/*.log
    Tag: kube
#  - Name: "systemd"
#    Systemd_Filter:
#      systemdUnit:
#        - docker.service
#        - kubelet.service
#        - node-problem-detector.service
#    maxEntries: 1000
#    readFromTail: true
#    tag: host.*

filters:
  - Name: "kubernetes"
    Kube_URL: https://kubernetes.default.svc:443
    Kube_CA_File: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File: /var/run/secrets/kubernetes.io/serviceaccount/token
    Match: kube
    Kube_Tag_Prefix: kube.var.log.containers.
    # If true, check to see if the log field content is a JSON string map, if so,
    # it append the map fields as part of the log structure.
    Merge_Log: "On"
    # If true, enable the use of monitoring for a pod annotation of
    # fluentbit.io/parser: parser_name. parser_name must be the name
    # of a parser contained within parsers.conf
    K8S-Logging.Parser: "On"
    # If true, enable the use of monitoring for a pod annotation of
    # fluentbit.io/exclude: true. If present, discard logs from that pod.
    K8S-Logging.Exclude: "True"

backend:
  type: "forward"
  outputs:
    - Name: "forward"
      Match: "*"
      Host: fluentd
      Port: 24284
      tls: "Off"
      tls_verify: "On"
      tls_debug: 1
    - Name: "es"
      Match: "*"
      Host: elasticsearch
      Port: 9200
      # Elastic Index Name
      Index: kubernetes_cluster
      Type: flb_type
      Logstash_Prefix: kubernetes_cluster
      replace_dots: "On"
      Time_Key: "@timestamp"
      # Optional TLS encryption to ElasticSearch instance
      tls: "Off"
      tls_verify: "Off"
      # TLS debugging levels = 1-4
      tls_debug: 1
    - Name: "splunk"
      Match: "*"
      Host: 127.0.0.1
      Port: 8088
      Splunk_Send_Raw: "on"
      tls: "On"
      tls_verify: "Off"
      tls_debug: 1
      Message_Key: "kubernetes"
    - Name: "http"
      Match: "*"
      Host: 127.0.0.1
      Port: 80
      URI: "/"
      tls: "Off"
      tls_verify: "On"
      tls_debug: 1
      ## Specify the data format to be used in the HTTP request body
      ## Can be either 'msgpack' or 'json'
      Format: msgpack

parsers:
  ## To disable the default parsers set this to false
  enableDefaults: false
  ## Add your custom parsers here.
  custom: []
  ## Example of custom parser config:
  ## custom:
  ##  - Name: json
  ##    Format: json
  ##    Time_Key: time
  ##    Time_Format: "%Y-%m-%dT%H:%M:%S.%L"
  ##    Decode_Field_As: "escaped log"

rbac:
  # Specifies whether RBAC resources should be created
  create: true

taildb:
  directory: /var/lib/fluent-bit

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
