apiVersion: v1
kind: Pod
metadata:
  name: "{{.Values.container.name}}"
  labels:
    name: "{{.Values.container.name}}"
    # The "heritage" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    heritage: {{.Release.Service | quote }}
    # The "release" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    release: {{.Release.Name | quote }}
    # This makes it easy to audit chart usage.
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  # This shows how to use a simple value. This will look for a passed-in value
  # called restartPolicy. If it is not found, it will use the default value.
  # {{default "Never" .restartPolicy}} is a slightly optimized version of the
  # more conventional syntax: {{.restartPolicy | default "Never"}}
  restartPolicy: {{default "Never" .Values.restartPolicy}}
  containers:
  - name: {{.Values.container.name}}
    image: "{{.Values.image.repository}}/{{.Values.image.container}}:{{.Values.image.tag}}"
    readinessProbe:
      exec:
        command:
        - "/opt/cpm/bin/readiness.sh"
      initialDelaySeconds: 10
      timeoutSeconds: 1
    livenessProbe:
      exec:
        command:
        - "/opt/cpm/bin/liveness.sh"
      initialDelaySeconds: 120
      timeoutSeconds: 1
    ports:
    - containerPort: {{.Values.container.port}}
      protocol: TCP
    env:
    - name: PGHOST
      value: /tmp
    - name: PG_PRIMARY_USER
      value: primaryuser
    - name: PG_MODE
      value: primary
    - name: PG_PRIMARY_PORT
      value: "{{.Values.container.port}}"
    - name: PG_PRIMARY_PASSWORD
      value: "{{.Values.credentials.primary}}"
    - name: PG_USER
      value: testuser
    - name: PG_PASSWORD
      value: "{{.Values.credentials.user}}"
    - name: PG_DATABASE
      value: userdb
    - name: PG_ROOT_PASSWORD
      value: "{{.Values.credentials.root}}"
    resources:
      requests:
        cpu: {{ .Values.resources.cpu }}
        memory: {{ .Values.resources.memory }}
    volumeMounts:
    - mountPath: "/pgdata"
      name: pgdata
      readOnly: false
    - mountPath: "/backup"
      name: backup
      readOnly: true
  volumes:
  - name: pgdata
    emptyDir: {}
  - name: backup
    emptyDir: {}
