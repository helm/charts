apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        component: master
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.master.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.master.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations:
{{ toYaml .Values.master.tolerations | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 0
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "fullname" . }}{{ else }}default{{ end }}
      initContainers:
        - name: copy-default-config
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: {{ .Values.master.image.pullPolicy }}
          command:
            - sh
            - /var/jenkins_config/apply_config.sh
          volumeMounts:
            - name: config-volume
              mountPath: /var/jenkins_config
            - name: persistent-storage
              mountPath: /var/jenkins_home
            - name: plugins-volume
              mountPath: /usr/share/jenkins/ref/plugins/
            - name: secrets-volume
              mountPath: /usr/share/jenkins/ref/secrets/
      containers:
        - name: master
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
          imagePullPolicy: "{{ .Values.master.image.pullPolicy }}"
          {{- if .Values.master.useSecurity }}
          args:
            - --argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)
            - --argumentsRealm.roles.$(ADMIN_USER)=admin
          {{- end }}
          env:
            {{- range $key, $value := .Values.master.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- if .Values.master.useSecurity }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: admin-user
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
            {{- if .Values.agent.enabled }}
            - name: agent-listener
              containerPort: {{ .Values.agent.listenerPort }}
            {{- end }}
            {{- if .Values.master.jmxPort }}
            - name: jmx
              containerPort: {{ .Values.master.jmxPort }}
            {{- end }}
          resources:
{{ toYaml .Values.master.resources | indent 12 }}
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: persistent-storage
              readOnly: false
            - mountPath: /var/jenkins_config
              name: config-volume
              readOnly: true
            - mountPath: /usr/share/jenkins/ref/plugins/
              name: plugins-volume
              readOnly: false
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-volume
              readOnly: false
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "fullname" . }}
        - name: plugins-volume
          emptyDir: {}
        - name: secrets-volume
          emptyDir: {}
        - name: persistent-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
