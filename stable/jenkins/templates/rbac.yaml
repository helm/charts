{{ if .Values.rbac.create }}
{{- $serviceName := include "jenkins.fullname" . -}}

# This role is used to allow Jenkins scheduling of agents via Kubernetes plugin.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $serviceName }}-schedule-agents
  namespace: {{ .Values.Master.SlaveKubernetesNamespace | default .Release.Namespace}}
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["*"]

---

# We bind the role to the Jenkins service account. The role binding is created in the namespace
# where the agents are supposed to run.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $serviceName }}-schedule-agents
  namespace: {{ .Values.Master.SlaveKubernetesNamespace | default .Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $serviceName }}-schedule-agents
subjects:
- kind: ServiceAccount
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}

---

# The sidecar container which is responsible for reloading configuration changes
# needs permissions to watch ConfigMaps
{{- if .Values.Master.Sidecars.configAutoReload}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "jenkins.fullname" . }}-casc-reload
  namespace: {{ .Release.Namespace}}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $serviceName }}-watch-configmaps
  namespace: {{ .Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "jenkins.fullname" . }}-casc-reload
subjects:
- kind: ServiceAccount
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}

{{- end}}

---

# Additional ClusterRoleBinding / RoleBinding
{{ if .Values.rbac.additionalRoleBinding }}
{{- if .Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1beta1" }}
apiVersion: rbac.authorization.k8s.io/v1beta1
{{- else if .Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1alpha1" }}
apiVersion: rbac.authorization.k8s.io/v1alpha1
{{- else }}
apiVersion: rbac.authorization.k8s.io/v1
{{- end }}
kind: {{ .Values.rbac.roleBindingKind }}
metadata:
  name: {{ $serviceName }}-role-binding
  labels:
    app: {{ $serviceName }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ .Values.rbac.roleKind }}
  name: {{ .Values.rbac.roleRef }}
subjects:
- kind: ServiceAccount
  name: {{ $serviceName }}
  namespace: {{ .Release.Namespace }}
{{ end }}


{{ end }}
