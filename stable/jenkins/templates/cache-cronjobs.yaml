{{- /* create list of agents */}}
{{- $_ := set .Values "agentList" (list .Values.agent) }}
{{- range $name, $additionalAgent := .Values.additionalAgents }}
    {{- /* merge .Values.agent into additional agent to ensure it at least has the default values */}}
    {{- $_ := set $.Values "agentList" (append $.Values.agentList (merge $additionalAgent $.Values.agent)) }}
{{- end }}
{{- range $agent := .Values.agentList }}
{{- if $agent.cache.clear.enabled }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ tpl ($agent.cache.clear.componentName | required "cache clear componentName is required") $ }}
  labels:
    "app.kubernetes.io/name": '{{ template "jenkins.name" $ }}'
    "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    "app.kubernetes.io/managed-by": "{{ $.Release.Service }}"
    "app.kubernetes.io/instance": "{{ $.Release.Name }}"
    "app.kubernetes.io/component": "{{ $.Values.master.componentName }}"
spec:
  concurrencyPolicy : "Forbid"
  failedJobsHistoryLimit : 5
  successfulJobsHistoryLimit: 5
  schedule: "{{ $agent.cache.clear.schedule }}"
  jobTemplate:
    spec:
      backoffLimit: 6
      template:
        metadata:
          labels:
            "app.kubernetes.io/name": '{{ template "jenkins.name" $ }}'
            "helm.sh/chart": "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
            "app.kubernetes.io/managed-by": "{{ $.Release.Service }}"
            "app.kubernetes.io/instance": "{{ $.Release.Name }}"
            "app.kubernetes.io/component": "{{ $.Values.master.componentName }}"
        spec:
          volumes:
          - name: cache-volume
            persistentVolumeClaim:
              claimName: {{ tpl ($agent.cache.clear.claimName | required "cache clear.claimName is required") $ }}
          containers:
          - name: {{ tpl ($agent.cache.clear.componentName | required "cache clear componentName is required") $ }}
            image: "docker-registry.default.svc:5000/{{ $agent.cache.clear.image }}:{{ $agent.cache.clear.tag }}"
            volumeMounts:
            - mountPath: {{ tpl ($agent.cache.clear.mountPath | required "cache mountPath is required") $ }}
              name: cache-volume
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 500m
                memory: 512Mi
            command:
            - /bin/sh
            - -c
            - |
              cd {{ tpl ($agent.cache.clear.mountPath | required "cache mountPath is required") $ }}
              {{- tpl $agent.cache.clear.command $ | nindent 14 }}
          restartPolicy: OnFailure
{{- end }}
{{- end }}
{{- $_ := unset .Values "agentList" }}