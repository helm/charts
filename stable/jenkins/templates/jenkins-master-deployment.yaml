apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.master.name}}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.master.component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.master.component}}"
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
              {
                  "name": "copy-default-config",
                  "image": "{{.Values.master.image}}:{{.Values.master.imageTag}}",
                  "imagePullPolicy": "{{.Values.master.imagePullPolicy}}",
                  "command": [ "sh", "/var/jenkins_config/apply_config.sh" ],
                  "volumeMounts": [
                      {
                          "name": "jenkins-config",
                          "mountPath": "/var/jenkins_config"
                      },
                      {
                          "name": "jenkins-home",
                          "mountPath": "/var/jenkins_home"
                      },
                      {
                          "name": "plugin-dir",
                          "mountPath": "/usr/share/jenkins/ref/plugins/"
                      },
                      {
                          "name": "secrets-dir",
                          "mountPath": "/usr/share/jenkins/ref/secrets/"
                      }
                  ]
              }
          ]'
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: {{ template "fullname" . }}
          image: "{{.Values.master.image}}:{{.Values.master.imageTag}}"
          imagePullPolicy: "{{.Values.master.imagePullPolicy}}"
          {{- if .Values.master.useSecurity }}
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          {{- end }}
          env:
            - name: JAVA_OPTS
              value: "{{ default "" .Values.master.javaOpts}}"
            {{- if .Values.master.useSecurity }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: jenkins-admin-user
            {{- end }}
          ports:
            - containerPort: {{.Values.master.containerPort}}
              name: http
            - containerPort: {{.Values.master.agentListenerPort}}
              name: slavelistener
          resources:
            requests:
              cpu: "{{.Values.master.cpu}}"
              memory: "{{.Values.master.memory}}"
          volumeMounts:
{{- if .Values.persistence.mounts }}
{{ toYaml .Values.persistence.mounts | indent 12 }}
{{- end }}
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
{{- if .Values.persistence.volumes }}
{{ toYaml .Values.persistence.volumes | indent 6 }}
{{- end }}
      - name: jenkins-config
        configMap:
          name: {{ template "fullname" . }}
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
