master:
  overwritePluginsFromImage: false
  runAsUser: 0
  fsGroup: 1000
  JCasC:
    authorizationStrategy: |-
      loggedInUsersCanDoAnything:
        allowAnonymousRead: true
    securityRealm: |-
      ldap:
        configurations:
          - server: ldap.acme.com
            rootDN: dc=acme,dc=uk
            managerPasswordSecret: ${LDAP_PASSWORD}
            groupMembershipStrategy:
              fromUserRecord:
                attributeName: "memberOf"
  additionalPlugins:
    - ldap:1.24
  scriptApproval:
    - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
    - "new groovy.json.JsonSlurperClassic"

persistence:
  enabled: false

agent:
  resources:
    limits:
      cpu: "1"
      memory: "2048Mi"
  envVars:
    - name: HOME
      value: /home/jenkins
    - name: PATH
      value: /usr/local/bin
  nodeSelector:
    "app.kubernetes.io/component": "{{ .Values.agent.componentName }}"
  yamlTemplate: |-
    apiVersion: v1
    kind: Pod
    spec:
      tolerations:
        - key: "app.kubernetes.io/component"
          operator: "Equal"
          value: "{{ .Values.agent.componentName }}"
          effect: "NoSchedule"
  additionalAgents:
    maven:
      podName: maven
      customJenkinsLabels: maven
      # An example of overriding the jnlp container
      # sideContainerName: jnlp
      image: jenkins/jnlp-agent-maven
      tag: latest
    python:
      podName: python
      customJenkinsLabels: python
      sideContainerName: python
      image: python
      tag: "3"
      command: "/bin/sh -c"
      args: "cat"
      TTYEnabled: true
  podTemplates:
    python: |
      - name: python
        label: jenkins-python
        containers:
          - name: python
            image: python:3
            command: "/bin/sh -c"
            args: "cat"
            ttyEnabled: true
            privileged: true
            resourceRequestCpu: "400m"
            resourceRequestMemory: "512Mi"
            resourceLimitCpu: "1"
            resourceLimitMemory: "1024Mi"
  volumes:
    - type: EmptyDir
      mountPath: /var/myapp/myemptydir
      memory: false
serviceAccount:
  annotations:
    description: "Used by release {{ .Release.Name }} for role-based access control"
serviceAccountAgent:
  create: true
  annotations:
    description: "Used by release {{ .Release.Name }} for role-based access control"
