# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

master:
  name: jenkins-master
  image: "jenkinsci/jenkins"
  imageTag: "2.46.1"
  imagePullPolicy: "Always"
  component: "jenkins-master"
  useSecurity: true
  adminUser: admin
# adminPassword: <defaults to random>
  cpu: "200m"
  memory: "256Mi"
# Set min/max heap here if needed with:
# javaOpts: "-Xms512m -Xmx512m"
  servicePort: 8080
# For minikube, set this to nodePort, elsewhere use LoadBalancer
# Use ClusterIP if your setup includes ingress controller
  serviceType: LoadBalancer
# Used to create ingress record (should used with serviceType: ClusterIP)
# hostName: jenkins.cluster.local
# nodePort: <to set explicitly, choose port between 30000-32767
  containerPort: 8080
  agentListenerPort: 50000
  loadBalancerSourceRanges:
  - 0.0.0.0/0
# List of plugins to be install during Jenkins master start
  installPlugins:
      - kubernetes:0.11 
      - workflow-aggregator:2.5
      - credentials-binding:1.11
      - git:3.2.0
# Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  # scriptApproval:
  #   - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
  #   - "new groovy.json.JsonSlurperClassic"
# List of groovy init scripts to be executed during Jenkins master start
  initScripts:
#  - |
#    print 'adding global pipeline libraries, register properties, bootstrap jobs...'
  customConfigMap: false

  ingress:
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    tls:
      # - secretName: jenkins.cluster.local
      #   hosts:
      #     - jenkins.cluster.local

agent:
  enabled: true
  image: jenkinsci/jnlp-slave
  imageTag: 2.62
  cpu: "200m"
  memory: "256Mi"

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## If defined, volume.beta.kubernetes.io/storage-class: <StorageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  accessMode: ReadWriteOnce
  size: 8Gi
  volumes:
#  - name: nothing
#    emptyDir: {}
  mounts:
#  - mountPath: /var/nothing
#    name: nothing
#    readOnly: true
