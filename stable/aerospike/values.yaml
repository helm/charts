# Default values for aerospike.
terminationGracePeriodSeconds: 30
replicaCount: 1
nodeSelector: {}
image:
  repository: aerospike/aerospike-server
  tag: 4.5.0.5
  pullPolicy: IfNotPresent

# pass custom command. This is equivalent of Entrypoint in docker
command: []

# pass custom args. This is equivalent of Cmd in docker
args: []

# Set as empty object {} if no volumes need to be created
# See confFile below
persistentVolume: {}
  # - mountPath: /opt/aerospike/data
  #   name: aerospike-data
  #   template:
  #     accessModes: [ "ReadWriteOnce" ]
  #     # storageClassName:  "standard"
  #     resources:
  #       requests:
  #         storage: "36G"
  #     selector:
  #       matchLabels:
  #         diskname: "aerospike-data"

service:
  type: ClusterIP
  # Provide any additional annotations which may be required.
  # The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
  annotations: {}
  loadBalancerIP:
  clusterIP: None
  # This field takes a list of IP CIDR ranges, which Kubernetes will use to configure firewall exceptions
  # loadBalancerSourceRanges:
  # - 10.0.0.0/8
  nodePort: {}

# turns on a sidecar that scrapes 'localhost:3000' and exposes to port 9134
# a docker image built from this repo works well: https://github.com/alicebob/asprom
# but you will need to build/host it yourself
metrics:
  serviceMonitor: {}

labels: {}
annotations: {}

tolerations: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

confFile: |-
  #default config file
  service {
      user root
      group root
      paxos-protocol v5
      paxos-single-replica-limit 1
      pidfile /var/run/aerospike/asd.pid
      service-threads 4
      transaction-queues 4
      transaction-threads-per-queue 4
      proto-fd-max 15000
  }

  logging {
      file /var/log/aerospike/aerospike.log {
          context any info
      }

      console {
          context any info
      }
  }

  network {
      service {
          address any
          port 3000
      }

      heartbeat {
          address any
          interval 150
          #REPLACE_THIS_LINE_WITH_MESH_CONFIG
          mode mesh
          port 3002
          timeout 20
          protocol v3
      }

      fabric {
          port 3001
      }

      info {
          port 3003
      }
  }

  namespace test {
      replication-factor 2
      memory-size 1G
      default-ttl 5d
      storage-engine device {
          file /opt/aerospike/data/test.dat
          filesize 4G
      }
  }
