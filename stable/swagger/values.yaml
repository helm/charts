replicaCount: 1

env:
  # API_URL is a location of swagger.json file
  # e.g.:
  #   http://generator.swagger.io/api/swagger.json
  API_URL:

# External dependencies, used for enhanced authentication
nginx-ingress:
  enabled: true
cert-manager:
  enabled: true
oauth-proxy:
  enabled: true

image:
  repository: swaggerapi/swagger-ui
  tag: v3.9.3
  pullPolicy: IfNotPresent

service:
  name: http
  protocol: TCP
  type: NodePort
  externalPort: 80
  internalPort: 8080

ingress:
  enabled: false
  # e.g.:
  # - swagger.example.com
  hostname:

  ##  When using nginx-ingress & cert-manager, set these annotations,
  ##      and use the below tls setup
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'
  tls: []
  # - hosts:
  #   - swagger.example.com
  #   secretName: swagger-tls

  ##  NOTE: if using nginx-ingress version < 0.9.0, these annotations will not work
  ##       because they should not be prefixed with `nginx`
  ##       see: https://github.com/kubernetes/ingress-nginx/issues/1885
  basicAuth:
    enabled: false
    # use `htpasswd -n <username>` to generate a password for htpasswd file
    #   default maps to:  admin:test
    secret: YWRtaW46JGFwcjEkUm4zVHBwNDUkb2VOd0JoeWtWWHh0bUNmNnJ1Y2VaMAo=
    basicAuthAnnotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"


  ##  When using nginx-ingress & cert-manager & oauth-proxy, use these values
  oauth:
    enabled: false
    oauthAnnotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start
      nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth

resources: {}
