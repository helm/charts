1. Accessing Swagger:

{{- if .Values.ingress.enabled }}
  http://{{ .Values.ingress.hostname }}/

{{- else if contains "NodePort" .Values.service.type }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "swagger.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/

{{- else if contains "LoadBalancer" .Values.service.type }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "swagger.fullname" . }}'


  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "swagger.fullname" . }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
  echo http://$SERVICE_IP/

{{- else if contains "ClusterIP" .Values.service.type }}

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "swagger.fullname" . }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward $POD_NAME {{ .Values.service.internalPort }}:{{ .Values.service.internalPort }}
  echo http://127.0.0.1:{{ .Values.service.internalPort }}/
{{- end }}
