apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "kafka-manager.fullname" . }}
  labels:
    app: {{ template "kafka-manager.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "kafka-manager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kafka-manager.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
            - name: ZK_HOSTS
              value: {{ .Values.zookeeperHosts }}
            - name: KM_ARGS
              value: {{ .Values.customArgs }}
            - name: JAVA_OPTS
              value: {{ .Values.javaOptions }}
            - name: APPLICATION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "kafka-manager.fullname" . }}
                  key: applicationSecret
            - name: KAFKA_MANAGER_AUTH_ENABLED
              value: {{ .Values.basicAuth.enabled | quote }}
            - name: KAFKA_MANAGER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "kafka-manager.fullname" . }}
                  key: basicAuthUsername
            - name: KAFKA_MANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "kafka-manager.fullname" . }}
                  key: basicAuthPassword
          livenessProbe:
            httpGet:
              path: /api/status/clusters
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/status/clusters
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}