image:
  repository: quay.io/bitnami/sealed-secrets-controller
  tag: v0.9.7
  pullPolicy: IfNotPresent

resources: {}
nodeSelector: {}
tolerations: []
affinity: {}

controller:
  # controller.create: `true` if Sealed Secrets controller should be created
  create: true

serviceAccount:
  # serviceAccount.create: Whether to create a service account or not
  create: true
  # serviceAccount.name: The name of the service account to create or use
  name: ""

rbac:
  # rbac.create: `true` if rbac resources should be created
  create: true
  pspEnabled: false

# secretName: The name of the TLS secret containing the key used to encrypt secrets
secretName: "sealed-secrets-key"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /v1/cert.pem
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

crd:
  # crd.create: `true` if the crd resources should be created
  create: true
  # crd.keep: `true` if the sealed secret CRD should be kept when the chart is deleted
  keep: true

networkPolicy: false

securityContext:
  # securityContext.runAsUser defines under which user the operator Pod and its containers/processes run.
  runAsUser: 1001

podAnnotations: {}

priorityClassName: ""
