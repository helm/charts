## WARNING: make sure to replace this in your configuration or use existingAccountSecretSecret
accountSecret: SBZYPEOQK7TWABPRW2LSSYWDI7O7TWZQZUH4RUUNEAUGNVHKKUH4Y6QF
# existingAccountSecretSecret:
#   name: stellar-friendbot
#   key: accountSecret

networkPassphrase: Test SDF Network ; September 2015

horizonUrl: https://horizon-testnet.stellar.org

startingBalance: 10000

environment: {}

image:
  repository: satoshipay/stellar-friendbot
  tag: '0.13.0'
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingress:
  enabled: false

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
  - name: stellar-friendbot.local

    ## Set this to true in order to enable TLS on the ingress record
    tls: false

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: stellar-friendbot.local-tls

    ## Ingress annotations done as key:value pairs
    ## If you're using kube-lego, you will want to add:
    ## kubernetes.io/tls-acme: true
    ##
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
    annotations:
    #  kubernetes.io/ingress.class: nginx
    #  kubernetes.io/tls-acme: true

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using kube-lego, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: stellar-friendbot.local-tls
  #   key:
  #   certificate:

resources:
  requests:
    cpu: 10m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  create: true
  name:
