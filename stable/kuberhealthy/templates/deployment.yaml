apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    app: kuberhealthy
  name: kuberhealthy
  namespace: kuberhealthy
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: kuberhealthy
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.maxSurge }}
      maxUnavailable: {{ .Values.deployment.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kuberhealthy
    spec:
      serviceAccountName: kuberhealthy
      automountServiceAccountToken: true
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name: kuberhealthy
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 310
{{- if .Values.tolerations.master }}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
{{- end -}}
