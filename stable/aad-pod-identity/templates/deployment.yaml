apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
    component: {{ .Values.nmi.component }}
    tier: node
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
  annotations:
    description: {{ .Chart.Description }}
  name: {{ template "aad-pod-identity.nmi.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      labels:
        component: {{ .Values.nmi.component }}
        tier: node
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "aad-pod-identity.nmi.serviceaccountname" . }}
      {{- end }}
      hostNetwork: true
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: iptableslock
      containers:
      - name: nmi
        image: "{{ .Values.image.repository }}/{{ .Values.nmi.image }}:{{ .Values.nmi.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        args:
          - "--host-ip=$(HOST_IP)"
          - "--node=$(NODE_NAME)"
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FORCENAMESPACED
            value: "{{ .Values.forceNameSpaced }}"
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: iptableslock
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
{{- with .Values.resources }}
        resources:
{{ toYaml .Values.nmi.resources | indent 12 }}
{{- end }}
{{- with .Values.nmi.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.nmi.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.nmi.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    component: {{ .Values.mic.component }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
  name: {{ template "aad-pod-identity.mic.fullname" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    description: {{ .Chart.Description }}
spec:
  replicas: 2
  template:
    metadata:
      labels:
        component: {{ .Values.mic.component }}
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "aad-pod-identity.mic.serviceaccountname" . }}
      {{- end }}
      containers:
      - name: mic
        image: "{{ .Values.image.repository }}/{{ .Values.mic.image }}:{{ .Values.mic.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        args:
          {{- if not .Values.adminsecret }}
          - "--cloudconfig=/etc/kubernetes/azure.json"
          {{- end }}
          - "--logtostderr"
          {{- if .Values.mic.logVerbosity }}
          - -v={{ .Values.mic.logVerbosity }}
          {{- end }}
        env:
          - name: FORCENAMESPACED
            value: "{{ .Values.forceNameSpaced }}"
          {{- if .Values.adminsecret }}
          - name: CLOUD
            valueFrom:
              secretKeyRef:
                key: Cloud
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: SUBSCRIPTION_ID
            valueFrom:
              secretKeyRef:
                key: SubscriptionID
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: RESOURCE_GROUP
            valueFrom:
              secretKeyRef:
                key: ResourceGroup
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: VM_TYPE
            valueFrom:
              secretKeyRef:
                key: VMType
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: TENANT_ID
            valueFrom:
              secretKeyRef:
                key: TenantID
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: ClientID
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: ClientSecret
                name: {{ template "aad-pod-identity.mic.adminsecretname" . }}
          {{- end }}
        volumeMounts:
          - name: certificates
            mountPath: /etc/kubernetes/certs
            readOnly: true
          {{- if not .Values.adminsecret }}
          - name: k8s-azure-file
            mountPath: /etc/kubernetes/azure.json
            readOnly: true
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
{{- with .Values.mic.resources }}
        resources:
{{ toYaml .Values.mic.resources | indent 12 }}
{{- end }}
      volumes:
      - name: certificates
        hostPath:
          path: /etc/kubernetes/certs
      {{- if not .Values.adminsecret }}
      - name: k8s-azure-file
        hostPath:
          path: /etc/kubernetes/azure.json
      {{- end }}
{{- with .Values.mic.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.mic.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.mic.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}