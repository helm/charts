{{- if and .Values.alertmanager.enabled .Values.alertmanager.statefulSet.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "prometheus.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.alertmanager.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "prometheus.alertmanager.fullname" . }}
spec:
  serviceName: {{ template "prometheus.alertmanager.fullname" . }}-headless
  selector:
    matchLabels:
      app: {{ template "prometheus.name" . }}
      component: "{{ .Values.alertmanager.name }}"
      release: {{ .Release.Name }}
  replicas: {{ .Values.alertmanager.replicaCount }}
  podManagementPolicy: {{ .Values.alertmanager.statefulSet.podManagementPolicy }}
  template:
    metadata:
    {{- if .Values.alertmanager.podAnnotations }}
      annotations:
{{ toYaml .Values.alertmanager.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "prometheus.name" . }}
        component: "{{ .Values.alertmanager.name }}"
        release: {{ .Release.Name }}
    spec:
{{- if .Values.alertmanager.affinity }}
      affinity:
{{ toYaml .Values.alertmanager.affinity | indent 8 }}
{{- end }}
{{- if .Values.alertmanager.schedulerName }}
      schedulerName: "{{ .Values.alertmanager.schedulerName }}"
{{- end }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.alertmanager" . }}
{{- if .Values.alertmanager.priorityClassName }}
      priorityClassName: "{{ .Values.alertmanager.priorityClassName }}"
{{- end }}
      containers:
        - name: {{ template "prometheus.name" . }}-{{ .Values.alertmanager.name }}
          image: "{{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.image.tag }}"
          imagePullPolicy: "{{ .Values.alertmanager.image.pullPolicy }}"
          env:
            {{- range $key, $value := .Values.alertmanager.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path={{ .Values.alertmanager.persistentVolume.mountPath }}
            - --cluster.advertise-address=$(POD_IP):6783
          {{- range $key, $value := .Values.alertmanager.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.alertmanager.baseURL }}
            - --web.external-url={{ .Values.alertmanager.baseURL }}
          {{- end }}

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: {{ .Values.alertmanager.prefixURL }}/#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .Values.alertmanager.persistentVolume.mountPath }}"
              subPath: "{{ .Values.alertmanager.persistentVolume.subPath }}"
        - name: {{ template "prometheus.name" . }}-{{ .Values.alertmanager.name }}-{{ .Values.configmapReload.name }}
          image: "{{ .Values.configmapReload.image.repository }}:{{ .Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ .Values.configmapReload.image.pullPolicy }}"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093{{ .Values.alertmanager.prefixURL }}/-/reload
          resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
    {{- if .Values.alertmanager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.securityContext }}
      securityContext:
{{ toYaml .Values.alertmanager.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.tolerations }}
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.affinity }}
      affinity:
{{ toYaml .Values.alertmanager.affinity | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ if .Values.alertmanager.configMapOverrideName }}{{ .Release.Name }}-{{ .Values.alertmanager.configMapOverrideName }}{{- else }}{{ template "prometheus.alertmanager.fullname" . }}{{- end }}
{{- if .Values.alertmanager.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- if .Values.alertmanager.persistentVolume.annotations }}
        annotations:
{{ toYaml .Values.alertmanager.persistentVolume.annotations | indent 10 }}
        {{- end }}
      spec:
        accessModes:
{{ toYaml .Values.alertmanager.persistentVolume.accessModes | indent 10 }}
        resources:
          requests:
            storage: "{{ .Values.alertmanager.persistentVolume.size }}"
      {{- if .Values.server.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.server.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.alertmanager.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
        - name: storage-volume
          emptyDir: {}
{{- end }}
{{- end }}
