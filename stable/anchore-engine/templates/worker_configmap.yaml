kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ template "worker.fullname" . }}"
  labels:
    app: "{{ template "fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: worker
data:
  config.yaml: |
    # Anchore Service Configuration File

    # General system-wide configuration options, these should not need to
    # be altered for basic operation
    #
    service_dir: {{ .Values.globalConfig.configDir }}
    tmp_dir: {{ default "/tmp" .Values.workerConfig.analyzerScratchDir }}

    allow_awsecr_iam_auto: {{ .Values.globalConfig.allowECRUseIAMRole }}
    cleanup_images: {{ .Values.globalConfig.cleanupImages }}

    #docker_conn: 'unix://var/run/docker.sock'
    #docker_conn_timeout: 600

    log_level: {{ .Values.workerConfig.logLevel }}
    #host_id: 'e3651c16-5161-412f-a188-2bfae2d2dcf0'
    internal_ssl_verify: {{ .Values.globalConfig.internalServicesSslVerifyCerts }}

    #
    # A feeds section is available for override, but shouldn't be
    # needed. By default, the 'admin' credentials are used if present,
    # otherwise anonymous access for feed sync is used

    credentials:
      users:
         admin:
           password: ${ANCHORE_ADMIN_PASSWORD}
           email: 'admin@myemail.com'
           external_service_auths:
           #  anchoreio:
           #    anchorecli:
           #      auth: 'myanchoreiouser:myanchoreiopass'
           #auto_policy_sync: true

      database:
        db_connect: "postgresql+pg8000://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_HOST}:5432/${ANCHORE_DB}"
        db_connect_args:
          timeout: 120
          ssl: {{ .Values.globalConfig.dbConfig.ssl }}
        db_pool_size: {{ .Values.globalConfig.dbConfig.connectionPoolSize }}
        db_pool_max_overflow: {{ .Values.globalConfig.dbConfig.connectionPoolSize }}
    services:
      analyzer:
        enabled: true
        cycle_timer_seconds: {{ .Values.workerConfig.cycleTimerSeconds }}
        max_threads: {{ .Values.workerConfig.concurrentTasksPerWorker }}
        analyzer_driver: {{ .Values.workerConfig.analyzerMode }}
        ssl_cert: {{ .Values.workerConfig.ssl.certDir -}}/{{- .Values.workerConfig.ssl.certSecretCertName }}
        ssl_key: {{ .Values.workerConfig.ssl.certDir -}}/{{ .Values.workerConfig.ssl.certSecretKeyName }}
        ssl_enable: {{ .Values.globalConfig.internalServicesSslEnabled }}

