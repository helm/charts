{{- $component := "catalog" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "anchore-engine.catalog.fullname" . }}"
  labels:
    app: "{{ template "anchore-engine.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ $component }}
spec:
  selector:
    matchLabels:
      app: "{{ template "anchore-engine.fullname" . }}"
      component: {{ $component }}
  replicas: {{ .Values.anchoreCatalog.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "anchore-engine.fullname" . }}"
        component: {{ $component }}
{{- if .Values.anchoreCatalog.annotations }}
      annotations:
{{ toYaml .Values.anchoreCatalog.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-{{ $component }}
        image: {{ .Values.anchoreGlobal.image.repository }}:{{ .Values.anchoreGlobal.image.tag }}
        imagePullPolicy: {{ .Values.anchoreGlobal.image.pullPolicy }}
        command: ["/usr/local/bin/anchore-manager"]
        args: ["service", "start", "catalog"]
        envFrom:
        - secretRef:
            name: {{ template "anchore-engine.fullname" . }}
        - configMapRef:
            name: {{ template "anchore-engine.fullname" . }}
        env:
        - name: ANCHORE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: catalog
          containerPort: {{ .Values.anchoreGlobal.service.ports.catalog }}
        volumeMounts:
        - name: config-volume
          mountPath: /config/config.yaml
          subPath: config.yaml
        {{- if .Values.anchoreGlobal.internalServicesSslEnabled }}
        - name: certs
          mountPath: {{ default "/certs" .Values.anchoreGlobal.internalServicesSsl.certDir }}
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: catalog
          initialDelaySeconds: 10
          periodSeconds: 60
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: catalog
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
        resources:
{{ toYaml .Values.anchoreCatalog.resources | indent 10 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "anchore-engine.fullname" .}}
        {{- if .Values.anchoreGlobal.internalServicesSslEnabled }}
        - name: certs
          secret:
            secretName: {{ .Values.anchoreGlobal.internalServicesSsl.certSecret }}
        {{- end }}
    {{- if .Values.anchoreCatalog.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.anchoreCatalog.nodeSelector | indent 8 }}
    {{- end }}
    {{- with .Values.anchoreCatalog.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.anchoreCatalog.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "anchore-engine.catalog.fullname" . }}
  labels:
    app: {{ template "anchore-engine.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ $component }}
spec:
  type: {{ .Values.anchoreGlobal.service.type }}
  ports:
    - name: anchore-catalog-api
      port: {{ .Values.anchoreGlobal.service.ports.catalog }}
      targetPort: {{ .Values.anchoreGlobal.service.ports.catalog }}
      protocol: TCP
  selector:
    app: {{ template "anchore-engine.fullname" . }}
    component: {{ $component }}
