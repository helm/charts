{{- if and .Values.anchoreEnterpriseGlobal.enabled .Values.anchoreEnterpriseFeeds.enabled -}}
{{- $component := "enterprise-feeds" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "anchore-engine.enterprise-feeds.fullname" . }}
  labels:
    app: {{ template "anchore-engine.fullname" . }}
    component: {{ $component }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "anchore-engine.fullname" . }}
      component: {{ $component }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "anchore-engine.fullname" . }}
        component: {{ $component }}
      {{- with .Values.anchoreEnterpriseFeeds.annotations }}
      annotations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "anchore-engine.enterprise-feeds.fullname" . }}
        - name: {{ $component}}-scratch
          {{ toYaml .Values.anchoreGlobal.scratchVolume.details | nindent 10 | trim }}
        - name: anchore-license
          secret:
            secretName: {{ .Values.anchoreEnterpriseGlobal.licenseSecretName }}
      imagePullSecrets:
      - name: {{ .Values.anchoreEnterpriseGlobal.imagePullSecretName }}
      containers:
      {{- if .Values.cloudsql.enabled  }}
      - name: cloudsql-proxy
        image: {{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}
        imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy }}
        command: ["/cloud_sql_proxy"]
        args: ["-instances={{ .Values.cloudsql.instance }}=tcp:5432"]
      {{- end }}
      - name: "{{ .Chart.Name }}-{{ $component }}"
        image: {{ .Values.anchoreEnterpriseGlobal.image }}
        imagePullPolicy: {{ .Values.anchoreEnterpriseGlobal.imagePullPolicy }}
        command: ["anchore-enterprise-manager"]
        args: ["service", "start", "feeds"]
        ports:
        - containerPort: {{ .Values.anchoreEnterpriseFeeds.service.port }}
          name: feeds-api
        envFrom:
        - secretRef:
            name: {{ default (include "anchore-engine.fullname" .) .Values.anchoreGlobal.existingSecret }}
        env:
        {{- with .Values.anchoreGlobal.extraEnv }}
        {{- toYaml . | nindent 8 | trim }}
        {{- end }}
        {{- with .Values.anchoreEnterpriseFeeds.extraEnv }}
        {{- toYaml . | nindent 8 | trim }}
        {{- end }}
        {{- if and (index .Values "anchore-feeds-db" "externalEndpoint") (not (index .Values "anchore-feeds-db" "enabled")) }}
        - name: ANCHORE_DB_HOST
          value: {{ index .Values "anchore-feeds-db" "externalEndpoint" | quote }}
        {{- else if and (index .Values "cloudsql" "enabled") (not (index .Values "anchore-feeds-db" "enabled")) }}
        - name: ANCHORE_DB_HOST
          value: "localhost:5432"
        {{- else }}
        - name: ANCHORE_DB_HOST
          value: "{{ template "postgres.anchore-feeds-db.fullname" . }}:5432"
        {{- end }}
        - name: ANCHORE_DB_NAME
          value: {{ index .Values "anchore-feeds-db" "postgresDatabase" | quote }}
        - name: ANCHORE_DB_USER
          value: {{ index .Values "anchore-feeds-db" "postgresUser"  | quote }}
        - name: ANCHORE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config-volume
          mountPath: /config/config.yaml
          subPath: config.yaml
        - name: {{ $component }}-scratch
          mountPath: {{ .Values.anchoreGlobal.scratchVolume.mountPath }}
        - name: anchore-license
          mountPath: /home/anchore/license.yaml
          subPath: license.yaml
        livenessProbe:
          httpGet:
            path: /health
            port: feeds-api
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: feeds-api
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        resources:
          {{ toYaml .Values.anchoreEnterpriseFeeds.resources | nindent 10 | trim }}
      {{- with .Values.anchoreEnterpriseFeeds.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.anchoreEnterpriseFeeds.nodeSelector | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.anchoreEnterpriseFeeds.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.anchoreEnterpriseFeeds.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "anchore-engine.enterprise-feeds.fullname" . }}
  labels:
    app: {{ template "anchore-engine.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ $component }}
  {{- with .Values.anchoreEnterpriseFeeds.service.annotations }}
  annotations:
    {{ toYaml . | nindent 4 | trim }}
  {{- end }}
spec:
  type: {{ .Values.anchoreEnterpriseFeeds.service.type }}
  ports:
    - name: feeds-api
      port: {{ .Values.anchoreEnterpriseFeeds.service.port }}
      targetPort: {{ .Values.anchoreEnterpriseFeeds.service.port }}
      protocol: TCP
  selector:
    app: {{ template "anchore-engine.fullname" . }}
    component: {{ $component }}

{{- end -}}
