image:
  repository: docker.elastic.co/beats/filebeat-oss
  tag: 6.5.4
  pullPolicy: IfNotPresent

# modulesExistingConfigmap: ""
modulesConfig: []
# - module: traefik
#   access:
#     enabled: true
#     var.paths: [/hello/world]
# - module: monogodb:
#   log:
#     enabled: true
#     var.paths: ["/path/to/log/mongodb/*.log*"]

# Specifies the configmap name with filebeat.yml
# existingConfigmap: ""
config:
  filebeat.config:
    # Filebeat configs for inputs and modules
    inputs:
      path: ${path.config}/prospectors.d/*.yml
      reload.enabled: false
    modules:
      # Note: modules path will be overriden if modulesConfig is provided!!
      path: ${path.config}/modules.d/*.yml
      reload.enabled: false

  # Inputs list (the bellow are enabled by default)
  filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /var/log/*.log
        - /var/log/messages
        - /var/log/syslog
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
        - drop_event:
            when:
              equals:
                kubernetes.container.name: "filebeat"

  processors:
    - add_cloud_metadata:

  # Default filebeat output. Only one must be enabled!
  # So when enabling another output set output.file.enabled = false
  output.file:
    path: "/usr/share/filebeat/data"
    filename: filebeat
    rotate_every_kb: 10000
    number_of_files: 5

  # When a key contains a period, use this format for setting values on the command line:
  # --set config."http\.enabled"=true
  http.enabled: false
  http.port: 5066

# Upload index template to Elasticsearch if Logstash output is enabled
# https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-template.html
# List of Elasticsearch hosts
indexTemplateLoad: []
  # - elasticsearch:9200

# List of beat plugins
plugins: []
  # - kinesis.so

# pass custom command. This is equivalent of Entrypoint in docker
command: []

# pass custom args. This is equivalent of Cmd in docker
args: []

# A list of additional environment variables
extraVars: []
  # - name: TEST1
  #   value: TEST2
  # - name: TEST3
  #   valueFrom:
  #     configMapKeyRef:
  #       name: configmap
  #       key: config.key

# Add additional volumes and mounts, for example to read other log files on the host
extraVolumes: []
  # - hostPath:
  #     path: /var/log
  #   name: varlog
extraVolumeMounts: []
  # - name: varlog
  #   mountPath: /host/var/log
  #   readOnly: true

extraInitContainers: []
  # - name: echo
  #   image: busybox
  #   imagePullPolicy: Always
  #   args:
  #     - echo
  #     - hello

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 200Mi
  # requests:
  #  cpu: 100m
  #  memory: 100Mi

priorityClassName: ""

nodeSelector: {}

annotations: {}

tolerations: []
  # - operator: Exists

affinity: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

## Specify if a Pod Security Policy for filebeat must be created
## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  enabled: False
  annotations: {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
