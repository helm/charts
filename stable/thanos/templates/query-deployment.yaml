{{- with .Values.queryLayer -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {{- .deploymentAnnotations | default dict | toYaml | trim | nindent 4 }}
  labels: {{- include "thanos.query.labels" $ | nindent 4 }}
  name: {{ print (include "thanos.fullname" $) "-" .component | quote }}
spec:
  selector:
    matchLabels:
{{ include "thanos.query.matchLabels" $ | indent 6 }}
  replicas: {{ .replicaCount }}
  strategy: {{- .strategy | default dict | toYaml | trim | nindent 4 }}
  template:
    metadata:
      annotations: {{- .podAnnotations | default dict | toYaml | trim | nindent 8 }}
      labels: {{- include "thanos.query.labels" $ | nindent 8 }}
    spec:
      affinity: {{- .affinity | default dict | toYaml | trim | nindent 8 }}
      {{- if .priorityClassName }}
      priorityClassName:  {{ .priorityClassName | quote }}
      {{- end }}
      containers:
        - name: thanos-query
          image: {{ print .image.repository ":" .image.tag | quote }}
          imagePullPolicy: {{ .image.pullPolicy | quote }}
          args:
            - query
            {{- range .binaryArgs }}
            - {{ . }}
            {{- end }}
            - '--http-address=0.0.0.0:10902'
            - '--grpc-address=0.0.0.0:10901'
            {{- if .pointToLocalStore }}
            - '--store=dns+{{ print (include "thanos.fullname" $) "-" $.Values.storeLayer.component }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.storeLayer.storeApiService.servicePort }}'
            {{- end }}
            {{- if .pointToLocalSidecars }}
            - '--store=dns+{{ print (include "thanos.fullname" $) "-" $.Values.sidecarLayer.component }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.sidecarLayer.storeApiService.servicePort }}'
            {{- end }}
            {{- if .pointToLocalRulers }}
            {{- range $element_index, $pod_index :=  (untilStep 1 (int (add $.Values.ruleLayer.replicaCount 1)) 1) }}
            - '--store=dns+{{ print (include "thanos.fullname" $) "-" $.Values.ruleLayer.component "-" $element_index }}.{{ print (include "thanos.fullname" $) "-store-" $.Values.ruleLayer.component  }}:{{ $.Values.ruleLayer.storeApiService.servicePort }}'
            {{- end }}
            {{- end }}
          env:
          {{- if .secret.google }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/secret/google
          {{- end }}
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: 10902
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 10902
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources: {{- .resources | default dict | toYaml | trim | nindent 12 }}
          volumeMounts:
          {{- if .secret }}
            - name: secret-volume
              mountPath: /etc/secret/
          {{- end }}
      imagePullSecrets:
      {{- range $.Values.imagePullSecrets }}
      {{- . | default dict | toYaml | trim | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .secret }}
        - name: secret-volume
          secret:
            secretName: {{ print (include "thanos.fullname" $) "-" .component | quote }}
      {{- end }}
      nodeSelector: {{- .nodeSelector | default dict | toYaml | trim | nindent 8 }}
      securityContext: {{- .securityContext | default dict | toYaml | trim | nindent 8 }}
      tolerations: {{- .tolerations | default list | toYaml | trim | nindent 8 }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
{{- end -}} {{/* if .enabled */}}
{{- end -}} {{/* with .Values.queryLayer */}}