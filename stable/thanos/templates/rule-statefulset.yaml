{{- with .Values.ruleLayer -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {{- .deploymentAnnotations | default dict | toYaml | trim | nindent 4 }}
  labels: {{- include "thanos.rule.labels" $ | nindent 4 }}
  name: {{ print (include "thanos.fullname" $) "-" .component | quote }}
spec:
  {{- if .persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-data
      labels: {{- include "thanos.rule.matchLabels" $ | nindent 8 }}
    storageClassName: {{ .persistence.storageClassName | quote }}
    spec:
      accessModes:
      {{- range .persistence.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .persistence.size | trim | quote }}
  {{- end }}
  serviceName: {{ print (include "thanos.fullname" $) "-store-" .component  | quote }}
  selector:
    matchLabels:
{{ include "thanos.rule.matchLabels" $ | indent 6 }}
  replicas: {{ .replicaCount }}
  updateStrategy: {{- .strategy | default dict | toYaml | trim | nindent 4 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/rule-configmap.yaml") $ | sha256sum }}
        checksum/config-alert: {{ include (print $.Template.BasePath "/rule-rules-configmap.yaml") $ | sha256sum }}
      {{- if .podAnnotations }}
      {{- .podAnnotations | default dict | toYaml | trim | nindent 8 }}
      {{- end }}
      labels: {{- include "thanos.rule.labels" $ | nindent 8 }}
    spec:
      affinity: {{- .affinity | default dict | toYaml | trim | nindent 8 }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName | quote | trim }}
      {{- end }}
      subdomain: {{ print (include "thanos.fullname" $) "-store-" .component  | quote }}
      containers:
        - name: thanos-rule
          image: {{ print .image.repository ":" .image.tag | quote  }}
          imagePullPolicy: {{ .image.pullPolicy | quote | trim }}
          args:
            - rule
            {{- if .persistence.enabled }}
            - '--data-dir={{ .persistence.mountPath }}'
            {{- end }}
            {{- if .pointToLocalQuery.enabled }}
            - '--query={{ print (include "thanos.fullname" $) "-" $.Values.queryLayer.component "-http" }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.queryLayer.queryApiService.servicePort }}{{ .pointToLocalQuery.uri }}'
            {{- end }}
            - '--http-address=0.0.0.0:10902'
            {{- range .binaryArgs }}
            - {{ . }}
            {{- end }}
            {{- if .rules }}
            - '--rule-file=/etc/thanos-rules/rules.yaml'
            {{- end }}
          ports:
            - name: ui
              containerPort: 10902
          resources: {{- .resources | default dict | toYaml | trim | nindent 12 }}
          volumeMounts:
          {{- if .persistence.enabled }}
            - mountPath: {{ .persistence.mountPath }}
              name: persistent-data
          {{- end }}
          {{- range .extraEmptyDirMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- if .configMap }}
            - name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
              mountPath: {{ .configMap.mountPath }}
          {{- end }}
          {{- if .rules }}
            - name: {{ print (include "thanos.fullname" $) "-" .component "-rules" | quote }}
              mountPath: /etc/thanos-rules/
          {{- end }}
          {{- if .secret }}
            - name: secret-volume
              mountPath: /etc/secret/
          {{- end }}
          env:
          {{- if .secret.google }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/secret/google
          {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      imagePullSecrets:
      {{- range $.Values.imagePullSecrets }}
      {{- . | default dict | toYaml | trim | nindent 8 }}
      {{- end }}
      nodeSelector: {{- .nodeSelector | default dict | toYaml | trim | nindent 8 }}
      securityContext: {{- .securityContext | default dict | toYaml | trim | nindent 8 }}
      tolerations: {{- .tolerations | default list | toYaml | trim | nindent 8 }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      volumes:
      {{- if .secret }}
        - name: secret-volume
          secret:
            secretName: {{ print (include "thanos.fullname" $) "-" .component | quote }}
      {{- end }}
      {{- range .extraEmptyDirMounts }}
        - name: {{ .name }}
          emptyDir: {}
      {{- end }}
      {{- if .configMap }}
        - name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
          configMap:
            name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
      {{- end }}
      {{- if .rules }}
        - name: {{ print (include "thanos.fullname" $) "-" .component "-rules" | quote }}
          configMap:
            name: {{ print (include "thanos.fullname" $) "-" .component "-rules" | quote }}
      {{- end }}
{{- end -}}  {{/* if .enabled */}}
{{- end -}}  {{/* if .Values.ruleLayer */}}