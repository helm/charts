{{- with .Values.storeLayer -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {{- .statefulSetAnnotations | default dict | toYaml | trim | nindent 4 }}
  labels: {{- include "thanos.store.labels" $ | nindent 4 }}
  name: {{ print (include "thanos.fullname" $) "-" .component | quote }}
spec:
  {{- if .persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-data
      labels: {{- include "thanos.store.matchLabels" $ | nindent 8 }}
    spec:
      accessModes:
      {{- range .persistence.accessModes }}
      - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .persistence.size | trim | quote }}
      storageClassName: {{ .persistence.storageClassName | quote }}
  {{- end }}
  serviceName: {{ print (include "thanos.name" $) "-store" | quote }}
  selector:
    matchLabels:
{{ include "thanos.store.matchLabels" $ | indent 6 }}
  replicas: {{ .replicaCount }}
  template:
    metadata:
      annotations: {{- .podAnnotations | default dict | toYaml | trim | nindent 8 }}
      labels: {{- include "thanos.store.labels" $ | nindent 8 }}
    spec:
      affinity: {{- .affinity | default dict | toYaml | trim | nindent 8 }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName | quote }}
      {{- end }}
      containers:
        - name: thanos-store
          image: {{ print .image.repository ":" .image.tag | quote }}
          imagePullPolicy: {{ .image.pullPolicy | quote  }}
          args:
            - store
            {{- if .persistence.enabled }}
            - '--data-dir={{ .persistence.mountPath }}'
            {{- end }}
            {{- range .binaryArgs }}
            - {{ . }}
            {{- end }}
            - '--grpc-address=0.0.0.0:10901'
          ports:
            - name: grpc
              containerPort: 10901
          resources: {{- .resources | default dict | toYaml | trim | nindent 12 }}
          volumeMounts:
          {{- range .extraEmptyDirMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- if .configMap }}
            - name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
              mountPath: {{ .configMap.mountPath }}
          {{- end }}
          {{- if .secret }}
            - name: secret-volume
              mountPath: /etc/secret/
          {{- end }}
          {{- if .persistence.enabled }}
            - mountPath: {{ .persistence.mountPath }}
              name: persistent-data
          {{- end }}
          env:
          {{- if .secret.google }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/secret/google
          {{- end }}
      imagePullSecrets:
      {{- range $.Values.imagePullSecrets }}
      {{- . | default dict | toYaml | trim | nindent 8 }}
      {{- end }}
      nodeSelector:  {{- .nodeSelector | default dict | toYaml | trim | nindent 8 }}
      securityContext: {{- .securityContext | default dict | toYaml | trim | nindent 8 }}
      tolerations: {{- .tolerations | default list | toYaml | trim | nindent 8 }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      volumes:
      {{- if .secret }}
        - name: secret-volume
          secret:
            secretName: {{ print (include "thanos.fullname" $) "-" .component | quote }}
      {{- end }}
      {{- range .extraEmptyDirMounts }}
        - name: {{ .name }}
          emptyDir: {}
      {{- end }}
      {{- if .configMap }}
        - name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
          configMap:
            name: {{ print (include "thanos.fullname" $) "-" .component "-" .configMap.name | quote }}
      {{- end }}
{{- end -}} {{/* if .enabled */}}
{{- end -}} {{/* with .Values.storeLayer */}}